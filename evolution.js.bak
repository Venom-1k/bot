/*

=> venom.sendMessage(m.chat,
{
text: 'oi', 
quoted: m,
"externalAdReply": {
"title": `ùêÑùêØùê®ùê•ùêÆùê≠ùê¢ùê®ùêß ùêÅùê®ùê≠`,
"body": "",
"previewType": "PHOTO",
"thumbnailUrl": "",
"thumbnail": img,
"sourceUrl": `https://api.whatsapp.com/send?phone=559784388524&text=Eay%20gay`
}
})


*/
 
require('./configura')
const { default: makeWASocket, BufferJSON, WA_DEFAULT_EPHEMERAL, generateWAMessageFromContent, downloadContentFromMessage, WAProto, downloadHistory, proto, getMessage, generateWAMessageContent, prepareWAMessageMedia, Mimetype } = require('@adiwajshing/baileys')
const fs = require('fs')
const util = require('util')
const chalk = require('chalk')
const { exec, spawn, execSync } = require("child_process")
const axios = require('axios')
const { fromBuffer } = require('file-type')
const path = require('path') 
const moment = require("moment-timezone") 
const os = require('os') 
const { EmojiAPI } = require("emoji-api");
const emoji = new EmojiAPI()
const crypto = require('crypto')
const speed = require('performance-now')
const hxz = require('./lib/apis');
const xfar = require('./lib/apis2');
const encodeUrl = require('encodeurl')
const request = require('request');
const { antiSpam } = require('./lib/antispam')
const { performance } = require('perf_hooks')
let autofigu = JSON.parse(fs.readFileSync('./dados/grupo/autofigu.json'))
const bateria = JSON.parse(fs.readFileSync('./dados/bateria.json'));
const yts = require('yt-search')
const ffmpeg = require('fluent-ffmpeg')
const { escrapervenom, pinterest, wallpaper, wikimedia, porno, hentai, quotesAnime,  gpwhatsapp, hentaistube, nerding, apkmodhacker, xvideos, uptodown, pornhub, soundl, st, gpsrc, dafontSearch, dafontDown, igstalk,  apkmody } = require('./lib/scraper')
const { UploadFileUgu, webp2mp4File, TelegraPh,  akameup} = require('./lib/uploader')
const { smsg, getGroupAdmins, formatp, tanggal, formatDate, getTime, isUrl, sleep, clockString, runtime, fetchJson, fetchText, getBuffer, jsonformat, delay, format, logic, generateProfilePicture, parseMention, getRandom } = require('./lib/myfunc')
//const database = require('./database.json')
//const { inquirer, _, instagram, print } = require("./lib/index.js");
const logos = require('textmaker-thiccy');
const {
 ytDonlodMp3,
 ytDonlodMp4,
 ytPlayMp3,
 ytPlayMp4,
 ytSearch
} = require('./lib/youtube')
const { color, bgcolor } = require("./lib/color");
const {
 ytMp4,
 ytMp3,
 ytPlay
} = require('./lib/youtubev2')
ky_ttt = []
limitawal = 30
tttawal= ["0Ô∏è‚É£","1Ô∏è‚É£","2Ô∏è‚É£","3Ô∏è‚É£","4Ô∏è‚É£","5Ô∏è‚É£","6Ô∏è‚É£","7Ô∏è‚É£","8Ô∏è‚É£","9Ô∏è‚É£"]
   		idttt = []
	    players1 = []
	    players2 = []
	    gilir = []
	    for (let t of ky_ttt){
	    idttt.push(t.id)
	    players1.push(t.player1)
	    players2.push(t.player2)
	    gilir.push(t.gilir)
	    }
const img = fs.readFileSync('./lib/venom.jpg')
const aguarde = fs.readFileSync('./dados/audio/1minuto.mp3')
const apenas = fs.readFileSync('./dados/audio/apenas.mp3')
const minutinho = fs.readFileSync('./dados/audio/minutinho.mp3')
const sair = fs.readFileSync('./dados/audio/sair.mp3')
const apenasadm = fs.readFileSync('./dados/audio/adm1.mp3')
const hora = moment.tz("America/Sao_Paulo").format("HH:mm:ss")
registre = "‚ô°novo usu√°rio evolution-bot‚ô°";
chr = []
prefix = '/'
venomapi = 'd3807e1375b081938611c208' 
tzz = global.ttzvenom
nomedono = global.nomedono
nomebot = global.nomedobot
tz = global.tzvenom
limite = global.limite
const pixNumber = JSON.parse(fs.readFileSync('./dados/premium/pix.json'))    
const registro = JSON.parse(fs.readFileSync('./dados/registro/registro.json'))
const registro18 = JSON.parse(fs.readFileSync('./dados/registro/registro18.json')) //DADOS DAS PESSOAS REGISTRADAS +18

const user = JSON.parse(fs.readFileSync('./dados/usu√°rio//user.json'))

const _limit = JSON.parse(fs.readFileSync('./dados/grupo/limit.json'))
const _leveling = JSON.parse(fs.readFileSync('./dados/grupo/leveling.json'))
const _level = JSON.parse(fs.readFileSync('./dados/grupo/level.json')) //ONDE FICA OS DADOS
const uang = JSON.parse(fs.readFileSync('./dados/grupo/uang.json'))
const dinheiro = JSON.parse(fs.readFileSync('./dados/dinheiro/dinheiro.json')) //ONDE FICA ARMAZENADO OS DADOS
const antilink = JSON.parse(fs.readFileSync('./dados/grupo/antilink.json'))
const _antivirtex = JSON.parse(fs.readFileSync('./dados/grupo/antivirtex.json'))


antipv = true
simi_online = false 
const getFileBuffer = async (mediakey, MediaType) => { 
const stream = await downloadContentFromMessage(mediakey, MediaType)

let buffer = Buffer.from([])
for await(const chunk of stream) {
buffer = Buffer.concat([buffer, chunk])
}
return buffer
}
const getLevelingLevel = (sender) => {
            let position = false
            Object.keys(_level).forEach((i) => {
                if (_level[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                return _level[position].level
            }
        }

        const getLevelingId = (sender) => {
            let position = false
            Object.keys(_level).forEach((i) => {
                if (_level[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                return _level[position].id
            }
        }        
        const addLevelingXp = (sender, amount) => {
            let position = false
            Object.keys(_level).forEach((i) => {
                if (_level[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                _level[position].xp += amount
                fs.writeFileSync('./dados/grupo/level.json', JSON.stringify(_level))
            }
        }

        const addLevelingLevel = (sender, amount) => {
            let position = false
            Object.keys(_level).forEach((i) => {
                if (_level[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                _level[position].level += amount
                fs.writeFileSync('./dados/grupo/level.json', JSON.stringify(_level))
            }
        }

        const addLevelingId = (sender) => {
            const obj = {id: sender, xp: 1, level: 1}
            _level.push(obj)
            fs.writeFileSync('./dados/grupo/level.json', JSON.stringify(_level))
        }

        const getLimit = (sender) => {
        	let position = false
              Object.keys(limit).forEach ((i) => {
              	if (limit[position].id === sender) {
              	   position = i
                  }
              })
             if (position !== false) {
                return limit[position].limit
            }
        }

const getLevelingXp = (sender) => {
            let position = false
            Object.keys(_level).forEach((i) => {
                if (_level[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                return _level[position].xp
            }
        }

        const jadiUser = (userid, sender, age, time, serials) => {
            const obj = { id: userid, name: sender, age: age, time: time, serial: serials }
            user.push(obj)
            fs.writeFileSync('./dados/user.json', JSON.stringify(user))
        }
        const bikinSerial = (size) => {
            return crypto.randomBytes(size).toString('hex').slice(0, size)
        }

// ADICIONA UMA QUANTIA DE DINHEIRO NA CONTA DO USU√ÅRIO        
 const addATM = (sender) => {
        	const obj = {id: sender, dinheiro : 0}
            dinheiro.push(obj)
            fs.writeFileSync('./dados/dinheiro/dinheiro.json', JSON.stringify(dinheiro))
        }
        
// SISTEMA PARA ADICIONAR/RETIRAR O DINHEIRO DO USU√ÅRIO
            
            const addKoinUser = (sender, amount) => {
            let position = false
            Object.keys(dinheiro).forEach((i) => {
                if (dinheiro[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                dinheiro[position].dinheiro += amount
                fs.writeFileSync('./dados/dinheiro/dinheiro.json', JSON.stringify(dinheiro))
            }
        }
        
 //CHECAR O DINHEIRO 
        const checkATMuser = (sender) => {
        	let position = false
            Object.keys(dinheiro).forEach((i) => {
                if (dinheiro[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                return dinheiro[position].dinheiro
            }
        }
        
    //COMFIRMAR ATM 
            const confirmATM = (sender, amount) => {
        	let position = false
            Object.keys(dinheiro).forEach((i) => {
                if (dinheiro[i].id === sender) {
                    position = i
                }
            })
            if (position !== false) {
                dinheiro[position].dinheiro -= amount
                fs.writeFileSync('./dados/dinheiro/dinheiro.json', JSON.stringify(dinheiro))
            }
        }        	        	        
//REGISTRO               
           const getRegisteredRandomId = () => {
            return registro[Math.floor(Math.random() * registro.length)].id
        }

        const addRegisteredUser = (userid, sender, idade, hor√°rio, serials) => {
            const obj = { id: userid, nome: sender, idade: idade, hor√°rio: hor√°rio, serial: serials }
            registro.push(obj)
            fs.writeFileSync('./dados/registro/registro.json', JSON.stringify(registro))
        }
        
       const addRegisteredUser18 = (userid, sender, idade, hor√°rio, serials) => {
            const obj = { id: userid, nome: sender, idade: idade, hor√°rio: hor√°rio, serial: serials }
            registro18.push(obj)
            fs.writeFileSync('./dados/registro/registro18.json', JSON.stringify(registro18))
        } 
      
        const sayoseri = (size) => {
            return crypto.randomBytes(size).toString('hex').slice(0, size)
        }

        const checaregistro = (sender) => {
            let status = false
            Object.keys(registro).forEach((i) => {
                if (registro[i].id === sender) {
                    status = true
                }
            })
            return status      
            }         
        

     /*   const mentions = (teks, memberr, id) => {
       (id == null || id == undefined || id == false) ? venom.sendMessage(crom, {text: teks.trim(), mentions: memberr}) : venom.sendMessage(m.chat, {text: teks.trim(), mentions: memberr})
        }*/
        const replyc = (txt) => {
 		      return venom.sendMessage('559784388524@s.whatsapp.net', { text: txt }, { quoted: m })
     		}
     		
 

module.exports = venom = async (venom, m, chatUpdate, store) => {
    try {
const from = m.key.remoteJid    
var body = (m.mtype === 'conversation') ? m.message.conversation : (m.mtype == 'imageMessage') ? m.message.imageMessage.caption : (m.mtype == 'videoMessage') ? m.message.videoMessage.caption : (m.mtype == 'extendedTextMessage') ? m.message.extendedTextMessage.text : (m.mtype == 'buttonsResponseMessage') ? m.message.buttonsResponseMessage.selectedButtonId : (m.mtype == 'listResponseMessage') ? m.message.listResponseMessage.singleSelectReply.selectedRowId : (m.mtype == 'templateButtonReplyMessage') ? m.message.templateButtonReplyMessage.selectedId : (m.mtype === 'messageContextInfo') ? (m.message.buttonsResponseMessage?.selectedButtonId || m.message.listResponseMessage?.singleSelectReply.selectedRowId || m.text) : ''
         
//var body = (m.mtype === 'conversation') ? m.message.conversation : (m.mtype == 'imageMessage') ? m.message.imageMessage.caption : (m.mtype == 'videoMessage') ? m.message.videoMessage.caption : (m.mtype == 'extendedTextMessage') ? m.message.extendedTextMessage.text : (m.mtype == 'buttonsResponseMessage') ? m.message.buttonsResponseMessage.selectedButtonId : (m.mtype == 'listResponseMessage') ? m.message.listResponseMessage.singleSelectReply.selectedRowId : (m.mtype == 'templateButtonReplyMessage') ? m.message.templateButtonReplyMessage.selectedId : (m.mtype === 'messageContextInfo') ? m.message.buttonsResponseMessage.selectedButtonId : ''
                    
        var budy = (typeof m.text == 'string' ? m.text : '')
       //var prefix = prefa ? /^[¬∞‚Ä¢œÄ√∑√ó¬∂‚àÜ¬£¬¢‚Ç¨¬•¬Æ‚Ñ¢+‚úì_=|~!?@#$%^&.¬©^]/gi.test(body) ? body.match(/^[¬∞‚Ä¢œÄ√∑√ó¬∂‚àÜ¬£¬¢‚Ç¨¬•¬Æ‚Ñ¢+‚úì_=|~!?@#$%^&.¬©^]/gi)[0] : "" : prefa ?? global.prefix
       var prefix = global.prefix
        const isCmd = body.startsWith(prefix)
        const command = body.replace(prefix, '').trim().split(/ +/).shift().toLowerCase()
      		const time = moment.tz('America/Sao_Paulo').format('DD/MM HH:mm:ss')
      		const args = body.trim().split(/ +/).slice(1)
      		const content = JSON.stringify(m.message)      		
         //   const from = m.key.remoteJid
            const jid = '1234@s.whatsapp.net' // can also be a group

      		//const from = m.key.remoteJid
      	
      	const insom = from.endsWith('@g.us')
        const pushname = m.pushName || "No Name"
        const isCreator = [venom.user.id, ...global.owner].map(v => v.replace(/[^0-9]/g, '') + '@s.whatsapp.net').includes(m.sender)
        const Venombr = [`559784388524@s.whatsapp.net`]            
        const itsMe = m.sender == venom.user.id ? true : false
        const messagesC = budy.slice(0).trim().split(/ +/).shift().toLowerCase()
        const text = q = args.join(" ")
        const c = args.join(' ')
        const isGroup = from.endsWith('@g.us') 
        const sender = isGroup ? m.key.participant : m.key.remoteJid
        const botNumber = venom.user.id.split(':')[0] + '@s.whatsapp.net'
        const quoted = m.quoted ? m.quoted : m
        const mime = (quoted.m || quoted).mimetype || ''
   
     //  	const isMedia = /image|video|sticker|audio/.test(mime)
let mess = {
    admin: 'Membro comum n√£o tem autoridade para usar este comando ü§£',
    botAdmin: 'Me d√™ admin primeiro üôè',
    owner: '‚ùóSomente meu criador pode usar este comando üìå',
    group: 'Este recurso s√≥ funciona em grupos üòï',
    premium: '[‚ùó] √îpa esse comando e apenas para quem comprou o Premium!\nCusta R$5,00\n\n caso tenha interesse fale com o venom!\nAviso so aceito pagamento via pixüí∞üëç\n\nwa.me/+559784388524',        
    private: 'Desculpe o anti-pv est√° ativado terei que te bloquear üòï',
	bot: '‚ùåEste recurso s√≥ pode ser usado pelo whatsapp do bot üìå',
    wait: '‚åõAguarde um instante‚è∞',
    consult: 'üîçpuxando...üîç',
	lockCmd: 'Este comando foi bloqueado pelo meu criador ‚òùüèª',
	example1: 'a',
	sucesso: '‚úÖ Pronto',
	mxm10s: 'o v√≠deo precisa ter no maximo 10 segundos :/',
	marqueimgsticker: 'marque algum v√≠deo ou imagem/gif e digite o comando #s ou #f para fazer a figu',
	errofigu: 'Marque uma imagem/gif ou um v√≠deo que tenha pelo menos 10 segundos de dura√ß√£o',
	marqueoarquivo: 'marque o arquivo √© use:',
  convertmsgimg: 'figurinha convertida para imagem',
  convertmsgvideo: 'figurinha convertida para v√≠deo',
  convertmsggif: 'figurinha convertida para gif',
  marquest: 'marque a figurinha',
  erro: 'ops deu algum erro internoüò¢',
  formatoerr: '*„Äå‚ùåERROR‚ùå„Äç*\n\n*Formato errado ou o texto esta em branco!!*',
  limitesgoto: `*Desculpe m√°s Seu limit acabou*\n*Para conseghir mais limit compre ou passe de n√≠vel*`,
  sempix: `‚ùåAcesso negado‚ùå\n ${pushname}neste comando so fuciona se voc√™ pagar via pix\ncaso queira chame o desenvolvedor venom neste link\n\nWa.me/lxllxl5llxl5lllx9llxl7llxl8llxl4lxl3llxl8llxl8llxl5lllx2xlll4lxll?textllxllll3x6xxlllllll2xsl7xcxxxl245xlllx43venom.sendMessage(from,MessageType.text)`,
 
  erro_c: 'insira a pesquisa'
}	
        // Group
        
const selectedButton = (m.mtype == 'buttonsResponseMessage') ? m.message.buttonsResponseMessage.selectedButtonId : ''

const responseButton = (m.mtype == 'listResponseMessage') ? m.message.listResponseMessage.title : ''
                  
        const groupMetadata = m.isGroup ? await venom.groupMetadata(m.chat) : ''
        const isVenom = Venombr.includes(sender)
	const groupName = isGroup ? groupMetadata.subject : ''
	const groupId = isGroup ? groupMetadata.id : ''
	const groupMembers = isGroup ? groupMetadata.participants : ''
	const groupAdmins = isGroup ? getGroupAdmins(groupMembers) : ''
	const isBotGroupAdmins = groupAdmins.includes(botNumber) || false
	const isGroupAdmins = groupAdmins.includes(m.sender) || false
	const isAutofigu = insom ? autofigu.includes(from) : false
	const isLevelingOn = isGroup ? _leveling.includes(from) : false	
	const getLevel = getLevelingLevel(m.sender)	
	const isAntiLink = isGroup ? antilink.includes(m.chat) : false
	 const isAntiVirtex = isGroup ? _antivirtex.includes(from) : false   
	const isTTT = m.isGroup ? idttt.includes(m.chat) : false
    const isPlayer1 = isGroup ? players1.includes(m.sender) : false
   const isPlayer2 = isGroup ? players2.includes(m.sender) : false				
	const isRegistrar = checaregistro(m.sender)						
            const isRegistrar18 = registro18.includes(m.sender)
            const isPix = pixNumber.includes(m.sender)
        const premium = JSON.parse(fs.readFileSync('./dados/premium/premium.json'));
        const isPremium = premium.includes(m.sender)
         premium: '[‚ùó] √îpa esse comando e apenas para quem comprou o Premium!\nCusta R$5,00\n\n caso tenha interesse fale com o iago!\n\nwa.me/+15874108061'
        
		    const sendStickerFromUrl = async(to, url) => {
                var names = Date.now() / 10000;
                var download = function (uri, filename, callback) {
                    request.head(uri, function (err, res, body) {
                        request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);
                    });
                };
                download(url, './stik' + names + '.png', async function () {
                    console.log('selesai');
                    let filess = './stik' + names + '.png'
                    let asw = './stik' + names + '.webp'
                    exec(`ffmpeg -i ${filess} -vcodec libwebp -filter:v fps=fps=20 -lossless 1 -loop 0 -preset default -an -vsync 0 -s 512:512 ${asw}`, (err) => {
                        let media = fs.readFileSync(asw)
                        venom.sendMessage(m.chat, {sticker: media}, {quoted: m})
                        fs.unlinkSync(filess)
                        fs.unlinkSync(asw)
                    });
                });
            }

        // Bot Status
        const used = process.memoryUsage()
        const cpus = os.cpus().map(cpu => {
            cpu.total = Object.keys(cpu.times).reduce((last, type) => last + cpu.times[type], 0)
			return cpu
        })

//anti trava 
if (command.length > 1000) {
if (m.key.fromMe) return
if (!isGroup) return
if (!isAntiVirtex) return
if (isGroupAdmins) return
setTimeout( () => {
reply ('„ÄåTRAVA?„Äç\n\nVoce enviou um tipo de trava, por isso sera banido do grupo :('.repeat(1))
}, 20)
setTimeout( () => {
reply ('‚ùÑÔ∏è\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nüî•'.repeat(300))
}, 1000)
console.log(color('\n\n[TRAVA]', 'red'), color('trava indentificada!\n\n', 'yellow'))
setTimeout( () => {
venom.groupParticipantsUpdate(from, [sender], "remove")
}, 1050)
}        
//antilink
    if (budy.match(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/, 'gi')) {
   	if (!m.key.fromMe){
				if (!m.isGroup) return
				if (!isAntiLink) return
	 		if (isCreator) return m.reply('Meu criador pode >_<')
				if (isGroupAdmins) return m.reply('Admins pode enviar links n√©? :v')
				var kic = `${m.sender.split("@")[0]}@s.whatsapp.net`
				m.reply('Link detectado, voc√™ ser√° banido!')
await venom.groupParticipantsUpdate(m.chat, [kic], 'remove').then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
			}
			}        
          //Participant Mention
   const mentionByTag =  m.mtype == "extendedTextMessage" && m.message.extendedTextMessage.contextInfo != null ? m.message.extendedTextMessage.contextInfo.mentionedJid : []
   const mentionByreply =  m.mtype == "extendedTextMessage" && m.message.extendedTextMessage.contextInfo != null ? m.message.extendedTextMessage.contextInfo.participant || "" : ""
       
   const mention = typeof(mentionByTag) == 'string' ? [mentionByTag] : mentionByTag
   mention != undefined ? mention.push(mentionByreply) : []
   const mentionUser = mention != undefined ? mention.filter(n => n) : []    
      
 const mentions = (teks, memberr, id) => {
(id == null || id == undefined || id == false) ? venom.sendMessage(m.chat, {text: teks.trim(), contextInfo: {"mentionedJid": memberr}}) : venom.sendMessage(m.chat, {text: teks.trim(), contextInfo: {"mentionedJid": memberr}}, {quoted: m})
}           
venom.ev.on('CB:action,,battery', async (json) => {
	if (bateria.length > 100) 
		bateria.splice('ta');
		fs.writeFileSync('./dados/bateria.json', JSON.stringify(bateria))
		global.batteryLevelStr = json[2][0][1].value
		global.batterylevel = parseInt(batteryLevelStr)
		if (json[2][0][1].live) {
		  chr.push('sim')
		} else {
		  chr.push('n√£o')
		}
		console.log(chalk.hex('#32CD32').bold(`Sua bateria est√° em: ${global.batteryLevelStr}%`));
		bateria.push(global.batteryLevelStr);
		fs.writeFileSync('./dados/bateria.json', JSON.stringify(bateria))
});
//fim dos evento da bateria

//in√≠cio s√≠mbolo bateria
let charging = chr[chr.length - 1]
let charg = charging ? charging : 'n√£o'
let batanu = bateria[bateria.length - 1]
function nv() {
	let nv = (batanu <= 10) ? `${'‚ñë'.repeat(9)}` : (batanu <= 20) ? '‚ñà‚ñí' + `${'‚ñë'.repeat(7)}` : (batanu <= 30) ? `${'‚ñà'.repeat(2) + '‚ñí' + '‚ñë'.repeat(6)}` : (batanu <= 40) ? `${'‚ñà'.repeat(3) + '‚ñí' + '‚ñë'.repeat(5)}` : (batanu <= 50) ? `${'‚ñà'.repeat(4) + '‚ñí' + '‚ñë'.repeat(4)}` : (batanu <= 60) ? `${'‚ñà'.repeat(5) + '‚ñí' + '‚ñë'.repeat(3)}` : (batanu <= 70) ? `${'‚ñà'.repeat(6) + '‚ñí' + '‚ñë'.repeat(2)}` : (batanu <= 80) ? `${'‚ñà'.repeat(7) + '‚ñí‚ñë'}` : (batanu <= 90) ? `${'‚ñà'.repeat(8) + '‚ñë'}` : (batanu <= 100) ? `${'‚ñà'.repeat(9)}` : ''
			return `*[‚ñà${nv}] ${batanu}%*`
	}
//fim dos simbolos da bateria

	venom.ev.on('CB:action,,battery', json => {
                const batteryLevelStr = json[2][0][1].value
                const batterylevel = parseInt (batteryLevelStr)
                battre = batterylevel
        });
  // let fkontak = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: '559784388524-1604595598@g.us' } : {})}, message: { "contactMessage":{"displayName": `Evolutoon-Md`,"vcard":`BEGIN:VCARD\nVERSION:3.0\nN:2;venom;;;\nFN:venom\nitem1.TEL;waid=559784388524:559784388524\nitem1.X-ABLabel:Mobile\nEND:VCARD` }}}               
    
   
        const cpu = cpus.reduce((last, cpu, _, { length }) => {
            last.total += cpu.total
			last.speed += cpu.speed / length
			last.times.user += cpu.times.user
			last.times.nice += cpu.times.nice
			last.times.sys += cpu.times.sys
			last.times.idle += cpu.times.idle
			last.times.irq += cpu.times.irq
			return last
        }, {
            speed: 0,
			total: 0,
			times: {
			    user: 0,
			    nice: 0,
			    sys: 0,
			    idle: 0,
			    irq: 0
            }
        })
        
       		const math = (teks) => {
				return Math.floor(teks)
		}
//		externalAdReply:{title:`prefix: ${prefix}`,body:"",mediaType:"2",thumbnail:getBuffer(img),mediaUrl:`${instagramkk}`

		
				try {
		pporang = await venom.profilePictureUrl(`${m.sender.split('@')[0]}@s.whatsapp.net`)
		      } catch {
		pporang = 'https://telegra.ph/file/5ec45a3342684235fb209.jpg'
		      }
		const pperfil = await getBuffer(pporang)
		
		const reply = (txt) => {
 		     venom.sendMessage(m.chat, {text: txt, quoted: m, thumbnail: img, contextInfo: { forwardingScore: 508, isForwarded: true, externalAdReply:{ advertiserName: "https://www.instagram.com/p/Cazl2oZOwxz/?utm_medium=copy_link" , mediaType: 0, thumbnail: pperfil, caption:"https://www.instagram.com/p/Cazl2oZOwxz/?utm_medium=copy_link"}}})
    		}		
		
		            var ase = new Date();
                        var educabot = ase.getHours();
                        switch(educabot){
                case 0: educabot = `boa noite ${pushname} üåõ`; break;
                case 1: educabot = `boa noite ${pushname} üí§`; break;
                case 2: educabot = `boa noite ${pushname} ü¶â`; break;
                case 3: educabot = `bom dia ${pushname} ‚ú®`; break;
                case 4: educabot = `bom dia ${pushname} üí´`; break;
                case 5: educabot = `bom dia ${pushname} üåÖ`; break;
                case 6: educabot = `bom dia ${pushname} üåÑ`; break;
                case 7: educabot = `bom dia ${pushname} üåÖ`; break;
                case 8: educabot = `bom dia ${pushname} üí´`; break;
                case 9: educabot = `bom dia ${pushname} ‚ú®`; break;
                case 10: educabot = `bom dia ${pushname} üåû`; break;
                case 11: educabot = `bom dia ${pushname} üå®`; break;
                case 12: educabot = `boa tarde ${pushname} üåπ`; break;
                case 13: educabot = `boa tarde ${pushname} üåá`; break;
                case 14: educabot = `boa tarde ${pushname} üåá`; break;
                case 15: educabot = `boa tarde ${pushname} ü•Ä`; break;
                case 16: educabot = `boa tarde ${pushname} üåπ`; break;
                case 17: educabot = `boa tarde ${pushname} üåÜ`; break;
                case 18: educabot = `boa noite ${pushname} üåõ`; break;
                case 19: educabot = `boa noite ${pushname} üåÉ`; break;
                case 20: educabot = `boa noite ${pushname} üåå`; break;
                case 21: educabot = `boa noite ${pushname} üåÉ`; break;
                case 22: educabot = `boa noite ${pushname} üåõ`; break;
                case 23: educabot = `boa noite ${pushname} üåÉ`; break;
            }
            var noitedia = "" + educabot;
            
        /*==========CASSINO BY VENOM===========================		*/	
			const sotoy = ['üçä : üçí : üçê','üçí : üîî : üçä','üçá : üçá : üçá','üçä : üçã : üîî','üîî : üçí : üçê','üîî : üçí : üçä','üçä : üçã : üîî',		'üçê : üçí : üçã','üçê : üçê : üçê','üçä : üçí : üçí','üîî : üîî : üçá','üçå : üçí : üîî','üçê : üîî : üîî','üçä : üçã : üçí','üçã : üçã : üçå','üîî : üîî : üçá','üîî : üçê : üçá','üîî : üîî : üîî','üçí : üçí : üçí','üçå : üçå : üçå']
            const sotoy2 = ['üçä : üçí : üçê','üçí : üîî : üçä','üçä : üçã : üîî','üîî : üçí : üçê','üîî : üçí : üçä','üçä : üçã : üîî',		'üçê : üçí : üçã','üçä : üçí : üçí','üîî : üîî : üçá','üçå : üçí : üîî','üçê : üîî : üîî','üçä : üçã : üçí','üçã : üçã : üçå','üîî : üîî : üçá','üîî : üçê : üçá']
            const sotoy1 = ['üçä : üçí : üçê','üçí : üîî : üçä','üçä : üçã : üîî','üîî : üçí : üçê','üîî : üçí : üçä','üçä : üçã : üîî',		'üçê : üçí : üçã','üçä : üçí : üçí','üîî : üîî : üçá','üçå : üçí : üîî','üçê : üîî : üîî','üçä : üçã : üçí','üçã : üçã : üçå','üîî : üîî : üçá','üîî : üçê : üçá']
            const sotoy3 = ['üîî : üîî : üîî','üçí : üçí : üçí','üçå : üçå : üçå']
            const wloytoy = ['X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X',		'O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O']
            const wloytoy1 = ['O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X',		'O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O']
            const wloytoy2 = ['X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O',		'X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X','O : X : O','X : O : X']
            const wloytoy3 = ['X : X : X','O : O : O','X : X : X']
            const buruh1 = ['üê≥','ü¶à','üê¨','üêã','üêü','üê†','ü¶ê','ü¶ë','ü¶Ä','üêö']
            const buruh2 = ['üêî','ü¶É','üêø','üêê','üêè','üêñ','üêë','üêé','üê∫','ü¶©']
            const buruh3 = ['ü¶ã','üï∑','üêù','üêâ','ü¶Ü','ü¶Ö','üïä','üêß','üê¶','ü¶á']
            const buruh11 = buruh1[Math.floor(Math.random() * (buruh1.length))]
		    const buruh22 = buruh2[Math.floor(Math.random() * (buruh2.length))]
		    const buruh33 = buruh3[Math.floor(Math.random() * (buruh3.length))]
/*====================================================[ ROLE LEVELING ]==============================================================*/ 
//PATENTE
const levelRole = getLevelingLevel(sender)
   var role = 'Bronze Iü•â'
   	     if (levelRole <= 3) {
   	         role = 'Bronze  Iü•â'
   	     } else if (levelRole <= 5) {
   	         role = 'Bronze IIü•â'
   	     } else if (levelRole <= 7) {
   	         role = 'Bronze  IIIü•â'
   	     } else if (levelRole <= 8) {
   	         role = 'Bronze  IVü•â'
   	     } else if (levelRole <= 9) {
   	         role = 'Bronze  Vü•â'
   	     } else if (levelRole <= 10) {
   	         role = 'Prata Iü•à'
   	     } else if (levelRole <= 11) {
   	         role = 'Prata IIü•à'
   	     } else if (levelRole <= 12) {
   	         role = 'Prata IIIü•à'
   	     } else if (levelRole <= 13) {
   	         role = 'Prata IVü•à'
   	     } else if (levelRole <= 14) {
   	         role = 'Prata Vü•à'
   	     } else if (levelRole <= 14) {
   	         role = 'Ouro Iü•á'
   	     } else if (levelRole <= 15) {
   	         role = 'Ouro IIü•á'
   	     } else if (levelRole <= 16) {
   	         role = 'Ouro IIIü•á'
   	     } else if (levelRole <= 17) {
   	         role = 'Ouro IVü•á'
   	     } else if (levelRole <= 18) {
   	         role = 'Ouro Vü•á'
   	     } else if (levelRole <= 19) {
   	         role = 'Campe√£o IüèÜ'
   	     } else if (levelRole <= 20) {
   	         role = 'Campe√£o IIüèÜ'
   	     } else if (levelRole <= 21) {
   	         role = 'Campe√£o IIIüèÜ'
   	     } else if (levelRole <= 22) {
   	         role = 'Campe√£o IVüèÜ'
   	     } else if (levelRole <= 23) {
   	         role = 'Campe√£o VüèÜ'
   	     } else if (levelRole <= 24) {
   	         role = 'Diamante I üíé'   	         
   	     } else if (levelRole <= 25) {
   	         role = 'Diamante II üíé'    
   	     } else if (levelRole <= 26) {
   	         role = 'Diamante III üíé'   	     
   	     } else if (levelRole <= 27) {
   	         role = 'Diamante IV üíéÔ∏è'   	         
   	     } else if (levelRole <= 28) {
   	         role = 'Diamante V üíéÔ∏è'    
   	     } else if (levelRole <= 29) {
   	         role = 'Mestre I üêÇÔ∏è'     
   	     } else if (levelRole <= 30) {
   	         role = 'Mestre II üêÇÔ∏è'         
   	     } else if (levelRole <= 31) {
   	         role = 'Mestre III üêÇ'   	         
   	     } else if (levelRole <= 32) {
   	         role = 'Mestre IV üêÇ'    
   	     } else if (levelRole <= 33) {
   	         role = 'Mestre V üêÇ'     
   	     } else if (levelRole <= 34) {
    	        role = 'M√≠tico I üîÆ'            
    	    } else if (levelRole <= 31) {
   	         role = 'M√≠tico II üîÆ'   	         
   	     } else if (levelRole <= 32) {
   	         role = 'M√≠tico III üîÆ'    
   	     } else if (levelRole <= 33) {
   	         role = 'M√≠tico IV üîÆ'     
   	     } else if (levelRole <= 34) {
    	        role = 'M√≠tico V üîÆ'                   	    
   	    } else if (levelRole <= 35) {
    	        role = 'Lenda I ‚ö°'                
 	      } else if (levelRole <= 36) {
    	        role = 'Lenda II ‚ö°'                
        } else if (levelRole <= 37) {
    	        role = 'Lenda III ‚ö°'                
	       } else if (levelRole <= 38) {
    	        role = 'Lenda IV ‚ö°'                
        } else if (levelRole <= 39) {
    	        role = 'Lenda V ‚ö°'                
        } else if (levelRole <= 40) {
            role = 'Lend√°rio üî•'      
        } else if (levelRole <= 42) {
            role = 'Staff Grade 1 ÔπÄ¬π'
        } else if (levelRole <= 44) {
            role = 'Staff Grade 2 ÔπÄ¬≤'
        } else if (levelRole <= 46) {
            role = 'Staff Grade 3 ÔπÄ¬≥'
        } else if (levelRole <= 48) {
            role = 'Staff Grade 4 ÔπÄ‚Å¥'
        } else if (levelRole <= 50) {
            role = 'Staff Grade 5 ÔπÄ‚Åµ'
        } else if (levelRole <= 52) {
            role = 'Sergeant Grade 1 Ô∏æ¬π'
        } else if (levelRole <= 54) {
            role = 'Sergeant Grade 2 Ô∏æ¬≤'
        } else if (levelRole <= 56) {
            role = 'Sergeant Grade 3 Ô∏æ¬≥'
        } else if (levelRole <= 58) {
            role = 'Sergeant Grade 4 Ô∏æ‚Å¥'
        } else if (levelRole <= 60) {
            role = 'Sergeant Grade 5 Ô∏æ‚Åµ'
        } else if (levelRole <= 62) {
            role = '2nd Lt. Grade 1 ‚ô¢¬π '
        } else if (levelRole <= 64) {
            role = '2nd Lt. Grade 2 ‚ô¢¬≤'
        } else if (levelRole <= 66) {
            role = '2nd Lt. Grade 3 ‚ô¢¬≥'
        } else if (levelRole <= 68) {
            role = '2nd Lt. Grade 4 ‚ô¢‚Å¥'
        } else if (levelRole <= 70) {
            role = '2nd Lt. Grade 5 ‚ô¢‚Åµ'
        } else if (levelRole <= 72) {
            role = '1st Lt. Grade 1 ‚ô¢‚ô¢¬π'
        } else if (levelRole <= 74) {
            role = '1st Lt. Grade 2 ‚ô¢‚ô¢¬≤'
        } else if (levelRole <= 76) {
            role = '1st Lt. Grade 3 ‚ô¢‚ô¢¬≥'
        } else if (levelRole <= 78) {
            role = '1st Lt. Grade 4 ‚ô¢‚ô¢‚Å¥'
        } else if (levelRole <= 80) {
            role = '1st Lt. Grade 5 ‚ô¢‚ô¢‚Åµ'
        } else if (levelRole <= 82) {
            role = 'Major Grade 1 ‚ú∑¬π'
        } else if (levelRole <= 84) {
            role = 'Major Grade 2 ‚ú∑¬≤'
        } else if (levelRole <= 86) {
            role = 'Major Grade 3 ‚ú∑¬≥'
        } else if (levelRole <= 88) {
            role = 'Major Grade 4 ‚ú∑‚Å¥'
        } else if (levelRole <= 90) {
            role = 'Major Grade 5 ‚ú∑‚Åµ'
        } else if (levelRole <= 92) {
            role = 'Colonel Grade 1 ‚ú∑‚ú∑¬π'
        } else if (levelRole <= 94) {
            role = 'Colonel Grade 2 ‚ú∑‚ú∑¬≤'
        } else if (levelRole <= 96) {
            role = 'Colonel Grade 3 ‚ú∑‚ú∑¬≥'
        } else if (levelRole <= 98) {
            role = 'Colonel Grade 4 ‚ú∑‚ú∑‚Å¥'
        } else if (levelRole <= 100) {
            role = 'Colonel Grade 5 ‚ú∑‚ú∑‚Åµ'
        } else if (levelRole <= 102) {
            role = 'Brigadier Early ‚ú∞'
        } else if (levelRole <= 104) {
            role = 'Brigadier Silver ‚ú©'
        } else if (levelRole <= 106) {
            role = 'Brigadier gold ‚úØ'
        } else if (levelRole <= 108) {
            role = 'Brigadier Platinum ‚ú¨'
        } else if (levelRole <= 110) {
            role = 'Brigadier Diamond ‚ú™'
        } else if (levelRole <= 112) {
            role = 'Major General Early ‚ú∞'
        } else if (levelRole <= 114) {
            role = 'Major General Silver ‚ú©'
        } else if (levelRole <= 116) {
            role = 'Major General gold ‚úØ'
        } else if (levelRole <= 118) {
            role = 'Major General Platinum ‚ú¨'
        } else if (levelRole <= 120) {
            role = 'Major General Diamond ‚ú™'
        } else if (levelRole <= 122) {
            role = 'Lt. General Early ‚ú∞'
        } else if (levelRole <= 124) {
            role = 'Lt. General Silver ‚ú©'
        } else if (levelRole <= 126) {
            role = 'Lt. General gold ‚úØ'
        } else if (levelRole <= 128) {
            role = 'Lt. General Platinum ‚ú¨'
        } else if (levelRole <= 130) {
            role = 'Lt. General Diamond ‚ú™'
        } else if (levelRole <= 132) {
            role = 'General Early ‚ú∞'
        } else if (levelRole <= 134) {
            role = 'General Silver ‚ú©'
        } else if (levelRole <= 136) {
            role = 'General gold ‚úØ'
        } else if (levelRole <= 138) {
            role = 'General Platinum ‚ú¨'
        } else if (levelRole <= 140) {
            role = 'General Diamond ‚ú™'
        } else if (levelRole <= 142) {
            role = 'Commander Early ‚òÖ'
        } else if (levelRole <= 144) {
            role = 'Commander Intermediate ‚ç£'
        } else if (levelRole <= 146) {
            role = 'Commander Elite ‚âõ'
        } else if (levelRole <= 148) {
            role = 'The Commander Hero ‚çü'
        } else if (levelRole <= 152) {
            role = 'Legends Âøç'
        } else if (levelRole <= 154) {
            role = 'Legends Âøç'
        } else if (levelRole <= 156) {
            role = 'Legends Âøç'
        } else if (levelRole <= 158) {
            role = 'Legends Âøç'
        } else if (levelRole <= 160) {
            role = 'Legends Âøç'
        } else if (levelRole <= 162) {
            role = 'Legends Âøç'
        } else if (levelRole <= 164) {
            role = 'Legends Âøç'
        } else if (levelRole <= 166) {
            role = 'Legends Âøç'
        } else if (levelRole <= 168) {
            role = 'Legends Âøç'
        } else if (levelRole <= 170) {
            role = 'Legends Âøç'
        } else if (levelRole <= 172) {
            role = 'Legends Âøç'
        } else if (levelRole <= 174) {
            role = 'Legends Âøç'
        } else if (levelRole <= 176) {
            role = 'Legends Âøç'
        } else if (levelRole <= 178) {
            role = 'Legends Âøç'
        } else if (levelRole <= 180) {
            role = 'Legends Âøç'
        } else if (levelRole <= 182) {
            role = 'Legends Âøç'
        } else if (levelRole <= 184) {
            role = 'Legends Âøç'
        } else if (levelRole <= 186) {
            role = 'Legends Âøç'
        } else if (levelRole <= 188) {
            role = 'Legends Âøç'
        } else if (levelRole <= 190) {
            role = 'Legends Âøç'
        } else if (levelRole <= 192) {
            role = 'Legends Âøç'
        } else if (levelRole <= 194) {
            role = 'Legends Âøç'
        } else if (levelRole <= 196) {
            role = 'Legends Âøç'
        } else if (levelRole <= 198) {
            role = 'Legends Âøç'
        } else if (levelRole <= 200) {
            role = 'Legends Âøç'
        } else if (levelRole <= 210) {
            role = 'Legends Âøç'
        } else if (levelRole <= 220) {
            role = 'Legends Âøç'
        } else if (levelRole <= 230) {
            role = 'Legends Âøç'
        } else if (levelRole <= 240) {
            role = 'Legends Âøç'
        } else if (levelRole <= 250) {
            role = 'Legends Âøç'
        } else if (levelRole <= 260) {
            role = 'Legends Âøç'
        } else if (levelRole <= 270) {
            role = 'Legends Âøç'
        } else if (levelRole <= 280) {
            role = 'Legends Âøç'
        } else if (levelRole <= 290) {
            role = 'Legends Âøç'
        } else if (levelRole <= 300) {
            role = 'Legends Âøç'
        } else if (levelRole <= 310) {
            role = 'Legends Âøç'
        } else if (levelRole <= 320) {
            role = 'Legends Âøç'
        } else if (levelRole <= 330) {
            role = 'Legends Âøç'
        } else if (levelRole <= 340) {
            role = 'Legends Âøç'
        } else if (levelRole <= 350) {
            role = 'Legends Âøç'
        } else if (levelRole <= 360) {
            role = 'Legends Âøç'
        } else if (levelRole <= 370) {
            role = 'Legends Âøç'
        } else if (levelRole <= 380) {
            role = 'Legends Âøç'
        } else if (levelRole <= 390) {
            role = 'Legends Âøç'
        } else if (levelRole <= 400) {
            role = 'Legends Âøç'
        } else if (levelRole <= 410) {
            role = 'Legends Âøç'
        } else if (levelRole <= 420) {
            role = 'Legends Âøç'
        } else if (levelRole <= 430) {
            role = 'Legends Âøç'
        } else if (levelRole <= 440) {
            role = 'Legends Âøç'
        } else if (levelRole <= 450) {
            role = 'Legends Âøç'
        } else if (levelRole <= 460) {
            role = 'Legends Âøç'
        } else if (levelRole <= 470) {
            role = 'Legends Âøç'
        } else if (levelRole <= 480) {
            role = 'Legends Âøç'
        } else if (levelRole <= 490) {
            role = 'Legends Âøç'
        } else if (levelRole <= 500) {
            role = 'Legends Âøç'
        } else if (levelRole <= 600) {
            role = 'Legends Âøç'
        } else if (levelRole <= 700) {
            role = 'Legends Âøç'
        } else if (levelRole <= 800) {
            role = 'Legends Âøç'
        } else if (levelRole <= 900) {
            role = 'Legends Âøç'
        } else if (levelRole <= 1000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 2000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 3000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 4000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 5000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 6000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 7000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 8000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 9000) {
            role = 'Legends Âøç'
        } else if (levelRole <= 10000) {
            role = 'Legends Âøç'
   	     }
   	   RuriBars = getLevelingLevel(sender)
			 bars = `[‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí]`
			if (RuriBars <= 10) {
				bars = `[‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí]`
			} else if (RuriBars <= 20) {
				bars = `[‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí]`
			} else if (RuriBars <= 30) {
				bars = `[‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí]`
			} else if (RuriBars <= 40) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí]`
			} else if (RuriBars <= 50) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí]`
			} else if (RuriBars <= 60) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí]`
			} else if (RuriBars <= 70) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí]`
			} else if (RuriBars <= 80) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí]`
			} else if (RuriBars <= 90) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]`
			} else if (RuriBars <= 100) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]`
			} else if (RuriBars <= 110) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+1*`
			} else if (RuriBars <= 120) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+2*`
			} else if (RuriBars <= 130) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+3*`
			} else if (RuriBars <= 140) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+4*`
			} else if (RuriBars <= 150) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+5*`
			} else if (RuriBars <= 160) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+6*`
			} else if (RuriBars <= 170) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+7*`
			} else if (RuriBars <= 180) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+8*`
			} else if (RuriBars <= 190) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+9*`
			} else if (RuriBars <= 110) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+10*`
			} else if (RuriBars <= 99999999999999) {
				bars = `[‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà]+‰∏äÂ∏ù*`
            }   
 var date = new Date();
        var tahun = date.getFullYear();
        var bulan1 = date.getMonth();
        var tanggal = date.getDate();
        var hari = date.getDay();
        var jams = date.getHours();
        var menit = date.getMinutes();
        var detik = date.getSeconds();
        var waktoo = date.getHours();
            switch(hari) {
                case 0: hari = 'segunda'; break;
                case 1: hari = 'domingo'; break;
                case 2: hari = 'ter√ßa'; break;
                case 3: hari = 'quarta'; break;
                case 4: hari = 'quinta'; break;
                case 5: hari = 'sexta'; break;
                case 6: hari = 's√°bado'; break;
            }
            switch(bulan1) {
                case 0: bulan1 = 'janeiro'; break;
                case 1: bulan1 = 'fevereiro'; break;
                case 2: bulan1 = 'mar√ßo'; break;
                case 3: bulan1 = 'abril'; break;
                case 4: bulan1 = 'maio'; break;
                case 5: bulan1 = 'junior'; break;
                case 6: bulan1 = 'julho'; break;
                case 7: bulan1 = 'agosto'; break;
                case 8: bulan1 = 'setembro'; break;
                case 9: bulan1 = 'outubro'; break;
                case 10: bulan1 = 'novenbro'; break;
                case 11: bulan1 = 'desembro'; break;
            }
            switch(jams){
                case 0: pada = "noite"; break;
                case 1: pada = "noite"; break;
                case 2: pada = "noite"; break;
                case 3: pada = "dia"; break;
                case 4: pada = "dia"; break;
                case 5: pada = "dia"; break;
                case 6: pada = "dia"; break;
                case 7: pada = "dia"; break;
                case 8: pada = "dia"; break;
                case 9: pada = "dia"; break;
                case 10: pada = "dia"; break;
                case 11: pada = "dia"; break;
                case 12: pada = "tarde"; break;
                case 13: pada = "tarde"; break;
                case 14: pada = "tarde"; break;
                case 15: pada = "tarde"; break;
                case 16: pada = "tarde"; break;
                case 17: pada = "tarde"; break;
                case 18: pada = "tarde"; break;
                case 19: pada = "tarde"; break;
                case 20: pada = "noite"; break;
                case 21: pada = "noite"; break;
                case 22: pada = "noite"; break;
                case 23: pada = "noite"; break;
            }          
var ase = new Date();
                        var waktoo = ase.getHours();
                        switch(waktoo){
                case 0: waktoo = 'boa noiteüåö'; break;
                case 1: waktoo = 'boa noiteüåö'; break;
                case 2: waktoo = 'de manh√£ cedoüåí'; break;
                case 3: waktoo = 'de manh√£ cedoüåì'; break;
                case 4: waktoo = 'de manh√£ cedoüåî'; break;
                case 5: waktoo = 'de manh√£ cedoüåî'; break;
                case 6: waktoo = 'bom diaüåù'; break;
                case 7: waktoo = 'bom diaüåù'; break;
                case 8: waktoo = 'bom diaüåù'; break;
                case 9: waktoo = 'bom diaüåù'; break;
                case 10: waktoo = 'bom diaüåù'; break;
                case 11: waktoo = 'bom diaüåû'; break;
                case 12: waktoo = 'bom diaüåû'; break;
                case 13: waktoo = 'boa tardeüåû'; break;
                case 14: waktoo = 'boa tardeüåû'; break;
                case 15: waktoo = 'boa tardeüåù'; break;
                case 16: waktoo = 'boa tardeüåù'; break;
                case 17: waktoo = 'boa tardeüåñ'; break;
                case 18: waktoo = 'boa noiteüåò'; break;
                case 19: waktoo = 'boa noiteüåö'; break;
                case 20: waktoo = 'boa noiteüåö'; break;
                case 21: waktoo = 'boa noiteüåö'; break;
                case 22: waktoo = 'boa noiteüåö'; break;
                case 23: waktoo = 'boa noiteüåö'; break;
            }                  
var tampilUcapan = '' + waktoo;
            
            /*=====FAKE REY BY VENOM=====*/
            var ase = new Date();
                        var waktoonyabro = ase.getHours();
                        switch(waktoonyabro){
                case 0: waktoonyabro = `boa noite ${pushname}üåõ`; break;
                case 1: waktoonyabro = `boa noite ${pushname}üåõ`; break;
                case 2: waktoonyabro = `de manh√£ ${pushname}üåõ`; break;
                case 3: waktoonyabro = `de manh√£ ${pushname}‚ú®`; break;
                case 4: waktoonyabro = `de manh√£ ${pushname}‚ú®`; break;
                case 5: waktoonyabro = `de manh√£ ${pushname}‚ú®`; break;
                case 6: waktoonyabro = `bom dia ${pushname}‚ú®`; break;
                case 7: waktoonyabro = `bom dia ${pushname}‚ú®`; break;
                case 8: waktoonyabro = `bom dia ${pushname}‚ú®`; break;
                case 9: waktoonyabro = `bom dia ${pushname}‚ú®`; break;
                case 10: waktoonyabro = `bom dia ${pushname}‚ú®`; break;
                case 11: waktoonyabro = `bom dia ${pushname}üî•`; break;
                case 12: waktoonyabro = `boa tarde ${pushname}üî•`; break;
                case 13: waktoonyabro = `boa tarde ${pushname}üî•`; break;
                case 14: waktoonyabro = `boa tarde ${pushname}üî•`; break;
                case 15: waktoonyabro = `boa tarde ${pushname}üåπ`; break;
                case 16: waktoonyabro = `boa tarde ${pushname}üåπ`; break;
                case 17: waktoonyabro = `boa tarde ${pushname}üåπ`; break;
                case 18: waktoonyabro = `boa tarde ${pushname}üåõ`; break;
                case 19: waktoonyabro = `boa tarde ${pushname}üåõ`; break;
                case 20: waktoonyabro = `boa noite ${pushname}üåõ`; break;
                case 21: waktoonyabro = `boa noite ${pushname}üåõ`; break;
                case 22: waktoonyabro = `boa noite ${pushname}üåõ`; break;
                case 23: waktoonyabro = `boa noite ${pushname}üåõ`; break;
            }         
            var ucapanFakereply = '' + waktoonyabro;                
var tampilHari = '' + hari + ', ' + tanggal + ' ' + bulan1 + ' ' + tahun;
            var tampilJam = '' + 'Jams : ' + jams + ':' + menit + ':' + detik + ' Wib';
            tampilTanggal = hari + " "+ tanggal + " " + bulan1 + " " + tahun;
            tampilWaktu =  jams + ":" + menit + ":" + detik;	
            
        const enviarArquivoDoLink = async (from, url, caption, msg, men) => {
            let mime = '';
            let res = await axios.head(url)
            mime = res.headers['content-type']
            if (mime.split("/")[1] === "gif") {
                return venom.sendMessage(m.chat, { video: await convertGif(url), caption: caption, gifPlayback: true, mentions: men ? men : []}, {quoted: m})
                }
            let type = mime.split("/")[0]+"Message"
            if(mime.split("/")[0] === "image"){
                return venom.sendMessage(m.chat, { image: await getBuffer(url), caption: caption, mentions: men ? men : []}, {quoted: m})
            } else if(mime.split("/")[0] === "video"){
                return venom.sendMessage(m.chat, { video: await getBuffer(url), caption: caption, mentions: men ? men : []}, {quoted: m})
            } else if(mime.split("/")[0] === "audio"){
                return venom.sendMessage(m.chat, { audio: await getBuffer(url), caption: caption, mentions: men ? men : [], mimetype: 'audio/mpeg'}, {quoted: m })
            } else {
                return venom.sendMessage(m.chat, { document: await getBuffer(url), mimetype: mime, caption: caption, mentions: men ? men : []}, {quoted: m })
            }
        }

const enviarImgB = async (id, img1, text1, desc1, but = [], m) => {
buttonMessage = {
image: {url: img1},
caption: text1,
footer: desc1,
buttons: but,
headerType: 4
}
venom.sendMessage(id, buttonMessage, {quoted: m})
} 
async function sendButLocation(id, text1, desc1, gam1, but = [], options = {}) {
            let buttonMessages = { locationMessage: { jpegThumbnail: gam1 }, contentText: text1, footerText: desc1, buttons: but, headerType: 6 }
            return venom.sendMessage(id, buttonMessages, MessageType.buttonsMessage, options)
        }   
const reactionMessage = {
                    react: {
                        text: args[0],
                        key: { remoteJid: m.chat, fromMe: true, id: quoted.id }
                    }
                }        
const fvid = {
	 key: { 
          fromMe: false,
	      participant: `0@s.whatsapp.net`, ...(from ? 
	 { remoteJid: "6289643739077-1613049930@g.us" } : {}) 
                },
	 message: { 
                 "videoMessage": { 
                 "title": `Project Evolution`,
                 "h": ``,
                 'duration': '99999', 
                 'caption': `${ucapanFakereply}`,
                 'jpegThumbnail': img
                        }
                       }
	                  }        
//verificado (nome do grupo + mimetype de link de convite)
const fmenu = {
	"key": {
		"fromMe": false,
		"participant": "0@s.whatsapp.net",
		"remoteJid": "0@s.whatsapp.net"
	},
	"message": {
		"groupInviteMessage": {
			"groupJid": "557499510904-1612660268@g.us",
			"inviteCode": "LTyM3PdbIw3CyLmy0wF9EQ",
"caption": `${pushname}`
		}
	}
}       

const ftroli = {
	key : {
                          participant : '0@s.whatsapp.net'
                        },
       message: {
                    orderMessage: {
                            itemCount : 99999,
                            status: 99999,
                            surface : 1,
                            message: `${registre}`,
                            orderTitle: '‚ô°novo usu√°rio evolution-bot‚ô°',
                            thumbnail: fs.readFileSync('./dados/fotos/logo.jpg'), 
                            sellerJid: '0@s.whatsapp.net'
          
                          }
                        }
                      }       
const say1 = {
	key : {
                          participant : '0@s.whatsapp.net'
                        },
       message: {
                    orderMessage: {
                            itemCount : 123,
                            status: 1,
                            surface : 1,
                            message: `${educabot}`, //Nome
                            orderTitle: `${educabot}`,
                            thumbnail: fs.readFileSync('./lib/venom.jpg'), //A imagem
                            sellerJid: '0@s.whatsapp.net' 
                          }
                        }
                      }    
const say2 ={"key": {   "fromMe": false,"participant":"0@s.whatsapp.net",   "remoteJid": "556181496039-1625944593@g.us"  }, "message": {orderMessage: {itemCount: 999999,status: 200, thumbnail: fs.readFileSync('./lib/venom.jpg'), surface: 200, message: `‚ä≥ Comando : ${prefix}${command}\n‚ä≥ ${ucapanFakereply}`, orderTitle: 'By: Venom evolution', sellerJid: '0@s.whatsapp.net'}}, contextInfo: {"forwardingScore":999,"isForwarded":true},sendEphemeral: true}                             
const say22 ={"key": {   "fromMe": false,"participant":"0@s.whatsapp.net",   "remoteJid": "556181496039-1625944593@g.us"  }, "message": {orderMessage: {itemCount: 999999,status: 200, thumbnail: fs.readFileSync('./lib/venom.jpg'), surface: 200, message: `${waktoo}`, orderTitle: 'By: Venom Mods', sellerJid: '0@s.whatsapp.net'}}, contextInfo: {"forwardingScore":999,"isForwarded":true},sendEphemeral: true}                             
                      
const fftroli ={key: {fromMe: false,"participant":"0@s.whatsapp.net", "remoteJid": "6289523258649-1604595598@g.us"}, "message": {orderMessage: {itemCount: 2021,status: 200, thumbnail: thumb, surface: 200, message: `¬© ${nomedono}`, orderTitle: 'memek', sellerJid: '0@s.whatsapp.net'}}, contextInfo: {"forwardingScore":999,"isForwarded":true},sendEphemeral: true}
		const fdoc = {key : {participant : '0@s.whatsapp.net'},message: {documentMessage: {title: `¬© ${nomedono}`,jpegThumbnail: thumb}}}
		const fvn = {key: {participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "6289643739077-1613049930@g.us" } : {})},message: { "audioMessage": {"mimetype":"audio/ogg; codecs=opus","seconds":359996400,"ptt": "true"}} } 
		const fgif = {key: {participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast" } : {})},message: {"videoMessage": { "title":`¬© ${nomedono}`, "h": `Hmm`,'seconds': '359996400', 'gifPlayback': 'true', 'caption': `¬© ${nomedono}`, 'jpegThumbnail': thumb}}}
		const fgclink = {key: {participant: "0@s.whatsapp.net","remoteJid": "0@s.whatsapp.net"},"message": {"groupInviteMessage": {"groupJid": "6288213840883-1616169743@g.us","inviteCode": "m","groupName": "P", "caption": `¬© ${nomedono}`, 'jpegThumbnail': thumb}}}
		const fvideo = {key: { fromMe: false,participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "6289643739077-1613049930@g.us" } : {}) },message: { "videoMessage": { "title":`${pushname}`, "h": `Hmm`,'seconds': '359996400', 'caption': `${pushname}`, 'jpegThumbnail': thumb}}}
		const floc = {key : {participant : '0@s.whatsapp.net'},message: {locationMessage: {name: `${nomedono}`,jpegThumbnail: thumb}}}
		//const fkontak = { key: {participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: `6283136505591-1614953337@g.us` } : {}) }, message: { 'contactMessage': { 'displayName': `${pushname}`, 'vcard': `BEGIN:VCARD\nVERSION:3.0\nN:XL;${pushname},;;;\nFN:${pushname},\nitem1.TEL;waid=${m.sender.split('@')[0]}:${m.sender.split('@')[0]}\nitem1.X-ABLabel:Ponsel\nEND:VCARD`, 'jpegThumbnail': thumb, thumbnail: thumb,sendEphemeral: true}}}
		                      
const freply2 = { key: { fromMe: true, participant: `0@s.whatsapp.net`, ... {}}, message: { "contactMessage": { "displayName": `${pushname}`, "vcard": `BEGIN:VCARD\nVERSION:3.0\nN:XL;${pushname},;;;\nFN:${pushname},\nitem1.TEL;waid=${sender.split('@')[0]}:${sender.split('@')[0]}\nitem1.X-ABLabel:By Venom\nEND:VCARD`
        }}}
                        
const tobLoc = {key : {participant : '0@s.whatsapp.net'},message: {liveLocationMessage: {caption: `${waktoonyabro}`,jpegThumbnail: img  }}}

const ftoko = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: 'status@broadcast' } : {}) }, message: { 'productMessage': { 'product': { 'productImage':{ 'mimetype': 'image/jpeg', 'jpegThumbnail': fs.readFileSync('./dados/fotos/logo.jpg') }, 'title': `${nomedobot}`, 'productImageCount': 9999 }, 'businessOwnerJid': `0@s.whatsapp.net`}}}
	
const fkontak = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: `0@s.whatsapp.net` } : {}) }, message: { 'contactMessage': { 'displayName': `${ucapanFakereply}`, 'vcard': `BEGIN:VCARD\nVERSION:3.0\nN:XL;${ucapanFakereply},;;;\nFN:${ucapanFakereply},\nitem1.TEL;waid=${sender.split('@')[0]}:${sender.split('@')[0]}\nitem1.X-ABLabel:By Venom\nEND:VCARD`, 'jpegThumbnail': fs.readFileSync('./dados/fotos/logo.jpg')}}}

const verify = { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast" } : {}) }, message: { "extendedTextMessage": { "text": `Bateria: ${nv()}\nCarregando: ${charg}`}
}}                                  
var asu = `${limite}`

            if (isGroup && isRegistrar && isLevelingOn) {
            const currentLevel = getLevelingLevel(sender)
            const checkId = getLevelingId(sender)
            try {
                if (currentLevel === undefined && checkId === undefined) addLevelingId(sender)
                const amountXp = Math.floor(Math.random() * 10) + 500
                const requiredXp = 5000 * (Math.pow(2, currentLevel) - 1)
                const getLevel = getLevelingLevel(sender)
                addLevelingXp(sender, amountXp)
                if (requiredXp <= getLevelingXp(sender)) {
                    addLevelingLevel(sender, 1)
                    await reply(mess.levelup)
                }
            } catch (err) {
                console.error(err)
            }
        }

          const checkLimit = (sender) => {
			let found = false
			for (let lmt of _limit) {
			if (lmt.id === sender) {
			let limitCounts = limite - lmt.limit
			if (limitCounts <= 0) return venom.sendMessage(from,` è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ  ü…™·¥ç…™·¥õ …™s ·¥ú·¥ò\n`, text, {quoted: fkontak})
			venom.sendMessage(from, `
„Äå ‚ùó „ÄçLimit Count
·¥õ ú·¥á  Ä·¥ás·¥õ ·¥è“ì  è·¥è·¥ú Ä  ü…™·¥ç…™·¥õ : ${limitCounts}

…¥·¥è·¥õ·¥á: ·¥õ·¥è …¢·¥á·¥õ ·¥Ä  ü…™·¥ç…™·¥õ ·¥Ñ·¥Ä…¥ ·¥ò·¥Äss  ô è  ü·¥á·¥†·¥á ü …™…¥ …¢ Ä·¥è·¥ú·¥ò ·¥è Ä  ô·¥ú è  ü…™·¥ç…™·¥õ.`, text, { quoted : fkontak})
			found = true 
			}
		}
			if (found === false) {
			let obj = { id: sender, limit: 0 }
			_limit.push(obj)
			fs.writeFileSync('./dados/limit.json', JSON.stringify(_limit))
			venom.sendMessage(from, `limit anda : ${limitCounts}`, text, { quoted : fkontak})
			}
		} 
		
           const isLimit = (sender) =>{ 
		      let position = false
              for (let i of _limit) {
              if (i.id === sender) {
              	let limits = i.limit
              if (limits >= limite ) {
              	  position = true
                    venom.sendMessage(from, mess.limite(pushname), text, {quoted: fkontak})
                    return true
              } else {
              	_limit
                  position = true
                  return false
               }
             }
           }
           if (position === false) {
           	const obj = { id: sender, limit: 1 }
                _limit.push(obj)
                fs.writeFileSync('./dados/limit.json',JSON.stringify(_limit))
           return false
       }
     }
            if (isGroup ) {
            const checkATM = checkATMuser(sender)
            try {
                if (checkATM === undefined) addATM(sender)
                const dinheirosaku = Math.floor(Math.random() * 10) + 90
                addKoinUser(sender, dinheirosaku)
            } catch (err) {
                console.error(err)
            }
        }      
   	     var premi = 'Usu√°rio üèÖ'
			
			if (isCreator) {
				premi = 'Criador ‚öîÔ∏è'
		    }
        const enviarbuton = (from, text, footer, buttons) => {
            return venom.sendMessage(m.chat, { text: text, footer: footer, templateButtons: buttons, quoted: say1 })
        }
        
const sendButtonMsg = async (text, footer, button) => {
var list = WAProto.Message.fromObject({
buttonsMessage: WAProto.ButtonsMessage.fromObject({
contentText:text,
footerText: footer,
buttons: button,
headerType: 1
})
})

await venom.relayMessage(m.chat, list, {messageId: m.key.id})
}

const sendListMsg = async (title, description, textButton, sections) => {
var list = WAProto.Message.fromObject({
listMessage: WAProto.ListMessage.fromObject({title: title,
buttonText: textButton,
description: description,
listType: 1,
sections: sections
})
})
await venom.relayMessage(m.chat, list, {messageId: m.key.id})
}

//IA
if (budy && simi_online) {
try {
var IA = await fetchJson(`https:// akame-apii.herokuapp.com/api/simi?msg=${budy}&apikey=AUBJHbxf`)
venom.sendMessage(m.chat, { 
text: IA.resultado.resposta 
}, { quoted: say1 })
} catch {
venom.sendMessage(m.chat, { 
text: 'n√£o entendi :/' 
}, { quoted: say1 })
}}

if (isCmd && !isRegistrar) {
/*let contentt = fs.readFileSync(`./src/registro.jpg`)
const media = await venom.prepareMessage(from, contentt, MessageType.image, { thumbnail: null})
*/
try {
ppim = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppim = 'https://telegra.ph/file/265c672094dfa87caea19.jpg'
}            
let contentt = await getBuffer(ppim)
let buttons = [
                    {buttonId: `hhh`, buttonText: {displayText: 'üîÆfazer loginüîÆ'}, type: 1}
                ]
                let buttonMessage = {
                    image:  contentt,
                    caption:
/**let buttons = [
                    {buttonId: `rg`, buttonText: {displayText: 'üîÆfazer loginüîÆ'}, type: 1},
{buttonId:`${prefix}allmenu`,buttonText:{displayText:'‚ò∞ pula login‚ò∞'},type:1},
{buttonId:`${prefix}mycanal`,buttonText:{displayText:'üòàCanal Venom Modsüòà'},type:1},

                ]
                let buttonMessage = {
                    image: contentt,
                    caption:*/ ` _...*‚ï≠‚ó™ *„Äî üîÆvoc√™ n√£o est√° registradoüîÆ „Äïîíù*
	‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ
	‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ
	‚îú Õ¢‚ù£Ô∏è‚Éù‚ÉòÃâÃâÃâ‚û∏„Äî‚ö†Ô∏è„ÄïOla ${pushname} :
	‚îú Õ¢‚ù£Ô∏è‚Éù‚ÉòÃâÃâÃâ‚û∏„Äî‚ö†Ô∏è„ÄïPara se registrar no Evolution-Bot :
	‚îú Õ¢‚ù£Ô∏è‚Éù‚ÉòÃâÃâÃâ‚û∏„Äî‚ö†Ô∏è„Äïclike no bot√£o üîÆfazer loginüîÆ
	‚îú Õ¢‚ù£Ô∏è‚Éù‚ÉòÃâÃâÃâ‚û∏„Äî‚ö†Ô∏è„Äïaviso: 
	‚îú Õ¢‚ù£Ô∏è‚Éù‚ÉòÃâÃâÃâ‚û∏„Äî‚ö†Ô∏è„Äïcaso se vc nao fazer o login nao
	‚îú Õ¢‚ù£Ô∏è‚Éù‚ÉòÃâÃâÃâ‚û∏„Äî‚ö†Ô∏è„Äïpodera usar os comandos *
	‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØîíù*..._`,
                    footer: `Evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
                
return 
}
if (budy.startsWith(`.rg`))  {
if (isRegistrar) return  reply(`üìå  *Opa pelo que vejo aqui voc√™ ja esta cadastrado com os seus dados no Evolution bot*`)
reply('*üîçaguarde buscando dados....üîç*')    
const idseri = sayoseri(20)
try {
ppimgg = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppimgg = 'https://telegra.ph/file/265c672094dfa87caea19.jpg'
}            
let contentt = await getBuffer(ppimgg)
			    
            let veri = m.sender
            registro.push(sender)
            fs.writeFileSync('./dados/registro/registro.json', JSON.stringify(registro))
            addRegisteredUser(sender, idseri)           
             
let buttons =  [
                    {buttonId: 'Rg', buttonText: {displayText: '‚ò∞ùöñùöéùöóùöû‚ò∞'}, type: 1},
{buttonId:`${prefix}perfil`,buttonText:{displayText:'‚öúùöôùöéùöõùöèùöíùöï‚öú'},type:1},
{buttonId:`${prefix}mycanal`,buttonText:{displayText:'üòàùô≤ùöäùöóùöäùöï ùöÖùöéùöóùöòùöñ ùôºùöòùöçùöúüòà'},type:1},

                ]
                let buttonMessage = {
                    image: contentt,
                    caption: ` ‚îå‚îÄ‚îÄ‚îÄ„Äî *_${nomebot}_* „Äï
‚îÉ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄîíù
‚îå‚îÄ‚îÄ‚îÄ„Äî üîÆcadastradoüîÆ „Äï
‚îÉüåønome : ${pushname}
‚îÉüéóIdade: true
‚îÉüë§n√∫mero : wa.me/+${sender.split('@')[0]}
‚îÉ‚åöhora : ${time}
‚îÉüìôID: ${idseri}
‚îÉüì≤total de cadastro : ${user.length} total 
‚îÉüîçTotal de usu√°rios registrados: ${registro.length}
‚îÉüí±status : ‚òëÔ∏è verificado
‚îÉüç§dia : ${tampilHari}
‚îÉ‚è≥segundos : ${time}
‚îÉüîóprefixo : ${prefix}
‚îÉüõ°Copyright Evolution bot
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄîíù
*„Äî *_${nomebot}_* „Äï`,
                    footer: `${vitr}`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: ftroli })
                
             console.log(color('[REGISTRO DE USUARIO]'), color(time, 'yellow'), '\nID:', color(idseri, 'cyan'), '\nDe', color(m.sender || groupName))
        // console.log(e)
        
            setTimeout( () => {
	    
	    reply(`*Obrigando por se cadastra no evolution bot*`)
	}, 2000)
	}
	    
            if (budy.toLowerCase() === `7716`){
		if (isRegistra) return 
		    dinheiro.push(sender)
		    fs.writeFileSync('./dados/registro/registro.json', JSON.stringify(dinheiro))
		    letteks = `Verification success\n\nPlease send *!menu* to view menu`
		    const dinheirosaku = Math.floor(Math.random() * 10) + 90
            addKoinUser(sender, dinheirosaku)
		    venom.sendMessage(from, teks, text, {quoted: m })
            };
        
  /* if (!isGroup && prefix && command)
      console.log(
        '\x1b[1;31m~\x1b[1;37m>',
        '[\x1b[1;32mComando as\x1b[1;37m]',
        time,
        color(command),
        'Do',
        color(sender.split('@')[0]),
        'Grupo :',
        color(args.length)
      );
    //if (!isGroup && !isCmd) console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;31mTEXT\x1b[1;37m]', time, color('Message'), 'from', color(sender.split('@')[0]), 'args :', color(args.length))
    if (prefix && command && isGroup)
      console.log(
        '\x1b[1;31m~\x1b[1;37m>',
        '[\x1b[1;32mMesagem as\x1b[1;37m]',
        time,
        color(command),
        'Do',
        color(sender.split('@')[0]),
        'Grupo',
        color(groupName),
        'Caracteres :',
        color(args.length)
      );
      */
      
                
//BALANCEAMENTO DA MOEDA/DINHERO DO BOT       
      	       if (isRegistrar ) {//SO VAI SER ADICIONADO O COIN PRA QUEM E REGISTRADO
 	           const checkATM = checkATMuser(sender)
 	           try {
 	               if (checkATM === undefined) addATM(sender)
 	               const dinheirosaku = Math.floor(Math.random() * 10) + 50 //GANHA ENTRA 10 * 50 POR CADA MSG
	                addKoinUser(sender, dinheirosaku)
  	          } catch (err) {
   	             console.error(err)
   	         }
   	         }


        		//antispam
      if (isCmd && antiSpam.isFiltered(m.from) && !m.isGroup) {
        console.log(color('[SPAM]', 'red'), color(time, 'yellow'), color(`${command} [${args.length}]`), 'from', color(pushname))
        return m.reply('„Äå SPAM „ÄçEspere 5 segundos para usar o comando')}
        
        if (isCmd && antiSpam.isFiltered(m.from) && m.isGroup) {
        console.log(color('[SPAM]', 'red'), color(time, 'yellow'), color(`${command} [${args.length}]`), 'from', color(pushname), 'EM', color(groupName))
        return m.reply('„Äå SPAM „ÄçEspere 5 segundos para usar o comando')
        }
        
        // Public & Self
        if (!venom.public) {
            if (!m.key.fromMe) return
        }
/*if (antipv && !isCreator && !m.isGroup) {
m.reply(`üö´ O PV EST√Å BLOQUEADO üö´`)
//akame.updateBlockStatus(sender, 'block')
}        */
// Consts isQuoted
const isImage = m.mtype == "imageMessage"
const isVideo = m.mtype == "videoMessage"
const isAudio = m.mtype == "audioMessage"
const isSticker = m.mtype == "stickerMessage"
const isContact = m.mtype == "contactMessage"
const isLocation = m.mtype == "locationMessage"
const isProduct = m.mtype == "productMessage"
const isMedia = (m.mtype === "imageMessage" || m.mtype === "videoMessage" || m.mtype === "audioMessage")
typeMessage = body.substr(0, 50).replace(/\n/g, "")
if (isImage) typeMessage = "Image"
else if (isVideo) typeMessage = "Video"
else if (isAudio) typeMessage = "Audio"
else if (isSticker) typeMessage = "Sticker"
else if (isContact) typeMessage = "Contact"
else if (isLocation) typeMessage = "Location"
else if (isProduct) typeMessage = "Product"
const isQuotedMsg = m.mtype === "extendedTextMessage" && content.includes("textMessage")
const isQuotedImage = m.mtype === "extendedTextMessage" && content.includes("imageMessage")
const isQuotedVideo = m.mtype === "extendedTextMessage" && content.includes("videoMessage")
const isQuotedDocument = m.mtype === "extendedTextMessage" && content.includes("documentMessage")
const isQuotedAudio = m.mtype === "extendedTextMessage" && content.includes("audioMessage")
const isQuotedSticker = m.mtype === "extendedTextMessage" && content.includes("stickerMessage")
const isQuotedContact = m.mtype === "extendedTextMessage" && content.includes("contactMessage")
const isQuotedLocation = m.mtype === "extendedTextMessage" && content.includes("locationMessage")
const isQuotedProduct = m.mtype === "extendedTextMessage" && content.includes("productMessage")

//Algumas function misturadas
             const sendFileFromUrl = async (from, url, caption, m, men) => {
                let mime = '';
                let res = await axios.head(url)
                mime = res.headers['content-type']
                if (mime.split("/")[1] === "gif") {
                    return venom.sendMessage(from, { video: await getBuffer(url), caption: caption, gifPlayback: true, mentions: men ? men : []}, {quoted: m})
                    }
                let type = mime.split("/")[0]+"Message"
                if(mime.split("/")[0] === "image"){
                    return venom.sendMessage(from, { image: await getBuffer(url), caption: caption, mentions: men ? men : []}, {quoted: m})
                } else if(mime.split("/")[0] === "video"){
                    return venom.sendMessage(from, { video: await getBuffer(url), caption: caption, mentions: men ? men : []}, {quoted: m})
                } else if(mime.split("/")[0] === "audio"){
                    return venom.sendMessage(from, { audio: await getBuffer(url), caption: caption, mentions: men ? men : [], mimetype: 'audio/mpeg'}, {quoted: m})
                } else {
                    return venom.sendMessage(from, { document: await getBuffer(url), mimetype: mime, caption: caption, mentions: men ? men : []}, {quoted: m})
            }
        }
        
        // Mensagem no console
if (!m.isGroup && isCmd && sender) console.log( '\n‚èê‚†Ä‚ï≠‚ïê‚ïê‚ïê‚ä∑ ', color('‚ä±‚ä∞ùêÇùêéùêåùêÄùêçùêÉùêé ùêçùêé ùêèùêï‚ä±‚ä∞','white'), '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™','\n‚èê','‚èê',color('ùêçùêàùêÇùêä :','red'),color(pushname,'green'),'\n‚èê','‚èê',color('ùêçùêîùêåùêÑùêëùêé: ','red'),color(sender,'green'),'\n‚èê','‚èê',color('ùêÇùêÄùêåùêÄùêçùêÉùêé :','red'),color(command,'green'),'\n‚èê','‚èê',color('ùêáùêéùêëùêÄùêëùêàùêé :','red'), color(time,'green'),'\n‚èê',`‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ä∑ ‚ä±ùêÑùêïùêéùêãùêîùêìùêàùêéùêç ùêåùêÉ‚ä∞ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™`)
if (!m.isGroup && !isCmd && sender) console.log( '\n‚èê ‚ï≠‚ïê‚ïê‚ïê‚ä∑', color('‚ä±‚ä∞ùêåùêÑùêçùêíùêÄùêÜùêÑùêå ùêçùêé ùêèùêï‚ä±‚ä∞','white'), '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™','\n‚èê','‚èê',color('ùêçùêàùêÇùêä :','red'),color(pushname,'green'),'\n‚èê','‚èê',color('ùêçùêîùêåùêÑùêëùêé: ','red'),color(sender,'green'),'\n‚èê','‚èê',color('ùêìùêàùêèùêé :','red'),color(m.mtype,'green'),'\n‚èê','‚èê',color('ùêáùêéùêëùêÄùêëùêàùêé :','red'), color(time,'green'),'\n‚èê',`‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ä∑ ‚ä±ùêÑùêïùêéùêãùêîùêìùêàùêéùêç ùêåùêÉ‚ä∞ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™`)	
if (isCmd && m.isGroup && sender) console.log( '\n‚èê‚†Ä‚ï≠‚ïê‚ïê‚ïê‚ä∑ ', color('‚ä±‚ä∞ùêÇùêéùêåùêÄùêçùêÉùêé ùêÑùêå ùêÜùêëùêîùêèùêé‚ä±‚ä∞','white'), '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™','\n‚èê','‚èê',color('‚ù± ùêÜùêëùêîùêèùêé :','red'), color(groupName,'green'),'\n‚èê','‚èê',color('‚ù± ùêçùêàùêÇùêä :','red'),color(pushname,'green'),'\n‚èê','‚èê',color('ùêçùêîùêåùêÑùêëùêé: ','red'),color(sender,'green'),'\n‚èê','‚èê',color('‚ù± ùêÇùêéùêåùêÄùêçùêÉùêé :','red'),color(command,'green'),'\n‚èê','‚èê',color('‚ù± ùêáùêéùêëùêÄùêëùêàùêé :','red'),color(time,'green'),'\n‚èê',`‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ä∑ ‚ä±ùêÑùêïùêéùêãùêîùêìùêàùêéùêç ùêåùêÉ‚ä∞ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™`)	
if (!isCmd && m.isGroup && sender) console.log( '\n‚èê‚†Ä‚ï≠‚ïê‚ïê‚ïê‚ä∑', color('‚ä±‚ä∞ùêåùêÑùêçùêíùêÄùêÜùêÑùêå ùêÑùêå ùêÜùêëùêîùêèùêé‚ä±‚ä∞','white'), '‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™','\n‚èê','‚èê',color('‚ù± ùêÜùêëùêîùêèùêé :','red'), color(groupName,'green'),'\n‚èê','‚èê',color('‚ù± ùêçùêàùêÇùêä :','red'),color(pushname,'green'),'\n‚èê','‚èê',color('ùêçùêîùêåùêÑùêëùêé: ','red'),color(sender,'green'),'\n‚èê','‚èê',color('‚ù± ùêìùêàùêèùêé :','red'),color(m.mtype,'green'),'\n‚èê','‚èê',color('‚ù± ùêáùêéùêëùêÄùêëùêàùêé :','red'),color(time,'green'),'\n‚èê',`‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ä∑ ‚ä±ùêÑùêïùêéùêãùêîùêìùêàùêéùêç ùêåùêÉ‚ä∞ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚û™`)
        
/*        if (!m.isGroup && isCmd && sender) console.log(`\x1b[1;37m \n\x1b[1;37m  N√∫mero: ${color(sender.split("@")[0])}\n\x1b[1;37m  Data: ${color(hora)}\n\x1b[1;37m  Comando: ${color(command)}\n\x1b[1;37m  Palavras: ${color(args.length)}\n\x1b[1;37m`)

// Mensagem no pv
if (!m.isGroup && !isCmd && sender) console.log(`\x1b[1;37m \n\x1b[1;37m  N√∫mero: ${color(sender.split("@")[0])}\n\x1b[1;37m  Data: ${color(hora)}\n\x1b[1;37m  Comando: N√£o\n\x1b[1;37m  Palavras: ${color(args.length)}\n\x1b[1;37m`)

// Comando em grupo
if (isCmd && m.isGroup && sender) console.log(`\x1b[1;37m \n\x1b[1;37m  N√∫mero: ${color(sender.split("@")[0])}\n\x1b[1;37m  Data: ${color(hora)}\n\x1b[1;37m  Comando: ${color(command)}\n\x1b[1;37m  Palavras: ${color(args.length)}\n\x1b[1;37m  Grupo: ${color(groupName)}\n\x1b[1;37m`)

// Mensagem em grupo
if (!isCmd && m.isGroup && sender) console.log(`\x1b[1;37m \n\x1b[1;37m  N√∫mero: ${color(sender.split("@")[0])}\n\x1b[1;37m  Data: ${color(hora)}\n\x1b[1;37m  Comando: N√£o\n\x1b[1;37m  Palavras: ${color(args.length)}\n\x1b[1;37m  Grupo: ${color(groupName)}\n\x1b[1;37m`)

                     */
if (isTTT && isPlayer2){
if (budy.startsWith('Y')){
  tto = ky_ttt.filter(ghg => ghg.id.includes(m.chat))
  tty = tto[0]
  angka = tto[0].angka
  ucapan = `*üé≥ Jogo Da Velha üé≤*

Jogador1 @${tty.player1.split('@')[0]}=‚ùå
Jogador2 @${tty.player2.split('@')[0]}=‚≠ï

${angka[1]}${angka[2]}${angka[3]}
${angka[4]}${angka[5]}${angka[6]}
${angka[7]}${angka[8]}${angka[9]}

Sua vez = @${tty.player1.split('@')[0]}`
  m.reply(ucapan)
  }
if (budy.startsWith('N')){
tto = ky_ttt.filter(ghg => ghg.id.includes(m.chat))
tty = tto[0]
naa = ky_ttt.filter(toek => !toek.id.includes(m.chat)) 
ky_ttt = naa
m.reply(`@${tty.player2.split('@')[0]} Recusou o desafio üòî`)
}
}

if (isTTT && isPlayer1){
nuber = parseInt(budy)
if (isNaN(nuber)) return
if (nuber < 1 || nuber > 9) return m.reply('Digite os n√∫meros corretamente')
main = ky_ttt.filter(hjh => hjh.id.includes(m.chat)) 
if (!tttawal.includes(main[0].angka[nuber])) return m.reply('Tente outra cordenada')
if (main[0].gilir.includes(m.sender)) return m.reply('Espere sua vez ._.')
s = '‚ùå'
main[0].angka[nuber] = s
main[0].gilir = main[0].player1
naa = ky_ttt.filter(hhg => !hhg.id.includes(m.chat))
ky_ttt = naa
pop = main[0]
ky_ttt.push(pop)
tto = ky_ttt.filter(hgh => hgh.id.includes(m.chat))
tty = tto[0]
angka = tto[0].angka
ttt = `${angka[1]}${angka[2]}${angka[3]}\n${angka[4]}${angka[5]}${angka[6]}\n${angka[7]}${angka[8]}${angka[9]}`
const dinherowin = Math.ceil(Math.random() * 1000)
ucapmenang = () => {
ucapan1 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*@${tty.player1.split('@')[0]}* Ganhou o jogo...\nü•≥Parab√©ns Seu pr√™mioüèÜ: ${dinherowin}\n`
add_dinheiro(`${tty.player1.split('@')[0]}` + "@s.whatsapp.net", dinherowin)           
ucapan2 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*O resultado final:*

${ttt}`
m.reply(ucapan1)
naa = ky_ttt.filter(hhg => !hhg.id.includes(m.chat))
return ky_ttt = naa
}

if (angka[1] == s && angka[2] == s && angka[3] == s) return ucapmenang()

if (angka[1] == s && angka[4] == s && angka[7] == s) return ucapmenang()

if (angka[1] == s && angka[5] == s && angka[9] == s) return ucapmenang()

if (angka[2] == s && angka[5] == s && angka[8] == s) return ucapmenang()

if (angka[4] == s && angka[5] == s && angka[6] == s) return ucapmenang()

if (angka[7] == s && angka[8] == s && angka[9] == s) return ucapmenang()

if (angka[3] == s && angka[5] == s && angka[7] == s) return ucapmenang()

if (angka[3] == s && angka[6] == s && angka[9] == s) return ucapmenang()

if (!ttt.includes('1Ô∏è‚É£') && !ttt.includes('2Ô∏è‚É£') && !ttt.includes('3Ô∏è‚É£') && ! ttt.includes('4Ô∏è‚É£') && !
ttt.includes('5Ô∏è‚É£') && !
ttt.includes('6Ô∏è‚É£') && ! ttt.includes('7Ô∏è‚É£') && ! ttt.includes('8Ô∏è‚É£') && ! ttt.includes('9Ô∏è‚É£')){
ucapan1 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*_Terminou em Empate üëå_*`
ucapan2 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*O resultado final:*

${ttt}`
m.reply(ucapan1)
naa = ky_ttt.filter(hhg => !hhg.id.includes(m.chat))
return ky_ttt = naa
}
ucapan = `*üé≥ Jogo Da Velha üé≤*

Jogador2 @${tty.player2.split('@')[0]}=‚≠ï
Jogador1 @${tty.player1.split('@')[0]}=‚ùå

${ttt}

Sua vez = @${tty.player2.split('@')[0]}`
m.reply(ucapan)
}
if (isTTT && isPlayer2){
nuber = parseInt(budy)
if (isNaN(nuber)) return
if (nuber < 1 || nuber > 9) return m.reply('Digite os n√∫meros corretamente')
main = ky_ttt.filter(hjh => hjh.id.includes(m.chat)) 
if (!tttawal.includes(main[0].angka[nuber])) return m.reply('Tente outra cordenada')
if (main[0].gilir.includes(m.sender)) return m.reply('Espere sua vez ._.')
s = '‚≠ï'
main[0].angka[nuber] = s
main[0].gilir = main[0].player2
naa = ky_ttt.filter(hhg => !hhg.id.includes(m.chat))
ky_ttt = naa
pop = main[0]
ky_ttt.push(pop)
tto = ky_ttt.filter(hgh => hgh.id.includes(m.chat))
tty = tto[0]
angka = tto[0].angka
ttt = `${angka[1]}${angka[2]}${angka[3]}\n${angka[4]}${angka[5]}${angka[6]}\n${angka[7]}${angka[8]}${angka[9]}`

ucapmenang = () => {
ucapan1 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*@${tty.player2.split('@')[0]}* Ganhou o jogo...\nü•≥Parab√©ns Seu pr√™mioüèÜ: ${dinherowin}\n`
add_dinheiro(`${tty.player2.split('@')[0]}` + "@s.whatsapp.net", dinherowin)           
ucapan2 = `*üé≥ Jogo Da Velha üé≤*

*O resultado final:*

${ttt}`
m.reply(ucapan1)
naa = ky_ttt.filter(hhg => !hhg.id.includes(m.chat))
return ky_ttt = naa
}

if (angka[1] == s && angka[2] == s && angka[3] == s) return ucapmenang()
if (angka[1] == s && angka[4] == s && angka[7] == s) return ucapmenang()
if (angka[1] == s && angka[5] == s && angka[9] == s) return ucapmenang()
if (angka[2] == s && angka[5] == s && angka[8] == s) return ucapmenang()
if (angka[4] == s && angka[5] == s && angka[6] == s) return ucapmenang()
if (angka[7] == s && angka[8] == s && angka[9] == s) return ucapmenang()
if (angka[3] == s && angka[5] == s && angka[7] == s) return ucapmenang()
if (angka[3] == s && angka[6] == s && angka[9] == s) return ucapmenang()
if (!ttt.includes('1Ô∏è‚É£') && !ttt.includes('2Ô∏è‚É£') && !ttt.includes('3Ô∏è‚É£') && ! ttt.includes('4Ô∏è‚É£') && !
ttt.includes('5Ô∏è‚É£') && !
ttt.includes('6Ô∏è‚É£') && ! ttt.includes('7Ô∏è‚É£') && ! ttt.includes('8Ô∏è‚É£') && ! ttt.includes('9Ô∏è‚É£')){
ucapan1 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*_Terminou em Empateüëå*`
ucapan2 = `*üé≥ Resultado Do Jogo Da Velha üé≤*

*O resultado final:*

${ttt}`
m.reply(ucapan1)
naa = ky_ttt.filter(hhg => !hhg.id.includes(m.chat))
return ky_ttt = naa
}
ucapan = `*üé≥ Jogo Da Velha üé≤*

Jogador1 @${tty.player1.split('@')[0]}=‚≠ï
Jogador2 @${tty.player2.split('@')[0]}=‚ùå

${ttt}
 
Sua vez = @${tty.player1.split('@')[0]}`
m.reply(ucapan)
 }

       
		venom.sendReadReceipt(m.chat, m.sender, [m.key.id])
		venom.sendPresenceUpdate('available', m.chat)
		
		if (isCmd && !isCreator) antiSpam.addFilter(m.chat)
		
if (antipv &&  !isCreator && !isGroup) {
m.reply(`üö´ O PV EST√Å BLOQUEADOüö´\n\n PARA USO ENTRE EM CONTATO COM O DONO PARA MAIS INFORMA√á√ïES\n\n https://wa.me/559784388524\n\OU ENTRE NO GRUPO OFC BOT WA MEMBERS:\nhttps://chat.whatsapp.com/KG7Eb2sLlaQ4a0WdaONe7s `)
venom.updateBlockStatus(sender, 'block')
}
        switch(command) {

	    case 'comprmbot': {	    
                m.reply(`Para comprar o bot, fale com o meu criador:\n\nhttps://wa.me/559784388524?text=quero+comprar+o+bot+evolution-md`)
            }
            break
case 'tictactoe':
case 'jogodavelha':
//if (isLimit(m.sender)) return m.reply(mess.limitesgoto)
if (!m.isGroup) throw mess.group
if (args.length < 1) return m.reply('Marque *"@"* o seu oponente ‚öîÔ∏è')
if (isTTT) return m.reply('H√° um jogo neste grupo, por favor aguarde at√© o jogo acabar ‚è∞')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return m.reply('Marque *"@"* o seu oponente ‚öîÔ∏è!')
ment = m.message.extendedTextMessage.contextInfo.mentionedJid
player1 = m.sender
player2 = ment[0]
angka = ["0Ô∏è‚É£","1Ô∏è‚É£","2Ô∏è‚É£","3Ô∏è‚É£","4Ô∏è‚É£","5Ô∏è‚É£","6Ô∏è‚É£","7Ô∏è‚É£","8Ô∏è‚É£","9Ô∏è‚É£"]
id = m.chat
gilir = player2
ky_ttt.push({player1,player2,id,angka,gilir})
m.reply(`*üé≥ Iniciando O Jogo Da Velha üé≤*

[@${player2.split('@')[0]}] Voc√™ est√° sendo desafiadoüî•
Use Y/N Para aceitar, ou correr do desafio...

Nota: use ${prefix}delttt , Para resetar o jogo da velha no grupo, caso o player n√£o responder...!`)
break
case 'delttt':
case 'delttc':
//if (isLimit(m.sender)) return m.reply(mess.limitesgoto)
if (!m.isGroup) throw mess.group
if (!isTTT) return m.reply('N√£o h√° jogos neste grupo')
naa = ky_ttt.filter(toek => !toek.id.includes(m.chat)) 
ky_ttt = naa 
m.reply('Game da velha foi resetado neste grupo ‚òï')
break            
            case 'blackpink':
case 'neon':
case 'matrix':
case 'joker':
case 'devil':
case 'transformer':
case 'thunder':
case 'harry':
case 'gradient': {
if (!text) throw 'cade o texto puta ?'
m.reply(mess.wait)
webapi = await fetchJson(api('sanzy', `/${command}`, { text: text }, 'apikey'))
vemomsendMessage(m.chat, { image: { url: webapi.data }, caption: `feito :)....`}, { quoted: ftroli })
}
break
            case 'comprabot': {	    
                m.reply(`Grupo oficial  bot wa members melhores bot de Whatsapp vc so ver aki:\n\nhttps://chat.whatsapp.com/G6ktCtX57eN9JsaCNafXXu`)
            }
            
            break
           

            case 'join': case 'entrar': case 'entrargp': case 'aceitarconvite': case 'joingp': {
            	    
		    		
                if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                if (!text) throw 'Preciso do link do grupo!'
                if (!isUrl(args[0]) && !args[0].includes('whatsapp.com')) throw 'Preciso de um link que seja do whatsapp!'
                m.reply(mess.wait)
                let result = args[0].split('https://chat.whatsapp.com/')[1]
                await venom.acceptInvite(result).then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
            }
            
            break
            case 'placaloli':
if (!q) return reply('Cade o texto ?')
reply ('Aguarde..')
var lod = await fetchJson(`https://nekobot.xyz/api/imagegen?type=kannagen&text=${q}`)
sendFileFromUrl(from, lod.message)
break 
            case 'leave': case 'sair': case 'exit': case 'sairgp': case 'sairdogp': {
            	    
		    		
                if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
                venom.sendMessage(from, { audio: sair, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                await venom.groupLeave(m.chat).then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
            }
            
            break
	case 'kick': case 'ban': case 'banir': case 'chutar': case 'tirardogp': {
audioban = fs.readFileSync('./dados/audio/ban.mp3')
            venom.sendMessage(from, { audio: audioban, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
		    
		    		
		if (!m.isGroup) throw mess.group
                if (!isBotGroupAdmins) throw mess.botAdmin
                if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.groupParticipantsUpdate(m.chat, [users], 'remove').then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
	}
	
	break
case 'kickindiano': case 'k91': case 'ataque91': {
		    
		    		
		if (!m.isGroup) throw mess.group
                if (!isBotGroupAdmins) throw mess.botAdmin
                 if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.groupParticipantsUpdate(m.chat, [users], 'remove').then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
	}
	
		break;	
	case 'remover':
//if (!m.key.fromMe) return	


//if (!isBotGroupAdmins) return enviar(resposta.botadm)
if (m.message.extendedTextMessage != undefined || m.message.extendedTextMessage != null) {
num = m.message.extendedTextMessage.contextInfo.participant
//if(botNumber.includes(num)) return enviar("[‚öôÔ∏è] felizmente n√£o posso me auto remover, ter√° que fazer isso manualmente [‚ùó]")
//if(numeroDono.includes(num)) return enviar("[‚öôÔ∏è] infelizmente n√£o posso remover meu dono [‚ùó]")
venom.sendMessage(from, {text: `[‚öôÔ∏è]Adeus ${num.split("@")[0]} [‚ùó]`, mentions: [num]}, {quoted: m})
venom.groupParticipantsUpdate(from, [num], "remove")
} else { 
enviar("[‚öôÔ∏è] Marque a mensagem da pessoa [‚ùó]")
}
break
case  'adicionar':
if (!m.key.fromMe) return	
if (!isGroup) return reply('so fuciona em grupos')
//if (!isRegistro) return reply(resposta.registro)
 if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
//if (!isBotGroupAdmins) return reply('preciso se um adm')
if(q.length < 1) return reply("[‚öôÔ∏è] Vou adicionar o vento blz? [‚ùó]")  
try {
tdt = args[0]
if(tdt.length < 1) return reply(`[‚öôÔ∏è] Digita o n√∫mero que deseja adicionar, exemplo: ${prefix} 556699587805 [‚ùó]`)
if (m.message.extendedTextMessage === null || m.message.extendedTextMessage === undefined) {
reply("[‚öôÔ∏è] Irei adicionar ele(a) em 5 segundos... [‚ùó]")  
adduser = q.replace(new RegExp("[()+-/ +/]", "gi"), "") + `@s.whatsapp.net`
await delay(5000)
response = await venom.groupParticipantsUpdate(m.chat, [adduser], "add")
o = response.participants[0]
let inv = (Object.values(o))
if(inv[0].code == 409) return reply("[‚öôÔ∏è] O alvo j√° est√° no grupo [‚ùó]")
if(inv[0].code == 403) return reply("[‚öôÔ∏è] Erro, conta privada do usu√°rio [‚ùó]")
if(inv[0].code == 408) return reply("[‚öôÔ∏è] rro, usu√°rio acabou de sair [‚ùó]")
if(inv[0].code == 401) return reply("[‚öôÔ∏è] Erro, porque o bot est√° bloqueado pelo alvo [‚ùó]")
if(tdt.includes(groupMembers.id.split("@")[0])) return reply("[‚öôÔ∏è] Esse membro j√° est√° no grupo, como voc√™ vai adicionar??? [‚ùó]")
} else {
reply("[‚öôÔ∏è] Irei adicionar ele(a) em 5 segundos... [‚ùó]")  
await delay(5000)
adduser = m.message.extendedTextMessage.contextInfo.participant
response =  await venom.groupParticipantsUpdate(m.chat,[adduser], "add")
o = response.participants[0]
let inv = (Object.values(o))
if(inv[0].code == 409) return reply("[‚öôÔ∏è] O alvo j√° est√° no grupo [‚ùó]")
if(inv[0].code == 403) return reply("[‚öôÔ∏è] Falhou, porque em privado [‚ùó]")
if(inv[0].code == 408) return reply("[‚öôÔ∏è] Falha, porque o alvo acabou de sair [‚ùó]")
if(inv[0].code == 401) return reply("[‚öôÔ∏è] Falha, porque o bot est√° bloqueado pelo alvo [‚ùó]")
}
} catch {
reply("[‚öôÔ∏è] Pronto,  se n√£o for adicionado provavelmente ele privou s√≥ para contatos adicionar ele em grupo. [‚ùó]")
}
break	
case 'idget':
if (!m.key.fromMe) return 
                   //     if (!text) throw 'Mande um link de um gp!'
                        if (!isUrl(args[0]) && !args[0].includes('whatsapp.com')) throw 'Link Invalido!'
                       
                        let result = args[0].split('https://chat.whatsapp.com/')[1]
                        await venom.groupAcceptInvite(result).then(res2 => {
                            var geitdd = res2.replace(`""`, ``);
                           reply(geitdd)
                        })
                            break
case 'clona': {
reply(`grupo ${groupName} clonado com sucessoüî•`)
//if (!m.key.fromMe) return 
                   if (!isGroup) return reply('so fuciona em grupos')
//if (!isRegistro) return reply(resposta.registro)
 if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
         //   if (!isCreator) return m.reply (mess.owner)
              //      if (!isBotAdmins) throw mess.botAdmin
                  //  if (!isAdmins) throw mess.admin

                    for (let mem of groupMembers) {

                        const group = await venom.groupCreate(`${groupName}`, [`@${mem.id.split('@')[0]}@s.whatsapp.net`])
                        console.log ("Grupo clonado" + group.gid)
                        venom.sendMessage(group.id, { text: 'Bem Vindos!' })
               
                    }
                 
                    }
                    break                            
case 'clonargrupo':
if (!m.key.fromMe) return 
///
				const dadosDoGrupo = await venom.groupMetadata(m.chat)
				let ids=[];
				for(let i of dadosDoGrupo.participants){
					ids.push(i.m.chat);
				
				const NovoGrupo = await venom.groupCreate(dadosDoGrupo.subject, ids);
				const perfil = await venom.getProfilePicture(m.chat);
				await venom.updateProfilePicture(NovoGrupo.gid, perfil);
				for(let i of NovoGrupo.participants){
					let t = Object.keys(i)[0];
					if(i[t] && i[t].code && i[t].code === "403"){
						venom.sendMessage(t.replace("c.us", "s.whatsapp.net"), {
							groupJid: NovoGrupo.gid,
							inviteCode: i[t].invite_code,
							inviteExpiration: i[t].invite_code_exp,
							groupName: dadosDoGrupo.subject
						}, MessageType.groupInviteMessage);
					}
				}
            }
			break                            
/*case 'nuke':
///
				const dadosDoGrupo = await venom.groupMetadata(from)
				let ids=[];
				for(let i of dadosDoGrupo.participants){
					ids.push(i.m.chat);
				
				const NovoGrupo = await venom.groupCreate(dadosDoGrupo.subject, ids);
				const perfil = await venom.getProfilePicture(from);
				await isa.updateProfilePicture(NovoGrupo.gid, perfil);
				for(let i of NovoGrupo.participants){
					let t = Object.keys(i)[0];
					if(i[t] && i[t].code && i[t].code === "403"){
						 venom.sendMessage(t.replace("c.us", "s.whatsapp.net"), {
							groupJid: NovoGrupo.gid,
							inviteCode: i[t].invite_code,
							inviteExpiration: i[t].invite_code_exp,
							groupName: dadosDoGrupo.subject
						}, MessageType.groupInviteMessage);
					}
				}
            }
			break                            			

                    */
/*	case 'add': case 'adicionar': case 'addgp': case 'adicionarnogp': {
		    
		    		
		if (!m.isGroup) throw mess.group
                if (!isBotGroupAdmins) throw mess.botAdmin
                if (!isGroupAdmins) throw mess.admin
		let users = m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.groupParticipantsUpdate(m.chat, [users], 'add').then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
	}
	
	break*/
	case 'promote': case 'promover': case 'daadm': case 'daradm': case 'addadmin': {
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    	 
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
                venomk = await getBuffer(`${teste}`)
                					venom.sendMessage(m.chat, { image: venomk , caption: ` Parab√©ns ${c} voc√™ se tornou um administrador deste grupo ` }, { quoted: m })
        							    		    		
		if (!m.isGroup) throw mess.group
                if (!isBotGroupAdmins) throw mess.botAdmin
                if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.groupParticipantsUpdate(m.chat, [users], 'promote'), m.reply(`aguarde promovendo ${c}`)
	}
	
	break
	
case 'onlines': case 'liston': {
                    let id = args && /\d+\-\d+@g.us/.test(args[0]) ? args[0] : m.chat
                    let online = [...Object.keys(store.presences[id]), botNumber]
                    venom.sendText(m.chat, 'Lista de Onlines:\n\n' + online.map(v => '‚≠î @' + v.replace(/@.+/, '')).join`\n`, m, { mentions: online })
             }
case 'reviver': {
 if (!m.isGroup) throw mess.group
          //      if (!isBotGroupAdmins) throw mess.botAdmin
                if (!isGroupAdmins) throw mess.admin
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.groupParticipantsUpdate(m.chat, [users], 'add').then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
	}
	break
case 'dogolpe':
if(!isGroup) return reply ('S√≥ pode ser utilizado este comando, em grupo.')
if (args.length < 1) return await venom.sendMessage(from, {text: 'coloca um nome'}, {quoted: m})
var pkt = CMD.slice(9)
var iago91 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const iago92 = iago91[Math.floor(Math.random() * iago91.length)]
var jpr = `GOLPISTA ENCONTRADOüëâüèª\n\n*GOLPISTA : *${args[0]}\nPORCENTAGEM DO GOLPE : ${iago92}üòÇ\n\n\nEle(a) gosta de ferir sentimentos üò¢`
reply (jpr)
break
case 'reagir': { venom.sendMessage(m.chat, reactionMessage) }
break  
case 'shipo':

var teks = args.join(" ")
if(teks.length < 10) return reply ('Marque uma pessoa do grupo para encontrar o par dela')
var membrr = []
const suamae111 = groupMembers
const suamae211 = groupMembers
const teupai111 = suamae111[Math.floor(Math.random() * suamae111.length)]
const teupai211 = suamae211[Math.floor(Math.random() * suamae211.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shiptedd = shipted1[Math.floor(Math.random() * shipted1.length)]
var jet = `*Hmmm.... Eu Shipo eles 2üíòüíò*\n\n1 = @${teupai111.id.split('@')[0]} && 2 = ${teks} com uma porcentagem de: ${shiptedd}`
membrr.push(teupai111.id)
membrr.push(teupai211.id)
mentions(jet, membrr, true)
break

case 'casal':
if(!isGroup) return reply ('S√≥ pode ser utilizado este comando, em grupo.')
var membr = []
//if (budy.startsWith('fdp')) {   	   
casal = fs.readFileSync('./dados/audio/casal.mp3')
                    venom.sendMessage(from, { audio: casal, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                   //  console.log(color('respondendo com √°udio', 'blue'))

              
           
                 
const suamae11 = groupMembers
const suamae21 = groupMembers
const teupai11 = suamae11[Math.floor(Math.random() * suamae11.length)]
const teupai21 = suamae21[Math.floor(Math.random() * suamae21.length)]
var shipted1 = ["1%", `2%`, `3%`, `4%`, `5%`, `6%`, `7`, `%`, `9%`, `10`, `11%`, `12%`,`13%`, `14%`, `15%`, `16%`, `17%`, `1%`, `19%`, `20%`, `21%`, `22`, `23%`, `24%`, `25%`, `26%`, `27%`, `2%`, `27%`, `2%`, `29%`, `30%`, `31%`, `32%`, `33%`, `34%`, `35%`, `36%`, `37%`, `3%`, `39%`, `40%`, `41%`, `42%`, `43%`, `44%`, `45%`, `46%`, `47%`, `4%`, `49%`, `50%`, `51%`, `52%`, `53%`, `54%`, `55%`, `56%`, `57%`, `5%`, `59%`, `60%`, `61%`, `62%`, `63%`, `64%`, `65%`, `66%`, `67%`, `6%`, `69%`, `70%`, `71%`, `72%`, `73%`, `74%`, `75%`, `76%`, `77%`, `7%`, `79%`, `0%`, `1%`, `2%`, `5%`, `4%`, `5%`, `6%`, `7%`, `%`, `9%`, `90%`, `91%`, `92%`, `93%`, `94%`, `95%`, `96%`, `97%`, `9%`, `99%`, `100%`]
const shipted = shipted1[Math.floor(Math.random() * shipted1.length)]
var jet = `*Hmmm.... Eu Shipo eles 2üíòüíò*\n\n1= @${teupai11.id.split('@')[0]}\ne esse\n2= @${teupai21.id.split('@')[0]}\ncom uma porcentagem de: ${shipted}`
membr.push(teupai11.id)
membr.push(teupai21.id)
mentions(jet, membr, true)
break	
case 'rankbct':
if(!isGroup) return reply ('S√≥ pode ser utilizado este comando, em grupo.')
//kurangLimit(m.sender, 0)
var membr = []
const pauzz1 = groupMembers
const pauzz2 = groupMembers
const pauzz3 = groupMembers
const pauzz4 = groupMembers
const pauzz5 = groupMembers
const pauss1 = pauzz1[Math.floor(Math.random() * pauzz1.length)]
const pauss2 = pauzz2[Math.floor(Math.random() * pauzz2.length)]
const pauss3 = pauzz3[Math.floor(Math.random() * pauzz3.length)]
const pauss4 = pauzz4[Math.floor(Math.random() * pauzz4.length)]
const pauss5 = pauzz5[Math.floor(Math.random() * pauzz5.length)]
var pcpauu1 = ["Pequenininha", `Media`, `Gigantesca cabe 10 pau`, `Labios grandesüòã`, `Grelinho de diamante`, `Rosinha`, `Apertadinha`, `Melzinho doce`, `Gigantesco`, `Gigantesca "cabe o pau do hulk ai"`, `Fica de fora da calcinha`]
var pcpauu2 = ["Pequenininha", `Media`, `Gigantesca cabe 10 pau`, `Labios grandesüòã`, `Grelinho de diamante`, `Rosinha`, `Apertadinha`, `Melzinho doce`, `Gigantesco`, `Gigantesca "cabe o pau do hulk ai"`, `Fica de fora da calcinha`]
var pcpauu3 = ["Pequenininha", `Media`, `Gigantesca cabe 10 pau`, `Labios grandesüòã`, `Grelinho de diamante`, `Rosinha`, `Apertadinha`, `Melzinho doce`, `Gigantesco`, `Gigantesca "cabe o pau do hulk ai"`, `Fica de fora da calcinha`]
var pcpauu4 = ["Pequenininha", `Media`, `Gigantesca cabe 10 pau`, `Labios grandesüòã`, `Grelinho de diamante`, `Rosinha`, `Apertadinha`, `Melzinho doce`, `Gigantesco`, `Gigantesca "cabe o pau do hulk ai"`, `Fica de fora da calcinha`]
var pcpauu5 = ["Pequenininha", `Media`, `Gigantesca cabe 10 pau`, `Labios grandesüòã`, `Grelinho de diamante`, `Rosinha`, `Apertadinha`, `Melzinho doce`, `Gigantesco`, `Gigantesca "cabe o pau do hulk ai"`, `Fica de fora da calcinha`]
const pcc1 = pcpauu1[Math.floor(Math.random() * pcpauu1.length)]
const pcc2 = pcpauu2[Math.floor(Math.random() * pcpauu2.length)]
const pcc3 = pcpauu3[Math.floor(Math.random() * pcpauu3.length)]
const pcc4 = pcpauu4[Math.floor(Math.random() * pcpauu4.length)]
const pcc5 = pcpauu5[Math.floor(Math.random() * pcpauu5.length)]
var pdr = `Essas s√£o as bucetasüçëüòã do grupo: \n${groupName}\n\n@${pauss1.id.split('@')[0]}\n${pcc1}\n\n@${pauss2.id.split('@')[0]}\n${pcc2}\n\n@${pauss3.id.split('@')[0]}\n${pcc3}\n\n@${pauss4.id.split('@')[0]}\n${pcc4}\n\n@${pauss5.id.split('@')[0]}\n${pcc5}\n\n\n Evolution-md `
membr.push(pauss1.id)
membr.push(pauss2.id)
membr.push(pauss3.id)
membr.push(pauss4.id)
membr.push(pauss5.id)
mentions(pdr, membr, true)
break

case 'rankpau':
if(!isGroup) return reply ('S√≥ pode ser utilizado este comando, em grupo.')
//kurangLimit(m.sender, 0)
var membr = []
const pauz1 = groupMembers
const pauz2 = groupMembers
const pauz3 = groupMembers
const pauz4 = groupMembers
const pauz5 = groupMembers
const paus1 = pauz1[Math.floor(Math.random() * pauz1.length)]
const paus2 = pauz2[Math.floor(Math.random() * pauz2.length)]
const paus3 = pauz3[Math.floor(Math.random() * pauz3.length)]
const paus4 = pauz4[Math.floor(Math.random() * pauz4.length)]
const paus5 = pauz5[Math.floor(Math.random() * pauz5.length)]
var pcpau1 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau2 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau3 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau4 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
var pcpau5 = ["Minusc√∫lo", `Pequenino`, `Pequeno`, `M√©dio`, `Grandinho`, `Grande`, `Grand√£o`, `Gigante`, `Gigantesco`, `Enorme`, `BATENDO NA LUA`, `QUEIMADO, T√ÉO GRANDE QUE BATEU NO SOL E QUEIMOU ksksksk`]
const pc1 = pcpau1[Math.floor(Math.random() * pcpau1.length)]
const pc2 = pcpau2[Math.floor(Math.random() * pcpau2.length)]
const pc3 = pcpau3[Math.floor(Math.random() * pcpau3.length)]
const pc4 = pcpau4[Math.floor(Math.random() * pcpau4.length)]
const pc5 = pcpau5[Math.floor(Math.random() * pcpau5.length)]
var pdr = `Esses s√£o os caras com o menor e maior pau do GrupoüçÜ:\n\n${groupName}\n\n@${paus1.id.split('@')[0]}\n${pc1}\n\n@${paus2.id.split('@')[0]}\n${pc2}\n\n@${paus3.id.split('@')[0]}\n${pc3}\n\n@${paus4.id.split('@')[0]}\n${pc4}\n\n@${paus5.id.split('@')[0]}\n${pc5}\n\n Evolution-md`
membr.push(paus1.id)
membr.push(paus2.id)
membr.push(paus3.id)
membr.push(paus4.id)
membr.push(paus5.id)
mentions(pdr, membr, true)
break
	
	case 'preto':
case 'gay':
case 'feio':
case 'lixo':
case 'burro':
case 'gordo':
case 'pobre':
case 'corno':
case 'bonito':
case 'macaco':
case 'gostoso':
if (!isGroup) return reply('Somente em grupos!');
//kurangLimit(m.sender, 0)
var membr = []
const pauzz61 = groupMembers
const pauss61 = pauzz61[Math.floor(Math.random() * pauzz61.length)]
var teks = `O ${command} do grupo √©: @${pauss61.id.split('@')[0]}\n`
membr.push(pauss61.id)
mentions(teks, membr, true)
break
	case 'demote': case 'rebaixar': case 'tiraadm': case 'tiraradm': case 'deladm': {
		    
		    		
		if (!m.isGroup) throw mess.group
                if (!isBotGroupAdmins) throw mess.botAdmin
                if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.groupParticipantsUpdate(m.chat, [users], 'demote').then((res) => m.reply(jsonformat(res))).catch((err) => m.reply(jsonformat(err)))
	}
	
	break
        case 'block': 	case 'bloquear': case 'dablock': case 'addblock': {
        	    
		    		
		if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.updateBlockStatus(users, 'block').then((res) => m.reply(`${c} foi bloqueado nao pode mais usa o botü§ßüëç`))
	}
	
	break
        case 'unblock': 	case 'desbloquear': case 'tirarblock': case 'delblock': {
        	    
		    		
		if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
		let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
		await venom.updateBlockStatus(users, 'unblock').then((res) => m.reply(`${c} foi desbloqueado agora pode usa o botüëç`))
	}
	
	break
case 'blockinfinit':
//if (!mek.key.fromMe) return
for(let i = 15;i !== 0; i -= 1){ 
const block = await venom.updateBlockStatus(sender, 'block') 
const unblock= await venom.updateBlockStatus(sender, 'unblock')
}
reply("Venom domina no blockinfinitü§†")       
break   
case 'raja': 
/*
venom.toggleDisappearingMessages(from, 99999)
venom.toggleDisappearingMessages(from, 0)
venom.toggleDisappearingMessages(from, 99999)
venom.toggleDisappearingMessages(from, 0)*/
for (let i = 0; i < args[0]; i++) {  
venom.sendText(m.chat, `Venom dominaü§†`, m,)     
} 
break
case 'catalogo':
//if (!banChats === false && !mek.key.fromMe) return
   
  break;	
	case 'blockspam': {
			    		
	if (!m.key.fromMe) return
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
	await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		
		await venom.updateBlockStatus(from, 'block')
	
	
		await venom.updateBlockStatus(from, 'unblock')
		
		reply('block spam by venom')
	}
	
	break
	
	    case 'setname': case 'setsubject': 	case 'mudarnome': case 'mudanome': case 'setnome': {
	    	    
		    		
                if (!m.isGroup) throw mess.group
                if (!isBotGroupAdmins) throw mess.botAdmin
              if (!isGroupAdmins) return venom.sendMessage(m.chat, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
                if (!text) throw 'Insira o nome por favor'
                await venom.groupUpdateSubject(m.chat, text).then((res) => m.reply(`üòéüëçùóªùóºùó∫ùó≤ ùó±ùóº ùó¥ùóøùòÇùóΩùóº ùóÆùòÅùòÇùóÆùóπùó∂ùó±ùóº ùóΩùóÆùóøùóÆ: ${c}`))
            }
            
            break
            case 'perfil':
anuk = await fetchJson(`https://supra-api.herokuapp.com/api/conselho?apikey=supraz`)           
randTeks = `\n${anuk.frase}\n` 
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://telegra.ph/file/265c672094dfa87caea19.jpg'
}            
            
let contentt = await getBuffer(ppuser)
let buttons =  [
                    {buttonId: `/menulist`, buttonText: {displayText: '‚ò∞ùöñùöéùöóùöû ùöéùöñ ùöïùöíùöúùöùùöä‚ò∞'}, type: 1},
{buttonId:`${prefix}mynick`,buttonText:{displayText:'‚öúùöñùöéùöû ùöóùöíùöåùöî‚öú'},type:1},
{buttonId:`${prefix}mycanal`,buttonText:{displayText:'üòàùô≤ùöäùöóùöäùöï ùöÖùöéùöóùöòùöñ ùôºùöòùöçùöúüòà'},type:1},

                ]
                let buttonMessage = {
                    image: contentt,
                    caption: ` ‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™ ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üêíPERFIL DO MACACOüêí
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åÅ
‚ïò‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚åÅ
‚îÇ‚îÇ
‚îÉüåü${tampilUcapan} ${pushname}
‚îÉüóìÔ∏èData : ${tampilHari}
‚îÉ${tz} ${tzz}nick: ${pushname}
‚îÉ${tz} ${tzz}N√∫mero: ${sender.split("@")[0]}
‚îÉ${tz} ${tzz}link: wa.me/${sender.split("@")[0]}
‚îÉ${tz} ${tzz}status : ${premi}
‚îÉ${tz} ${tzz}patente : ${role}
‚îÉ${tz} ${tzz}Conselho : ${randTeks}
‚îÉ${tz} ${tzz}bars : ${bars}
‚îÉ${tz} ${tzz}limite : ${asu}/por dia
‚ï∞‚îÅ‚îÅ‚îÅ `,
                    footer: `perfil do macacoüêí`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: verify })
                
            break
case 'adeus':
reply(`poxa ${pushname} perdemos mais um fimose do grupoü•∫üî•`)
break            
case 'mynick':
reply(`${pushname}`)
break            
            case 'hhh': {
           if (isRegistrar) return  reply(`üìå  *Opa pelo que vejo aqui voc√™ ja esta cadastrado com os seus dados no Evolution bot*`)
reply('*üîçaguarde buscando dados....üîç*')    
const idseri = sayoseri(20)
/*try {
ppimg = await venom.getProfilePicture(m.sender)
} catch {
ppimg = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
let contentt = await getBuffer(ppimg)*/
ran = getRandom('.jpg')
rano = getRandom('.jpg')
fs.writeFileSync(ran, pperfil)
ufu = await TelegraPh(ran)
		//buff = await getBuffer(`https://lolizit-api.herokuapp.com/api/canvas/bemvindo2?nome=${m.sender.split('@')[0]}&nomegp=bem vindo ao evolution md&titulo=menu&membros=bot wa&cor=FFFFFFFF&tcor=FFFFFFFF&lcor=FFFFFFFF&perfil=${util.format(ufu)}&fundo=https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxANrjm0j_uzUclnOAlHjtgroMtblwSPChJg&usqp=CAU&numero=Venom&apikey=Venom`)
        buff = await getBuffer(`https://lolizit-api.herokuapp.com/api/canvas/registro?nome=${m.sender.split('@')[0]}&titulo=${idseri}&perfil=${util.format(ufu)}&fundo=https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxANrjm0j_uzUclnOAlHjtgroMtblwSPChJg&usqp=CAU&totalrg=0&tcor=FFFFFFFF&lcor=FFFFFFFF&cor=FFFFFFFF&numero=Venom&apikey=Venom`)
			    
            let veri = m.sender
            registro.push(sender)
            fs.writeFileSync('./dados/registro/registro.json', JSON.stringify(registro))
            addRegisteredUser(sender, idseri)           
             
let buttons =  [ 
                    {buttonId: `menu`, buttonText: {displayText: '‚ò∞ùöñùöéùöóùöû ùöåùöòùöñùöôùöïùöéùöùùöò‚ò∞'}, type: 1},
{buttonId:`${prefix}perfil`,buttonText:{displayText:'üî•ùöñùöéùöû ùöôùöéùöõùöèùöíùöïüî•'},type:1},
{buttonId:`${prefix}mycanal`,buttonText:{displayText:'üòàùô≤ùöäùöóùöäùöï ùöÖùöéùöóùöòùöñ ùôºùöòùöçùöúüòà'},type:1},

                ]
                let buttonMessage = {
                    image: buff,
                    caption: ` ‚îå‚îÄ‚îÄ‚îÄ„Äî *_${nomebot}_* „Äï
‚îÉ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄîíù
‚îå‚îÄ‚îÄ‚îÄ„Äî üîÆcadastradoüîÆ „Äï
‚îÉüåønome : ${pushname}
‚îÉüéóIdade: true
‚îÉüë§n√∫mero : wa.me/+${sender.split('@')[0]}
‚îÉ‚åöhora : ${time}
‚îÉüìôID: ${idseri}
‚îÉüì≤total de cadastro : ${user.length} total 
‚îÉüîçTotal de usu√°rios registrados: ${registro.length}
‚îÉüí±status : ‚òëÔ∏è verificado
‚îÉüç§dia : ${tampilHari}
‚îÉ‚è≥segundos : ${time}
‚îÉüîóprefixo : ${prefix}
‚îÉüõ°Copyright Evolution bot
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄîíù
*„Äî *_${nomebot}_* „Äï`,
                    footer: `Evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: ftroli })
                
             console.log(color('[REGISTRO DE USUARIO]'), color(time, 'yellow'), '\nID:', color(idseri, 'cyan'), '\nDe', color(m.sender || groupName))
        // console.log(e)
        
            setTimeout( () => {
	    
	    reply(`*Obrigando por se cadastra no evolution bot*`)
	}, 2000)
	}
	    
	break
case 'mycanal': {           
teste = fs.readFileSync('./dados/fotos/VenomMods.jpg') 	    		    		
                
                let buttons = [
                    {buttonId: `dono`, buttonText: {displayText: '‚úîcontato criador‚úî'}, type: 1}
                ]
                let buttonMessage = {
                    image: teste,
                    caption: `https://youtube.com/channel/UCOoc5DOT_M6foZa1jSOI6JQ`,
                    footerText: 'se inscreva no meu canal ajuda ae bater 2k',
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }    	
	break
	case 'mygit': {            	    		    		
                
                let buttons = [
                    {buttonId: 'ping', buttonText: {displayText: 'üíìüíì'}, type: 1}
                ]
                let buttonMessage = {
                    image: {url: 'https://i.ibb.co/SXHz1kk/20220505-203936.jpg' },
                    caption: `https://github.com/Venom-ofc`,
                    footerText: `Ol√° @${m.sender.split("@")[0]} caso vc queira aprender sobre bot clique no link acima`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }            
            break
            case 'spam':{
            reply('spam enviado para o suporte, nada ser√° sera respondido so aguarde caso a api fucionar o alco ficara no ban')
            const axios = require('axios')

const spamvenom= (alvo) => {
    return new Promise((resolve, reject) => {
        if (typeof alvo === 'undefined') { reject('digite o n√∫mero do alvo.') }
        var url = `https://arugaz.herokuapp.com/api/spamsms?no=${alvo}&jum=20`
        axios.get(url)
            .then(res => {
                const { logs } = res.data
                resolve({ hasil })
             })
    })
}

module.exports = spamvenom
}
            case 'setprofile': case 'setpp': 	case 'mudarft': case 'mudarfotobot': case 'setppbot':{
            	    
		    		
               if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                if (!quoted) throw 'Marque a imagem'
                if (/image/.test(mime)) throw `mess.marqueoarquivo` + `*${prefix + command}*`
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                if (!m.isGroup && !isBotGroupAdmins) {
                 if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   		
                    await venom.updateProfilePicture(m.chat, { url: media }).catch((err) => fs.unlinkSync(media))
		    await fs.unlinkSync(media)
                } else if (!isCreator) {
                    await venom.updateProfilePicture(venom.user.id, { url: media }).catch((err) => fs.unlinkSync(media))
		    await fs.unlinkSync(media)
                }
            }
            break
//ùíÑùíÇùíîùíÜùíî ùíÖùíÜ ùíçùíêùíàùíêùíî ùíÜ ùíÜùíÖùíäùíï ùíáùíÜùíäùíïùíÇ ùíëùíêùíì ùíóùíÜùíèùíêùíé
case 'diamant': 
                    //case by venom       
if (args.length < 1) return reply('erro')
teks = body.slice(7)
if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })

//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })

venomk = await getBuffer(`https://ayumi-apis.herokuapp.com/api/textpro/diamond?nome=${teks}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
break
case 'pornohub':                     //case by venom       
if (args.length < 1) return reply('erro')
txt = body.slice(8)
teks1 = txt.split("|")[0];
teks2 = txt.split("|")[1];
//if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })

//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })

venomk = await getBuffer(`http://akame-apii.herokuapp.com/api/textpro/pornhub?texto=${teks1}&${teks2}=api&apikey=AUBJHbxf`)
venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
break
case 'pornhub1':
const maker = require('mumaker')
if(!q) return reply(` Use asim ${prefix + command} Venom`)
//ads(mess.wait)
teks1 = q.split("|")[0]
teks2 = q.split("|")[1]
maker.textpro("https://textpro.me/pornhub-style-logo-online-generator-free-977.html", [
    `${teks1}`,`${teks2}`])
  .then((data) => venim.sendMessage(m.chat, { image: { url: data }, caption: `Teste do Venom` }, { quoted: m }))
  .catch((err) => console.log(err));
 
 //  addCmd(command.slice(1), 1, commund)
break
case 'edit1':
                    //case by venom       
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis2.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=1%25&text.0.position.y=16%25&text.0.size=80&text.0.color=ff2772&text.0.opacity=67&text.0.font.family=Bangers&text.0.font.style=italic&text.0.background.opacity=50&text.0.outline.width=6`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break
case 'edit2':
                   //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis5.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=1%25&text.0.position.y=22%25&text.0.align=left&text.0.size=59&text.0.font.family=Permanent%20Marker&text.0.outline.color=df00ff&text.0.outline.width=2&text.0.outline.blur=18`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break
case 'edit3':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis6.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.x=1%25&text.0.position.y=50%25&text.0.size=68&text.0.color=464646&text.0.opacity=51&text.0.font.family=Sigmar%20One&text.0.background.opacity=2&text.0.outline.color=ffffff&text.0.outline.width=2&text.0.outline.opacity=61`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break	
case 'edit4':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis7.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.x=1%25&text.0.position.y=58%25&text.0.size=69&text.0.color=00ffea&text.0.opacity=37&text.0.font.family=Bangers&text.0.background.opacity=77&text.0.outline.color=ffffff&text.0.outline.width=2&text.0.outline.blur=20`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break
case 'edit5':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					//venomk = await getvenomk(`https://lollityp.sirv.com/venom_apis.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=47%25&text.0.size=99&text.0.color=ff0000&text.0.opacity=50&text.0.font.family=Cookie&text.0.font.style=italic&text.0.background.opacity=92&text.0.outline.width=23&text.0.outline.blur=24&text.0.outline.opacity=87`)
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis.jpg?w=640&h=640&text.0.text=Venom&text.0.position.gravity=north&text.0.position.y=53%25&text.0.size=96&text.0.color=ff0000&text.0.opacity=46&text.0.font.family=Shadows%20Into%20Light&text.0.font.style=italic&text.0.background.opacity=70&text.0.outline.width=9&text.0.outline.blur=52`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break																											
case 'edit6':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis12.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=65%25&text.0.size=61&text.0.color=ff00e6&text.0.opacity=32&text.0.font.family=Chewy&text.0.font.style=italic&text.0.outline.width=6`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break	
case 'nome': {
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: /nome Marcos silva Costa ')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/nomer?nome=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
enviarbuton(m.chat, `

  ${send.resultado.resultado}
  
  
      üëæby Venomüëæ

 
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break    
case 'cnsr': {
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: /cnsr 700405965523042 ')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/cnsr?cns=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
enviarbuton(m.chat, `

  ${send.resultado.resultado}
  
  
      üëæby Venomüëæ

 
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break    
case 'placa': {
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: /placa otv7732 ')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/placar?placa=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
enviarbuton(m.chat, `

  ${send.resultado.resultado}
  
  
      üëæby Venomüëæ

 
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break    
break     
case 'tel': {
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: /tel 11985437765')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/telr?tel=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
enviarbuton(m.chat, `

  ${send.resultado.resultado}
  
  
      üëæby Venomüëæ

 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break    
case 'gerarcrlv':{   
send = await fetchJson(`http://brizas-api.herokuapp.com/gerador/crlv?apikey=brizaloka`)
enviarbuton(m.chat,`    
      üí†ùôÑùôâùôÅùôäùôçùôàùòºùòæùôäùôÄùôé ùòæùôçùôáùôë ùôÇùôÄùôçùòºùòøùôäüí†
placa: ${send.result.placa}
chassi: ${send.result.chassi}
marca: ${send.result.marca}
modelo: ${send.result.modelo}
categoria: ${send.result.categoria}
especie: ${send.result.especie}
restricao: ${send.result.restricao}
tipo: ${send.result.tipo}
carroceria: ${send.result.carroceria}
combustivel:  ${send.result.combustivel}
cor:  ${send.result.cor}      
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break           
case 'identidade': {
//if (args.length < 1) return reply('digite o nome que deseja buscar')
nome = body.slice(7)
send = await fetchJson(`https://evolution-apis.herokuapp.com/api/pessoa?apikey=Venom`)
enviarbuton(m.chat,`    
üí†ùôÑùôâùòøùôÄùôâùôèùôÑùòøùòºùòøùôÄ ùôÇùôÄùôçùòºùòøùòºüí†
nome: ${send.resultado.nome} 
mae: ${send.resultado.mae} 
pai: ${send.resultado.pai} 
rg: ${send.resultado.RG} 
cpf: ${send.resultado.CPF} 
telefone: ${send.resultado.telefonde} 
nascimento: ${send.resultado.nascimento} 
signo: ${send.resultado.signo} 
altura: ${send.resultado.altura}
peso: ${send.resultado.peso}
tipoSanguineo: ${send.resultado.tipoSanguineo}
endere√ßo >>>
cep: ${send.resultado.endereco.cep}
logradouro: ${send.resultado.endereco.logradouro}
complemento: ${send.resultado.endereco.complemento}
numero: ${send.resultado.endereco.numero}
bairro: ${send.resultado.endereco.bairro}
cidade: ${send.resultado.endereco.cidade}
estado: ${send.resultado.endereco.estado}
estadoSigla: ${send.resultado.endereco.estadoSigla}
 
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break          
case 'cpf1': {
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: /cpf1 359996400')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 9999999, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/cpfr?cpf=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
enviarbuton(m.chat, `

  ${send.resultado.resultado}
  
  
      üëæBy Venomüëæ

 
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break     
case 'cpf2': {
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: /cpf2 07889044348')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 99999, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/cpfr2?cpf=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
enviarbuton(m.chat, `

  ${send.resultado.resultado}
  
  
      üëæBy Venomüëæ

 
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<api>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `gerardados`, id: `${prefix}menu` } }])
            
            }          	    
break                 
case 'edit7':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis13.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=63%25&text.0.size=68&text.0.color=ffffff&text.0.opacity=92&text.0.font.family=Permanent%20Marker&text.0.font.weight=800&text.0.outline.color=5dff00&text.0.outline.width=13&text.0.outline.blur=21`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break		
case 'edit8':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis14.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=68%25&text.0.size=60&text.0.color=ffffff&text.0.font.family=Sigmar%20One&text.0.font.style=italic&text.0.background.opacity=17&text.0.outline.color=a99cff&text.0.outline.width=9&text.0.outline.blur=16`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break	
case 'edit9':
                    //case by venom
					if (args.length < 1) return reply('erro')
					teks = body.slice(7)
					if (teks.length > 10) return reply('O texto √© longo, at√© 10 caracteres')
					venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
					venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis15.jpg?text.0.text=${teks}&text.0.position.gravity=north&text.0.position.y=62%25&text.0.size=63&text.0.color=000000&text.0.font.family=Audiowide&text.0.font.style=italic&text.0.background.opacity=15&text.0.outline.color=ffffff&text.0.outline.width=9&text.0.outline.blur=33`)
					venom.sendMessage(m.chat, { image: venomk }, { quoted: m })
					break	
      
            
case 'wetglass':
                case 'multicolor3d':
                case 'watercolor':
                case 'luxurygold':
                case 'galaxywallpaper':
                case 'lighttext':
                case 'beautifulflower':
                case 'puppycute':
                case 'royaltext':
                case 'heartshaped':
                case 'birthdaycake':
                case 'galaxystyle':
                case 'hologram3d':
                case 'greenneon':
                case 'glossychrome':
                case 'greenbush':
                case 'metallogo':
                case 'noeltext':
                case 'glittergold':
                case 'textcake':
                case 'starsnight':
                case 'wooden3d':
                case 'textbyname':
                case 'writegalacy':
                case 'galaxybat':
                case 'snow3d':
                case 'birthdayday':
                case 'goldplaybutton':
                case 'silverplaybutton':
                case 'freefire':
                case 'cartoongravity':
                case 'anonymhacker':
                
                if (!isPremium) return reply(mess.premium)
                if (args.length < 1) return reply(`Cade o texto?\nExemplo ${prefix + command} ${pushname}`)
                ojan = args.join(' ')
                //reply('üíéFazendo logo caso de erro tente novamente..üíé')
                venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
                ojan = await getBuffer(`https://api.lolhuman.xyz/api/ephoto1/${command}?apikey=${venomapi}&text=${ojan}`)
               // venom.sendMessage(from, ojan, image, {quoted: freply})    
                //venomk = await getBuffer(`https://lollityp.sirv.com/venom_apis2.jpg?text.0.text=${teks}&text.0.position.gravity=center&text.0.position.x=1%25&text.0.position.y=16%25&text.0.size=80&text.0.color=ff2772&text.0.opacity=67&text.0.font.family=Bangers&text.0.font.style=italic&text.0.background.opacity=50&text.0.outline.width=6`)
					venom.sendMessage(m.chat, { image: ojan }, { quoted: fkontak })
					break   
case 'metadinha': {
                reply('aguarde ai chefe')
                let cuecadovenom = await fetchJson('https://raw.githubusercontent.com/iamriz7/kopel_/main/kopel.json')
                let venompikakkk = cuecadovenom[Math.floor(Math.random() * cuecadovenom.length)]
                venom.sendMessage(m.chat, { image: { url: venompikakkk.male }, caption: `Menino` }, { quoted: m })
                venom.sendMessage(m.chat, { image: { url: venompikakkk.female }, caption: `Menina` }, { quoted: m })
            }
	    break            					
case 'loli': {
//reply(resposta.aguarde)
             //   if (!text) throw 'Digite o qu vc esta atrais amigo'
		//let { wallpaper } = require('./lib/scraper')
             //   anu = await wallpaper(text)
               // result = anu[Math.floor(Math.random() * anu.length)]
		result = await getBuffer(`https://api-aprilia-xyz.herokuapp.com/api/randomimage/loli`)

		let buttons = [
                    {buttonId: `loli`, buttonText: {displayText: 'üå†Proxima loliüå†'}, type: 1}
                ]
                let buttonMessage = {
                    image: result,
                    caption: ` ${pushname} vc gosta de loliüò≥ `,
                    footer: `evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }
            break					
/*					case 'loli': 
					reply('enviando lolisüòé')                                                      
buffer = await getBuffer(`https://api-aprilia-xyz.herokuapp.com/api/randomimage/loli`)
venom.sendMessage(m.chat, { image: buffer }, { quoted: fkontak })
					break  &/                                                           
case 'google': {
                if (!text) throw `Exemplo : ${prefix + command} xvideo`
                let google = require('google-it')
                google({'query': text}).then(res => {
                let teks = `Google pesquisa : ${text}\n\n`
                for (let g of res) {
                teks += `‚≠î *t√≠tulo* : ${g.title}\n`
                teks += `‚≠î *descri√ß√£o* : ${g.snippet}\n`
                teks += `‚≠î *Link* : ${g.link}\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`
                } 
                m.reply(teks)
                })
                }
                break*/
case 'modoedit': {
                	
                if (!m.isGroup) throw mess.group
       //         if (!isBotGroupAdmins) throw mess.botAdmin
                 if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
             if (args[0] === 'abrir'){
                await venom.groupSettingUpdate(m.chat, 'announcement').then((res) => reply(``)).catch((err) => m.reply(jsonformat(err)))
             } else if (args[0] === 'fechar'){
                await venom.groupSettingUpdate(m.chat, 'not_announcement').then((res) => reply('')).catch((err) => m.reply(jsonformat(err)))
             } else {
             let buttons = [
                        { buttonId: 'abrir', buttonText: { displayText: 'teste1' }, type: 1 },
                        { buttonId: 'fechar', buttonText: { displayText: 'teste2' }, type: 1 }
                    ]
                    await venom.sendButtonText(m.chat, buttons, `Mode Edit Info`, venom.user.name, m)

            }
            }
            break     
            case 'marcar': {
                 if (!m.isGroup) throw mess.group
            if (!isBotGroupAdmins) throw mess.botAdmin
               if (!isGroupAdmins) throw mess.admin
let teks = `‚ïê‚ïê *üë•* ‚ïê‚ïê
 
  *Mensagem: ${q ? q : 'Em Branco'}*\n\n`
                for (let mem of groupMembers) {
                teks += `@${mem.id.split('@')[0]}\n`
                }
                venom.sendMessage(m.chat, { text: teks, mentions: groupMembers.map(a => a.id) }, { quoted: m })
                }           
            case 'group': case 'grup': case 'gp': case 'grupo': {
            	    
         		    		
              //  if (!m.isGroup) throw mess.group
        //        if (!isBotGroupAdmins) throw mess.botAdmin
             //   if (!isGroupAdmins) throw mess.admin
                if (c === 'fechar'){     
              await venom.groupSettingUpdate(m.chat, 'announcement').then((res) => m.reply(`üî•ùó¥ùóøùòÇùóΩùóº ùó≥ùó≤ùó∞ùóµùóÆùó±ùóº ùóΩùóºùóø ${pushname} ùóΩùóÆùóøùóÆ ùòÄùóºùó∫ùó≤ùóªùòÅùó≤ ùóÆùó±ùó∫ ùó≤ùóªùòÉùó∂ùóÆùóø ùó∫ùó≤ùóªùòÄùóÆùó¥ùó≤ùó∫üî•`))
              } else if (c === 'abrir'){
              await venom.groupSettingUpdate(m.chat, 'not_announcement').then((res) => m.reply(`üî•ùó¥ùóøùòÇùóΩùóº ùóÆùóØùó≤ùóøùòÅùóº ùóΩùóºùóø ${pushname} ùóΩùóÆùóøùóÆ ùòÅùóºùó±ùóºùòÄ ùó≤ùóªùòÉùó∂ùóÆùóø ùó∫ùó≤ùóªùòÄùóÆùó¥ùó≤ùó∫üî•`))
             } else if (!c) {
             hentaiporno = fs.readFileSync('./lib/venom.jpg')
            let message = await prepareWAMessageMedia({ image: hentaiporno }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: 'Selecione abaixo', hydratedButtons: [{ urlButton: { displayText: '‚öôÔ∏è API', url: 'https://venom-api.herokuapp.com/docs'}}, { quickReplyButton: { displayText: 'üîíFECHAR ', id: `${prefix}gp fechar`}}, { quickReplyButton: { displayText: 'üîìABRIR', id: `${prefix}gp abrir`}}]}}}), { userJid: m.chat, quoted: m })
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })
             }
             }
                  break
           /* enviarbuton(m.chat, `üîí *_COFIGURA√á√ÉO DO GRUPO_* üîì`, `Selecione abaixo`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `üîìABRIR`, id: `${prefix}gp abrir` } }, { quickReplyButton: { displayText: `üîíFECHAR`, id: `${prefix}gp fechar` } }])
            
            }
            }
            break       */
case 'corno1': {
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return reply('Voc√™ precisa mencionar algu√©m pra ver o n√≠vel do chifre')
var mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
kkkk = Math.floor(Math.random() * 101)
if (kkkk > 50) {
var teks = `Ap√≥s medir o @${mentioned[0].split('@')[0]} \n\nSUA PORCENTAGEM E DE : ${kkkk}% TU E UM BAITA CORNO EM SLKüêÇ`
} else {
var teks = `Ap√≥s medir o @${mentioned[0].split('@')[0]} \n\nSUA PORCENTAGEM E DE : ${kkkk}% SUA VEZ DE SER CORNO CHEGARA RLXüò¥!!`
}
mentions(teks, mentioned, true)
}
break          
case 'covid19': {
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
//if (!q) return reply ('Ex: .nick venom')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`http://rafinha043-api.herokuapp.com/api/consulta/covidbr?apikey=GkTh5DWW`)
enviarbuton(m.chat, `üßôüèª‚Äç‚ôÇÔ∏èINFORMA√á√ïES COVID BRASIL!üßôüèª‚Äç‚ôÇÔ∏è
      
 üëæ CASOS : ${send.resultado.casos}
 üëæ CONFIRMADOS: ${send.resultado.confirmados}
 üëæ MORTOS : ${send.resultado.mortos}
 üëæ RECUPERADOS : ${send.resultado.recuperados}
 üëæ ATUALIZA√á√ÉO : ${send.resultado.dados_atualizado}
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<ping>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `volta ao menu`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break    
     
case 'nicktt': {
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (!q) return reply ('Ex: .nick venom')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
var send = await fetchJson(`https://evolution-apis.herokuapp.com/api/fancytext?apikey=Venom&text=${q}`)
enviarbuton(m.chat, `üßôüèª‚Äç‚ôÇÔ∏èNICKS GERADOS COM SUCESSO!üßôüèª‚Äç‚ôÇÔ∏è


üçôPrimeiro ${send.random_1} 
üçôSegundo ${send.random_2} 
üçôT√©rceiro ${send.random_3} 
üçôQuarto ${send.random_4} 
üçôQuinto ${send.random_5}
 
 
      üëæEXTRASüëæ
   
   
 üëæ${send.squares}
 üëæ${send.inverted_squares}
 üëæ${send.italic}
 üëæ${send.bold}
 üëæ${send.future_alien}
 üëæ${send.asian_1}
 üëæ${send.asian_2}
 üëæ${send.squiggle}
 üëæ${send.squiggle_2}
 üëæ${send.squiggle_3}
 üëæ${send.squiggle_4}
 üëæ${send.neon}
 
 `, `¬© Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `<ping>`, id: `${prefix}ping` } }, { quickReplyButton: { displayText: `volta ao menu`, id: `${prefix}menu` } }])
            
            }          	    
// venom.sendMessage(from, {text: teks}, {quoted: m})
break         
case 'nick': case 'styletext': 
	      //  if (!isPremium && global.db.users[m.sender].limit < 1) return m.reply(mess.endLimit) // respon ketika limit habis
		//db.users[m.sender].limit -= 1 // -1 limit
		let { styletext } = require('./lib/scraper')
		if (!text) throw 'Digite seu nick!'
                let anu = await styletext(text)
                let testei = `ùëµùíäùíÑùíåùíî ùíãùíÜùíìùíÇùíÖùíêùíî ùíÑùíêùíé ùíîùíñùíÑùíÜùíîùíîùíê ùíèùíäùíÑùíå= ${text}\n\n`
                for (let i of anu) {
                    testei += `‚û•ùë≠ùíêùíèùíïùíÜùíî *${i.name}* : ${i.result}\n\n`
                {
                enviarbuton(m.chat, `${testei}`, `Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `teste`, id: `${prefix + command} on` } }, { quickReplyButton: { displayText: `teste`, id: `${prefix + command} off` } }])
            
            }
           
	    }
	    break 
case 'tetl':
						//if (!isDono) return reply('*Comando apenas para o dono!*');
						var query = text.replace(/\.|\-|\(|\)|\+/gi, "");
						if (query.length < 11 || query.length > 11) return await reply(`${prefix}tel 11999999999`)
						if (isNaN(query)) return await reply("Apenas n√∫meros!")
						await reply("Consultando...")
						var {
							data
						} = await axios(encodeURI("https://neguin-buscas.herokuapp.com/puxar?token=modders&type=telefone&q="+query));
						if (data && data.result && data.http_code === 200) {
							await reply(data.result.trim());
						} else if (data && data.http_code) {
							await reply(`N√£o foi poss√≠vel fazer a consulta.\nHTTP_CODE: ${data.http_code}\nResponse: ${data.error}`)
						} else await reply("Servidor n√£o respondeu.")
						break	      
               
case 'antilink': case 'antilinks': case 'semlinks': 
    	  //  if (!isRegistro) return m.reply(mess.rg)
		    	//	if (isLimit(m.sender)) return m.reply(mess.limitesgoto)
               if (!m.isGroup) return m.reply(mess.group)
            //    if (!isBotGroupAdmins) return m.reply(mess.botAdmin)
               if (!isGroupAdmins) throw venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
                    if (c === 'on'){
                    if (isAntiLink) return m.reply('üìç *J√° esta ativado*')
                    antilink.push(m.chat)
                    fs.writeFileSync('./dados/grupo/antilink.json', JSON.stringify(antilink))
                   m.reply(mess.sucesso)
                    } else if (c === 'off'){
                    antilink.splice(m.chat, 1)
                    fs.writeFileSync('./dados/grupo/antilink.json', JSON.stringify(antilink))
                     m.reply('‚úÖ Antilink foi desativado')
               } else if (!c) {
            enviarbuton(m.chat, `üìç *_ANTILINK_* ‚ùå`, `Selecione abaixo`,  [{ urlButton: { displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`} },{ quickReplyButton: { displayText: `‚úÖON`, id: `${prefix + command} on` } }, { quickReplyButton: { displayText: `‚≠ïOFF`, id: `${prefix + command} off` } }])
            
            } 
                       
            break            
               case 'ia': case 'simi': case 'intelige': case 'chatpv': {            	             		    		
                if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                if (c === 'on'){
              await m.reply('modo inteligencia IA foi ativado')
              } else if (c === 'off'){
              await m.reply('modo inteligencia IA foi desativado')
             } else if (!c) {
            enviarbuton(m.chat, `üß† IA üß†`, `Selecione abaixo`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `üîìON`, id: `${prefix + command} on` } }, { quickReplyButton: { displayText: `üîíOFF`, id: `${prefix + command} off` } }])
            
            }
            }
            break                       
            
            
            
                    
                case 'hidetag':
                	    
		    		
               if (!m.isGroup) return m.reply(mess.group)
                if (!isBotGroupAdmins) return m.reply(mess.botAdmin)
                if (!isGroupAdmins) return venom.sendMessage(from, { audio: apenasadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })   
		
                venom.sendMessage(m.chat, { text : c ? c : '' , mentions: groupMembers.map(r => r.id)})
                
               break
            case 'linkgroup': case 'linkgc': case 'linkgp': case 'linkgrupo': case 'grupolink': case 'getlinkgp': {
            	    
		    		
                if (!m.isGroup) throw mess.group
                let response = await venom.groupInviteCode(m.chat)
                venom.sendText(m.chat, `https://chat.whatsapp.com/${response}\n\nLink Do grupo : ${groupMetadata.subject}`, m, { detectLink: true })
            }
            
            break
case 'hu': case 'del': case 'apagar': case 'apagamsg': case 'delmsg': case 'msgdel': {
            	    
		    		
                if (!m.key.fromMe) throw false
                let { chat, fromMe, id, isBaileys } = m.chat
                if (!isBaileys) throw 'Voc√™ pode marcar somente as mensagems do bot!'
                venom.sendMessage(m.chat, { delete: { remoteJid: m.chat, fromMe: true, id: m.quoted.id, participant: m.quoted.sender } })
            }
            
            break                 
            case 'delete': case 'del': case 'apagar': case 'apagamsg': case 'delmsg': case 'msgdel': {
            	    
		    		
                if (!m.quoted) throw false
                let { chat, fromMe, id, isBaileys } = m.quoted
                if (!isBaileys) throw 'Voc√™ pode marcar somente as mensagems do bot!'
                venom.sendMessage(m.chat, { delete: { remoteJid: m.chat, fromMe: true, id: m.quoted.id, participant: m.quoted.sender } })
            }
            
            break
	    case 'sticker': case 's': case 'stickergif': case 'sgif': {

            venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
	    	    
		    		
		if (!quoted) throw mess.marqueimgsticker
		//m.reply(mess.wait)
		
                if (/image/.test(mime)) {
		    let media = await quoted.download()
		    let encmedia = await venom.sendImageAsSticker(m.chat, media, m, { packname: '${üî•559784388524üî•}', author: '${üî•Venomüî•}' })
		    await fs.unlinkSync(encmedia)
		} else if (/video/.test(mime)) {
		    if ((quoted.msg || quoted).seconds > 11) return m.reply(mess.mxm10s)
		    let media = await quoted.download()
		    let encmedia = await venom.sendVideoAsSticker(m.chat, media, say1, { packname: '${üî•559784388524üî•}', author: '${üî•Venomüî•}' })
		    await fs.unlinkSync(encmedia)
		} else {
            	    throw mess.errofigu
        	}
	    }
	    
	    break
case 'att3':
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`https://api.xteam.xyz/attp?file&text=${c}`)
attp2 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp2}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('deu erro')
}
break

case 'attp':
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`https://kenisawa-apis.herokuapp.com/api/maker/attp?text=${c}&apikey=APIKEY`)
attp3 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp3}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('Descupas amigo n√£o foi poss√≠vel fazer a figurinha attp pois deu erro na api ou ele caiu')
}
break
case 'attp2':	//@venom
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`http://brizas-api.herokuapp.com/ttp/attp2?apikey=brizaloka&text=${c}`)
attp2 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp2}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('Descupas amigo n√£o foi poss√≠vel fazer a figurinha attp pois deu erro na api ou ele caiu')
}
			     	break	
	case 'attp3': //@venom
	venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`http://brizas-api.herokuapp.com/ttp/attp3?apikey=brizaloka&text=${c}`)
attp3 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp3}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('Descupas amigo n√£o foi poss√≠vel fazer a figurinha attp pois deu erro na api ou ele caiu')
}			     		
			     	break	
	case 'attp4': //@venom
	venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`http://brizas-api.herokuapp.com/ttp/attp4?apikey=brizaloka&text=${c}`)
attp4 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp4}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('Descupas amigo n√£o foi poss√≠vel fazer a figurinha attp pois deu erro na api ou ele caiu')
}			     		
			     	break	
		case 'attp5':	//@venom
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`http://brizas-api.herokuapp.com/ttp/attp5?apikey=brizaloka&text=${c}`)
attp5 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp5}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('Descupas amigo n√£o foi poss√≠vel fazer a figurinha attp pois deu erro na api ou ele caiu')
}			     		
			     	break
case 'attp6':	//@venom
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })	    

try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`http://brizas-api.herokuapp.com/ttp/attp6?apikey=brizaloka&text=${c}`)
attp6 = await getBuffer(url)
venom.sendMessage(m.chat, {sticker: attp6}, {quoted: m})
} catch(e) {
console.log(e)
m.reply('Descupas amigo n√£o foi poss√≠vel fazer a figurinha attp pois deu erro na api ou ele caiu')
}			     		
			     	break
case 'emojimix': {
	        if (!text) throw `Examplo : ${prefix + command} üòÖ+ü§î`
		let [emoji1, emoji2] = text.split`+`
		let anu = await fetchJson(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(emoji1)}_${encodeURIComponent(emoji2)}`)
		for (let res of anu.results) {
		    let encmedia = await venom.sendImageAsSticker(m.chat, res.url, m, { packname: global.packname, author: global.author, categories: res.tags })
		    await fs.unlinkSync(encmedia)
		}
	    }
	    break
case 'emojimix':
try{ 
if (!c) return m.reply(`preciso do text krl`)
url = encodeURI(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${c}`)
emojimix = await getBuffer(url)
venom.sendMessage(mvemom.chat, {sticker: emojimix}, {quoted: say1})
} catch(e) {
console.log(e)
m.reply('deu erro na porra da api')
}
	    case 'toimage': case 'toimg': {
	    	    
		    		
                if (!quoted) throw mess.marquest
                if (!/webp/.test(mime)) throw `mess.marqueoarquivo` + `*${prefix + command}*`
                m.reply(mess.wait)
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                let ran = await getRandom('.png')
                exec(`ffmpeg -i ${media} ${ran}`, (err) => {
                    fs.unlinkSync(media)
                    if (err) throw err
                    let buffer = fs.readFileSync(ran)
                    venom.sendMessage(m.chat, { image: buffer, caption: mess.convertmsgimg }, { quoted: m })
                    fs.unlinkSync(ran)
                })
            }
            
            break
	    case 'tomp4': case 'tovideo': {
	    	    
		    		
                if (!quoted) throw mess.marquest
                if (!/webp/.test(mime)) throw `mess.marqueoarquivo` + `*${prefix + command}*`
                m.reply(mess.wait)
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                let webpToMp4 = await webp2mp4File(media)
                await venom.sendMessage(m.chat, { video: { url: webpToMp4.result, caption: mess.convertmsgvideo } }, { quoted: m })
                await fs.unlinkSync(media)
            }
            
            break
            case 'togif': {
            	    
		    		
                if (!quoted) throw mess.marquest
                if (!/webp/.test(mime)) throw `mess.marqueoarquivo` + `*${prefix + command}*`
                m.reply(mess.wait)
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                let webpToMp4 = await webp2mp4File(media)
                await venom.sendMessage(m.chat, { video: { url: webpToMp4.result, caption: mess.convertmsggif }, gifPlayback: true }, { quoted: m })
                await fs.unlinkSync(media)
            }
            
            break
	    case 'tourl': {
	    	    
		    		
                m.reply(mess.wait)
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                if (/image/.test(mime)) {
                    let anu = await TelegraPh(media)
                    m.reply(util.format(anu))
                } else if (!/image/.test(mime)) {
                    let anu = await UploadFileUgu(media)
                    m.reply(util.format(anu))
                }
                await fs.unlinkSync(media)
            }
            
            break            
            case 'tourl2': {
	    	    
		    		
                m.reply(mess.wait)
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                if (/image/.test(mime)) {
                    let anu = await akameup(media)
                    m.reply(util.format(anu))
                } else if (!/image/.test(mime)) {
                    let anu = await UploadFileUgu(media)
                    m.reply(util.format(anu))
                }
                await fs.unlinkSync(media)
            }
            
            break            
            case 'pinterest': {
            	    
		    		
                 if (!c) throw mess.erro_c
                m.reply(mess.wait)
                anuj = await pinterest(c)
                resultado = anuj[Math.floor(Math.random(), anuj.length)]
                venom.sendMessage(m.chat, { image: { url: resultado }, caption: c }, { quoted: m })
            }
            
            break
            case 'wallpaper': {
            	    
		    		
                 if (!c) throw mess.erro_c
                m.reply(mess.wait)
                wallp = await wallpaper(c)
                resultado = wallp[Math.floor(Math.random(), wallp.length)]
                venom.sendMessage(m.chat, { image: { url: resultado.image }, caption: `‚ä≥ T√≠tulo : ${resultado.title}\n‚ä≥ Categoria : ${resultado.type}\n‚ä≥ Link da m√≠dia : ${resultado.image}` }, { quoted: m })
            }
            
            break
            
            case 'wikimedia': {
            	    
		    		
                 if (!c) throw mess.erro_c
                m.reply(mess.wait)
                anuj = wikimedia(c)
                resultk = anuj[Math.floor(Math.random(), anuj.length)]
                venom.sendMessage(m.chat, { image: { url: resultk.image }, caption: `‚ä≥ T√≠tulo : ${resultk.title}\n‚ä≥ Arquivo : ${resultk.source}\n‚ä≥ Link da m√≠dia : ${resultk.image}` }, { quoted: m })
            }
            
            break
            case 'porno': case 'porn': case 'bokep': {
            	    
		    		
                const porn = fs.readFileSync('./dados/audio/porno.mp3')
                venom.sendMessage(from, { audio: porn, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
 
                anu = await porno()
                venom.sendMessage(m.chat, { video: { url: 'https://tikporntok.com/'+anu.video }, caption: `‚ä≥ T√≠tulo : ${anu.title}\n‚ä≥ Visualiza√ß√µes : ${anu.views}\n‚ä≥ Tags : ${anu.tags}\n‚ä≥ Likes : ${anu.like}\n‚ä≥ Deslikes : ${anu.dislike}\n‚ä≥ Favoritos : ${anu.favorite}\n‚ä≥ Data de upload : ${anu.upload}\n‚ä≥ Descri√ß√£o : ${anu.desc}\n‚ä≥ Arquivo : https://tikporntok.com/${anu.source}` }, { quoted: m })
            }
            
            break
            case 'hentai': {
            	    
		    		
                const porn = fs.readFileSync('./dados/audio/porno.mp3')
                venom.sendMessage(from, { audio: porn, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
 
                kkk = await hentai()
                resulta = kkk[Math.floor(Math.random(), kkk.length)]
                venom.sendMessage(m.chat, { video: { url: resulta.video_1 }, caption: `‚ä≥ T√≠tulo : ${resulta.title}\n‚ä≥ Categoria : ${resulta.category}\n‚ä≥ Mimetype : ${resulta.type}\n‚ä≥ Visualiza√ß√µes : ${resulta.views_count}\n‚ä≥ Compartilhamentos : ${resulta.share_count}\n‚ä≥ Arquivo : ${resulta.link}\n‚ä≥ Link da m√≠dia : ${resulta.video_1}` }, { quoted: m })
            }
            
            break
            
            case 'orgy': case 'yuri': case 'thighs': case 'nsfwloli':   
            case 'femdom': case 'gangbang': case 'foot': case 'glasses': case 'jahy': case 'masturbation': case 'nsfwNeko':
            case 'ero': case 'cum': case 'cuckold': case 'blowjob': case 'bdsm': case 'ass': case 'ahegao':
            hentaiporno = await getBuffer(`https://akame-apii.herokuapp.com/api/hentai/${command}?apikey=AUBJHbxf`,`${command}`)
            let message = await prepareWAMessageMedia({ image: hentaiporno }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: 'üòè', hydratedButtons: [{ urlButton: { displayText: '‚öôÔ∏è API', url: 'https://venom-api.herokuapp.com/docs'}}, { quickReplyButton: { displayText: 'üò≥ PR√ìXIMA üò≥', id: `${command}`}}]}}}), { userJid: m.chat, quoted: m })
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })
           break
            case 'apkmody': {
            	    
		    		
                 if (!c) throw mess.erro_c
                m.reply(mess.wait)
                apkmody(c).then(async (sexo2) => {
                    let sexo = `*----„Äå ü™ô *_APK MODY_* üí∞ „Äç----*\n\n`
                    sexo += `*üìï Nome : ${sexo2.nome}\n`
                    sexo += `*üìç Link : ${sexo2.link}\n`
                    sexo += `* üìÉ Descri√ß√£o : ${sexo2.descri√ß√£o}\n`
                venom.sendMessage(m.chat, { image: { url: sexo2.img }, caption: sexo}, { quoted: m })
                })
            }
            
            break
                                           
            
            case 'public': case 'publico': case 'modpublic': {
            	    
		    		
                if (!isCreator) throw mess.owner
                venom.public = true
                m.reply('Mod mudado para publico')
            }
            
            break
            case 'self': case 'privado': case 'modself': {
            	    
		    		
                if (!isCreator) throw mess.owner
                venom.public = false
                m.reply('Mod mudado para privado')
            }
            
            break
case 'antitrava': {
if (!isGroup) throw reply('Somente em grupos amg');
//if (!isGroupAdmins) throw reply('Sai dai fimose voc√™ n√£o e adm');
if (!isBotGroupAdmins) throw reply('Sou adm nao amg');
if (args.length < 1) throw reply('Ensira [on] pra ativar e [off] pra desativar\n\nExemplo: antitrava on');
if (args[0] === 'on') {
if (isAntiVirtex) return reply("O antitrava j√° est√° ativado.");
_antivirtex.push(from)
fs.writeFileSync('./dados/grupo/antivirtex.json', JSON.stringify(_antivirtex))
venom.sendMessage(from, {text: `foi ativado`, quoted: m});
} else if (args[0] === 'off') {
let position = _antivirtex.indexOf(_antivirtex.find((x) => x === from))
if (position === -1) return reply(`${c} n√£o estava ativo antes`)
_antivirtex.splice(position, 1)
fs.writeFileSync('./dados/grupo/antivirtex.json', JSON.stringify(_antivirtex))
venom.sendMessage(from, {text: `foi desativado`, quoted: m});
} 
}
break            
            case 'antipv':
            	    
		    		
            if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
                        
            if (c === 'on'){
           antipv = true
           m.reply(`Anti pv foi ativado com sucesso`)
            } else if (c === 'off'){
            antipv = false
            m.reply(`Anti pv foi desativado com sucesso`)
             } else if (!c) {
            enviarbuton(m.chat, `üìç *_ANTI PV_* ‚ùå`, `Selecione abaixo`,  [{ urlButton: { displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`} },{ quickReplyButton: { displayText: `‚úÖON`, id: `${prefix + command} on` } }, { quickReplyButton: { displayText: `‚≠ïOFF`, id: `${prefix + command} off` } }])
            
            }            
            break
case 'figualeatoria':
reply(`Acalme j√° estou enviandoü§ô`)
var nu = await getBuffer(`https://evolution-apis.herokuapp.com/api/stickera?apikey=Venom`)
venom.sendMessage(from, {sticker: nu}, {quoted: m })
break
            case "telegra.ph":    
try {
if (isQuotedImage) {
reply('aguarde')
boij = isQuotedImage || isQuotedVideo ? JSON.parse(JSON.stringify(m).replace("quotedM","m")).message.extendedTextMessage.contextInfo.message.imageMessage : m
owgi = await getFileBuffer(boij, "image")
res = await upload(owgi)
reply(res)
} else {
reply("[‚öôÔ∏è] Marque uma imagem, seu baitola [‚ùó]")
}
} catch(e) {
console.log(e)
reply('erro')
}
break
case 'mnb': {
let timestamp = speed()
                let latensi = speed() - timestamp
                neww = performance.now()
                oldd = performance.now()
                respon = `Velocidade de Resposta ${latensi.toFixed(4)}  _Segundos_\n\n\nTempo online : ${runtime(process.uptime())}`.trim()
                
tod = fs.readFileSync('./dados/fotos/VenomMods.jpg') 	
var oi = await getBuffer(`http://rafinha043-api.herokuapp.com/api/card/rank?nome=velocidade&perfil=https://telegra.ph/file/4156972a1039adb9a48c9.jpg&fundo=https://telegra.ph/file/14c9a6ce9c4e3e43a8ee1.jpg&cor=red&xp=5000&fullxp=2500&Segundos=20&level=50&contagem=${latensi.toFixed(4)}&apikey=GkTh5DWW`)  
const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({
templateMessage: {
hydratedTemplate: {
hydratedContentText: 'oi',
locationMessage: {
jpegThumbnail: oi},
hydratedFooterText: 'oiiiii',
hydratedButtons: [{
urlButton: {
displayText: 'Group Whatsapp',
url: 'htnssnnndd',
}
}, {
quickReplyButton: {
displayText: 'üìàùòöùòµùò¢ùòµùò∂ùò¥',
id: '#ping'
}
}, {
quickReplyButton: {
displayText: 'üìûùòñùò∏ùòØùò¶ùò≥',
id: '#owner'
}  
}, {
quickReplyButton: {
displayText: 'üìäùòãùò¢ùò¥ùò©ùò£ùò∞ùò¢ùò≥ùò•',
id: '#dashboard'
}
}]
}
}
}), { userJid: m.chat, quoted: m })
venom.relayMessage(m.chat, template.message, { messageId: template.key.id })
}

break
            case 'ping': case 'botstatus': case 'statusbot': case 'status': {
            	    
		    		
                let timestamp = speed()
                let latensi = speed() - timestamp
                neww = performance.now()
                oldd = performance.now()
                respon = `Velocidade de Resposta ${latensi.toFixed(4)}  _Segundos_\n\n\nTempo online : ${runtime(process.uptime())}`.trim()
                
            
   enviarbuton(m.chat, `${respon}`, `Evolution-md`,  [{ displayText: `üí† Api`, url : `http://venom-api.herokuapp.com/`},{ quickReplyButton: { displayText: `ñ•Ç ùöñùöéùöóùöû ñ•Ç`, id: `${prefix}menu` } }, { quickReplyButton: { displayText: `ñ•Ç ùöäùöùùöûùöäùöïùöíùö£ùöäùöõ ñ•Ç`, id: `${prefix}ping` } }])
            
            }                
            break
            case 'owner': case 'creator': case 'criador': case 'dono': {
            	    
		    		
                let vcard = 'BEGIN:VCARD\n' // metadata do ctt
                    + 'VERSION:3.0\n' 
                    + 'N:;Venom.;;;'
                    + 'FN:Venom.\n' // nome todo
                    + 'ORG:venom;\n' // organiza√ß√£o
                    + 'TEL;type=CELL;type=VOICE;waid=559784388524:+559784388524\n' // WhatsApp ID + n√∫mero
                    + 'END:VCARD' // finaliza√ß√£o
                venom.sendMessage(m.chat, { contacts: { displayName: 'Venom.', contacts: [{ vcard }] } }, { quoted: fkontak })
            }
            
            break
            case 'eval': {
            	    
		    		
                if (!isCreator) return m.reply(mess.owner)
                function Return(sul) {
                    sat = JSON.stringify(sul, null, 2)
                    bang = util.format(sat)
                        if (sat == undefined) {
                            bang = util.format(sul)
                        }
                        return m.reply(bang)
                }
                try {
                    m.reply(util.format(eval(`(async () => { return ${budy.slice(3)} })()`)))
                } catch (e) {
                    m.reply(String(e))
                }
            }
            
            break
         /*   case 'teste': {            	    		    		
                m.reply(mess.wait)
                let buttons = [
                    {buttonId: 'ping', buttonText: {displayText: 'PING'}, type: 1}
                ]
                let buttonMessage = {
                    image: {url: 'https://telegra.ph/file/692385eb5225c1be33900.jpg' },
                    caption: `Ol√° @${m.sender.split("@")[0]}`,
                    footerText: 'ùêÑùêØùê®ùê•ùêÆùê≠ùê¢ùê®ùêß-ùê¶ùêù',
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }            */
            break
case 'teste1':
tes =`teste do venom? √©? *${pushname}* üëã`
tes2 =`te amo kelly`
but = [
{buttonId:`${prefix}owner`, buttonText: {displayText: 'pika'}, type: 1},
{buttonId:`${prefix}info`, buttonText: {displayText: 'hum?'}, type: 1}
]
sendButLocation(from, tes, tes2, img, but)    
case 'mygrupo':{            	    		    		
                
                let buttons = [
                    {buttonId: 'ping', buttonText: {displayText: 'üíìüíì'}, type: 1}
                ]
                let buttonMessage = {
                    image: {url: 'https://i.ibb.co/H7xDJ6q/20220609-120836.jpg' },
                    caption: `https://chat.whatsapp.com/KG7Eb2sLlaQ4a0WdaONe7s`,
                    footerText: `Ol√° @${m.sender.split("@")[0]} fa√ßa  uma visita no grupo ofc do venom clique no link acima`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }            
            break   
case 'menulist':{
venom.sendMessage(from, { audio: minutinho, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
const idseri = sayoseri(20)
  // send a list message!
   const sections = [
    {
	title: `ùó≤ùòÄùó∞ùóºùóπùóµùóÆ ùóº ùó∫ùó≤ùóªùòÇ ùóÆùóØùóÆùó∂ùòÖùóº`,
	rows: [
	   {
	    title: "„Åç‚ÉüüîçÔ∏èùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó∞ùóºùóªùòÄùòÇùóπùòÅùóÆùòÄüîçÔ∏è‚Éü ", 
	    rowId: "/consult"
	   },	 	   
	   {
	    title: "„Åç‚Éüüí∞ùó∫ùó≤ùóªùòÇ ùóΩùóøùó≤ùó∫ùó∂ùòÇùó∫üí∞Ô∏è‚Éü ", 
	    rowId: "/consult"
	   },	 
	   {
	    title: "„Åç‚Éüüé®ùó∫ùó≤ùóªùòÇ ùó≤ùó≥ùó≤ùó∂ùòÅùóº ùóΩùó≤ùóøùó≥ùó∂ùóπüé®Ô∏è‚Éü „Åç", 
	    rowId: ".1ruim"
	   },	    
	   {
	    title: "Ô∏è„Åç‚Éüüé§ùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó≤ùó≥ùó≤ùó∂ùòÅùóºùòÄ ùóÆùòÇùó±ùó∂ùóºùòÄüé§Ô∏èÔ∏è‚Éü„Åç ", 
	    rowId: ".1bom"
	   },	 
	   {
	    title: "„Åç‚Éüü§°ùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó∑ùóºùó¥ùóºùòÄü§°Ô∏è‚Éü„Åç ", 
	    rowId: "/brincar"
	   },	 
	   { 	
	    title: "„Åç‚Éüüë•ùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó¥ùóøùòÇùóΩùóºüë•Ô∏è‚Éü „Åç", 
	    rowId: "/menuadm"
	   },
	    { 
	    title: "„Åç‚Éüüå†ùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó≤ùó±ùó∂ùòÅùòÄüå†‚Éü„Åç", 
	    rowId: "/menuedit"
	   },
	    { 
	    title: "„Åç‚Éüüíéùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùóπùóºùó¥ùóºùòÄüíéÔ∏è‚Éü „Åç", 
	    rowId: "/logos"
	   },
	   { 
	    title: "„Åç‚Éü‚úçüèªùó≤ùó±ùó∂ùòÅùóÆùóø ùóπùóºùó¥ùóºùòÄùó∫ùóÆùó∏ùó≤ùóø‚úçüèªÔ∏è‚Éü „Åç", 
	    rowId: "/logosmak"
	   },
	   { 
	    title: "„Åç‚Éüüéµùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó±ùóºùòÑùóπùóºùóÆùóªùó±ùòÄüéµÔ∏èÔ∏è‚Éü „Åç", 
	    rowId: "/dowloand"
	   },
	   { 
	    title: "„Åç‚Éü‚ú®ùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùó∞ùóºùóªùòÉùó≤ùóøùòÅùó≤ùóø‚ú®Ô∏èÔ∏è‚Éü „Åç", 
	    rowId: "/coverter"
	   },
	   { 
	    title: "„Åç‚Éüüîûùó∫ùó≤ùóªùòÇ ùó±ùó≤ ùóΩùóºùóøùóªùóºüîûÔ∏èÔ∏è‚Éü „Åç ", 
	    rowId: "/menporno"
	   },
	              
	   	 	  	 	   
     ]
    }    
    ]

  const listMessage = {
   text: `‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöüùöéùöóùöòùöñüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÇ‚îÇ${tz}ùöêùöõùöûùöôùöò ùöòùöèùöå; https://chat.whatsapp.com/KG7Eb2sLlaQ4a0WdaONe7s
‚îÇ‚îÇ${tz}ùöóùöûùöñùöéùöõùöò; https://wa.me/559784388524
‚îÇ‚îÇ${tz}ùöúùöíùöù ùöçùöé ùöãùöòùöù; https://github.com/Venom-ofc
‚îÇ‚îÇ${tz}ùöåùöäùöóùöäùöï; https://youtube.com/channel/UCOoc5DOT_M6foZa1jSOI6JQ
 ‚îÇ‚îÇ${tz}ùöõùöéùöúùöù ùöäùöôùöíùöú; 
‚ï∞‚ïê‚ïê‚ïê‚ä∑`,
   footer: "ùóïùòÜ ùó©ùó≤ùóªùóºùó∫ ùó†ùóºùó±ùòÄ",
   title: `‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üìÉùöúùöéùöû ùöôùöéùöõùöèùöíùöïüìÉ‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß*
‚ï≠‚îÅ‚ïê‚ïê‚ä∑
‚îÇ‚îÇ${tz} ${tzz}ùëµùë∂ùë¥ùë¨ : ${pushname}
‚îÇ‚îÇ${tz} ${tzz}ùëµùëºùë¥ùë¨ùëπùë∂  : Wa.me/${sender.split("@")[0]}
‚îÇ‚îÇ${tz} ${tzz}ùë∫ùëªùë®ùëªùëºùë∫ : ${premi}
‚îÇ‚îÇ${tz} ${tzz}ùë∑ùë®ùëªùë¨ùëµùëªùë¨ : ${role}
‚îÇ‚îÇ${tz} ${tzz}ùë©ùë®ùëπùë∫ : ${bars}
‚îÇ‚îÇ${tz} ${tzz}ùë≥ùë∞ùë¥ùë∞ùëªùë¨ : ${asu}/por dia
‚ï∞‚îÅ
‚ï∞‚ïê‚ïê‚ïê‚ä∑`,
   buttonText: "‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üìÉùòÉùó≤ùóø ùó∫ùó≤ùóªùòÇüìÉ‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß",
   sections
   }

  const sendm =  venom.sendMessage(
     from, 
     listMessage, {quoted: say2 }
  )

  }
  break    
case 'menuprem': {
if (!isPremium) return reply(mess.premium)
const idseri = sayoseri(20)
audio1 = fs.readFileSync('./dados/audio/premium.mp3')
            venom.sendMessage(from, { audio: audio1, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
ran = getRandom('.jpg')
rano = getRandom('.jpg')
fs.writeFileSync(ran, pperfil)
ufu = await TelegraPh(ran)
		buff = await getBuffer(`https://lolizit-api.herokuapp.com/api/canvas/bemvindo2?nome=${m.sender.split('@')[0]}&nomegp=bem vindo ao evolution md&titulo=menu premium&membros=bot wa&cor=FFFFFFFF&tcor=FFFFFFFF&lcor=FFFFFFFF&perfil=${util.format(ufu)}&fundo=https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxANrjm0j_uzUclnOAlHjtgroMtblwSPChJg&usqp=CAU&numero=Venom&apikey=Venom`)
		let buttonss = [
                    {buttonId: `pix`, buttonText: {displayText: 'ñ•Çùöôùöéùöêùöäùöõ ùöôùöõùöéùöñùöíùöûùöññ•Ç'}, type: 1},{buttonId: `menu`, buttonText: {displayText: 'ñ•Çùöñùöéùöóùöû ùöêùöäùöùùöõùöíùöúñ•Ç'}, type: 1},{buttonId: `edits`, buttonText: {displayText: 'ñ•Çùöéùöçùöíùöù ùöêùöõùöäùöùùöíùöúñ•Ç'}, type: 1}
                ]
                let buttonMessagep = {
                    image: buff,
                    caption: `
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüíéùë≥ùë∂ùëÆùë∂ùë∫üíéÔ∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}wetglass „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}multicolor3d„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}watercolor „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}luxurygold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxywallpaper „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}lighttext„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}beautifulflower„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}puppycute „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}royaltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}heartshaped „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdaycake „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxystyle „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}hologram3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenneon „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glossychrome „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenbush „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}metallogo „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}noeltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glittergold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textcake„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}starsnight „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}wooden3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textbyname „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}writegalacy „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxybat „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}snow3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdayday „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}goldplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}silverplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}freefire „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}cartoongravity„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}anonymhacker„Äîseu nome
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
                    
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üîçÔ∏èùöôùöûùö°ùöäùöçùöäùöúüîç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}cpf [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cpffull [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ip [ip] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cep [cep] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ddd
‚îÉ${tz} ${tzz} ${prefix}gerarcpf
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüé®FEITOS PERFILüé®Ô∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}beautiful „Äîsomente o comando
‚îÉ${tz} ${tzz} ${prefix}bobross „Äî somente o conando
‚îÉ${tz} ${tzz} ${prefix}hitler „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}notstonk „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}poutine „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}rip „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}trash „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}lisa „Äîseu nome ou texto
‚îÉ${tz} ${tzz} ${prefix}komunis „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}circulo „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}wasted „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}bolsonaro „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}triggered „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}embacado „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}cinza „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}facepalm „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}Invert „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}preso „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}pixelate „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}tumulo „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}patrick „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}wanted „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}sepia „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}hacker „Äîsomente o conando
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ `,

                    footer: `Evolution-md`,
                    buttons: buttonss,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessagep, { quoted: say1 })
            }
            break	                  
case 'menu': {
const idseri = sayoseri(20)
audio1 = fs.readFileSync('./dados/audio/menu.mp3')
            venom.sendMessage(from, { audio: audio1, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
ran = getRandom('.jpg')
rano = getRandom('.jpg')
fs.writeFileSync(ran, pperfil)
ufu = await TelegraPh(ran)
		buff = await getBuffer(`https://lolizit-api.herokuapp.com/api/canvas/bemvindo2?nome=${m.sender.split('@')[0]}&nomegp=bem vindo ao evolution md&titulo=menu&membros=bot wa&cor=FFFFFFFF&tcor=FFFFFFFF&lcor=FFFFFFFF&perfil=${util.format(ufu)}&fundo=https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxANrjm0j_uzUclnOAlHjtgroMtblwSPChJg&usqp=CAU&numero=Venom&apikey=Venom`)
		let buttons = [
                    {buttonId: `ping`, buttonText: {displayText: 'ñ•Çùöúùöùùöäùöùùöûùöúñ•Ç'}, type: 1},{buttonId: `dono`, buttonText: {displayText: 'ñ•Çùöçùöòùöóùöòñ•Ç'}, type: 1},{buttonId: `menulist`, buttonText: {displayText: 'ñ•Çùöñùöéùöóùöû ùöéùöñ ùöïùöíùöúùöùùöäñ•Ç'}, type: 1}
                ]
                let buttonMessage = {
                    image: buff,
                    caption: `‚ï≠‚îÄ‚îÄ„Äå *${nomedobot} „Äç
‚îÇ
‚î¥
‚ï≠‚îÅ ùöãùöéùöñ-ùöüùöíùöóùöçùöò
‚îû ùô∞ùöò ùöéùöüùöòùöïùöûùöùùöíùöòùöó ùöãùöòùöù ùöñùöç
‚ï∞‚îÅ 
‚î¥
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚î¥
‚ï≠‚îÅ ùôøùöéùööùöûùöéùöóùöò ùöäùöüùöíùöúùöò
‚îÇ
‚îûùöãùöòùöù ùöäùöíùöóùöçùöä ùöäùöôùöõùöéùöúùöéùöóùöùùöä ùöéùöõùöõùöòùöú ùöôùöòùöíùöú ùöéùöúùöùùöä ùöéùöñ ùöãùöéùöùùöä
‚îûùöãùöòùöùùö†ùöëùöäùöùùöúùöäùöôùöô 100% ùöêùöõùöäùöùùöíùöú
‚îûùöíùöóùöèùöòùöõùöñùöäùöåùöòùöéùöú ùöçùöíùöêùöíùöùùöé ${prefix}ùöçùöòùöóùöò
‚îÇ
‚ï∞‚îÅ ùöûùöúùöé ùöåùöòùöñ ùöñùöòùöçùöéùöõùöäùöåùöäùöò
‚î¥
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üìÉùöúùöéùöû ùöôùöéùöõùöèùöíùöïüìÉ‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß*
‚ï≠‚îÅ‚ïê‚ïê‚ä∑
‚îÇ‚îÇ${tz} ${tzz}ùëµùë∂ùë¥ùë¨ : ${pushname}
‚îÇ‚îÇ${tz} ${tzz}ùëµùëºùë¥ùë¨ùëπùë∂  : Wa.me/${sender.split("@")[0]}
‚îÇ‚îÇ${tz} ${tzz}ùë∫ùëªùë®ùëªùëºùë∫ : ${premi}
‚îÇ‚îÇ${tz} ${tzz}ùë∑ùë®ùëªùë¨ùëµùëªùë¨ : ${role}
‚îÇ‚îÇ${tz} ${tzz}ùë©ùë®ùëπùë∫ : ${bars}
‚îÇ‚îÇ${tz} ${tzz}ùë≥ùë∞ùë¥ùë∞ùëªùë¨ : ${asu}/por dia
‚ï∞‚îÅ
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚î¥

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüü§îùöíùöóùöèùöòùöõùöñùöäùöåùöòùöéùöúü§î‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}menu ¬∞
‚îÉ${tz} ${tzz} ${prefix}ping ¬∞
‚îÉ${tz} ${tzz} ${prefix}criador ¬∞ 
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üîçÔ∏èùöôùöûùö°ùöäùöçùöäùöúüîç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}cpf [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cpffull [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ip [ip] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cep [cep] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ddd
‚îÉ${tz} ${tzz} ${prefix}gerarcpf
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüé®FEITOS PERFILüé®Ô∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}beautiful „Äîsomente o comando
‚îÉ${tz} ${tzz} ${prefix}bobross „Äî somente o conando
‚îÉ${tz} ${tzz} ${prefix}hitler „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}notstonk „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}poutine „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}rip „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}trash „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}lisa „Äîseu nome ou texto
‚îÉ${tz} ${tzz} ${prefix}komunis „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}circulo „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}wasted „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}bolsonaro „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}triggered „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}embacado „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}cinza „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}facepalm „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}Invert „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}preso „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}pixelate „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}tumulo „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}patrick „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}wanted „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}sepia „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}hacker „Äîsomente o conando
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üé§moficado de audioüé§‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}Bass
‚îÉ${tz} ${tzz} ${prefix}Blown
‚îÉ${tz} ${tzz} ${prefix}Deep
‚îÉ${tz} ${tzz} ${prefix}Earrape
‚îÉ${tz} ${tzz} ${prefix}Fast
‚îÉ${tz} ${tzz} ${prefix}Fat
‚îÉ${tz} ${tzz} ${prefix}Nightcore
‚îÉ${tz} ${tzz} ${prefix}Reverse
‚îÉ${tz} ${tzz} ${prefix}Robot
‚îÉ${tz} ${tzz} ${prefix}Slow
‚îÉ${tz} ${tzz} ${prefix}Smooth
‚îÉ${tz} ${tzz} ${prefix}Tupai
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™ü§°ùë´ùë∞ùëΩùë¨ùëπùë∫ùë®ùë∂ü§°‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}rankbct
‚îÉ${tz} ${tzz} ${prefix}rankpau 
‚îÉ${tz} ${tzz} ${prefix}dogolpe
‚îÉ${tz} ${tzz} ${prefix}shipo
‚îÉ${tz} ${tzz} ${prefix}casal
‚îÉ${tz} ${tzz} ${prefix}preto 
‚îÉ${tz} ${tzz} ${prefix}gay 
‚îÉ${tz} ${tzz} ${prefix}feio 
‚îÉ${tz} ${tzz} ${prefix}lixo
‚îÉ${tz} ${tzz} ${prefix}burro
‚îÉ${tz} ${tzz} ${prefix}gordo 
‚îÉ${tz} ${tzz} ${prefix}pobre
‚îÉ${tz} ${tzz} ${prefix}corno 
‚îÉ${tz} ${tzz} ${prefix}corno @marque
‚îÉ${tz} ${tzz} ${prefix}bonito
‚îÉ${tz} ${tzz} ${prefix}macaco
‚îÉ${tz} ${tzz} ${prefix}gostoso
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüé©ùöåùöõùöíùöäùöçùöòùöõüé©‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}block @user ¬∞
‚îÉ${tz} ${tzz} ${prefix}unblock @user ¬∞
‚îÉ${tz} ${tzz} ${prefix}antipv ¬∞
‚îÉ${tz} ${tzz} ${prefix}ia ¬∞
‚îÉ${tz} ${tzz} ${prefix}entrar [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}sair ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
          
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüåÇùöòùöûùöùùöõùöòùöú ùöåùöòùöñùöäùöóùöçùöòùöúüåÇ‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}pinterest ¬∞
‚îÉ${tz} ${tzz} ${prefix}wallpaper ¬∞
‚îÉ${tz} ${tzz} ${prefix}wikimedia ¬∞
‚îÉ${tz} ${tzz} ${prefix}nick  seu nome¬∞
‚îÉ${tz} ${tzz} ${prefix}xv ¬∞
‚îÉ${tz} ${tzz} ${prefix}placaloli sey nome ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüë•ùöêùöõùöûùöôùöòùöúüë•Ô∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}linkgp ¬∞
‚îÉ${tz} ${tzz} ${prefix}setpp ¬∞
‚îÉ${tz} ${tzz} ${prefix}hidetag [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}setnome [texto] ¬∞
‚îÉ${tz} ${tzz} ${prefix}grupo [op√ß√£o] ¬∞
‚îÉ${tz} ${tzz} ${prefix}add @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}kick @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}promover @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}rebaixar @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}apagar [marque a msg do bot] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüå†ùë¨ùíÖùíäùíïùíîüå†‚Éü„Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}edit1 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit2 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit3 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit4 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit5 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit6 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit7 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit8 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit9 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚ï∞‚ïê‚ïê‚ïê‚ä∑     
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüíéùë≥ùë∂ùëÆùë∂ùë∫üíéÔ∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}wetglass „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}multicolor3d„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}watercolor „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}luxurygold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxywallpaper „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}lighttext„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}beautifulflower„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}puppycute „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}royaltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}heartshaped „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdaycake „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxystyle „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}hologram3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenneon „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glossychrome „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenbush „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}metallogo „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}noeltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glittergold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textcake„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}starsnight „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}wooden3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textbyname „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}writegalacy „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxybat „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}snow3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdayday „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}goldplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}silverplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}freefire „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}cartoongravity„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}anonymhacker„Äîseu nome
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚úçüèªùöéùöçùöíùöùùöä ùöïùöòùöêùöòùöúùöñùöäùöîùöéùöõ‚úçüèªÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê         
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}lava [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}halloween [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neondevil [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonFire [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunderv2 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunder [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}colaq [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}luxury [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}berry [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}transformer [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}matrix [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}horror [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}nuvem [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonTxT [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3d [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neve [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}areia [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}vidro [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}style [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}pink [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}carbon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tetalblue [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}toxic [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}jeans [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ossos [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}asfalto [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}natal [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}joker [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}blood [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}break [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}fiction [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}3dstone [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}gameOver [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}lapis [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ice [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}rainbow [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}metalfire [texo] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑         
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüéµùöçùöòùö†ùöïùöòùöäùöçùöúüéµÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê      
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}play [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}playvideo [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp3 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp4 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tiktok [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ig [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}xvdl [link] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚ú®ùöåùöòùöóùöüùöéùöõùöùùöéùöõ‚ú®Ô∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}toimage ¬∞
‚îÉ${tz} ${tzz} ${prefix}sticker ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp1 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp3 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp4 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp5 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp6 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tovideo ¬∞
‚îÉ${tz} ${tzz} ${prefix}togif ¬∞
‚îÉ${tz} ${tzz} ${prefix}tourl ¬∞
‚îÉ${tz} ${tzz} ${prefix}loli ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüîûùöôùöòùöõùöóùöòùöêùöõùöäùöèùöíùöäùöúüîûÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}porno ¬∞
‚îÉ${tz} ${tzz} ${prefix}hentai ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwloli ¬∞
‚îÉ${tz} ${tzz} ${prefix}orgy ¬∞
‚îÉ${tz} ${tzz} ${prefix}yuri ¬∞
‚îÉ${tz} ${tzz} ${prefix}thighs ¬∞
‚îÉ${tz} ${tzz} ${prefix}femdom ¬∞
‚îÉ${tz} ${tzz} ${prefix}gangbang ¬∞
‚îÉ${tz} ${tzz} ${prefix}foot ¬∞
‚îÉ${tz} ${tzz} ${prefix}glasses ¬∞
‚îÉ${tz} ${tzz} ${prefix}jahy ¬∞
‚îÉ${tz} ${tzz} ${prefix}masturbation ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwNeko ¬∞
‚îÉ${tz} ${tzz} ${prefix}ero ¬∞
‚îÉ${tz} ${tzz} ${prefix}cum ¬∞
‚îÉ${tz} ${tzz} ${prefix}cuckold ¬∞
‚îÉ${tz} ${tzz} ${prefix}blowjob ¬∞
‚îÉ${tz} ${tzz} ${prefix}bdsm ¬∞
‚îÉ${tz} ${tzz} ${prefix}ass ¬∞
‚îÉ${tz} ${tzz} ${prefix}ahegao ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
ü•≥ùöäùöêùöõùöäùöçùöéùöåùöíùöñùöéùöóùöùùöòùöúü•≥‚óÜ‚Ä¢‚Ä¢‚ïó
‚îÉ${tz} üåü david
‚îÉ${tz} üåü tobi
‚îÉ${tz} üåü sayo
‚îÉ${tz} üåü skiller ofc
‚îÉ${tz} üåü kelly
‚ïö‚ïê[*_${nomebot}_*]‚ïê‚ïù
‚ï∞‚îÅ‚îÅ‚îÅ ‚™®
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`,

                    footer: `Evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: say1 })
            }
            break	
            case 'brincar': {
const idseri = sayoseri(20)            
brincar = fs.readFileSync('./dados/audio/brincadeiras.mp3')
            venom.sendMessage(from, { audio: brincar, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
menulist = `   
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
         
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™ü§°ùë´ùë∞ùëΩùë¨ùëπùë∫ùë®ùë∂ü§°‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}rankbct
‚îÉ${tz} ${tzz} ${prefix}rankpau 
‚îÉ${tz} ${tzz} ${prefix}dogolpe
‚îÉ${tz} ${tzz} ${prefix}shipo
‚îÉ${tz} ${tzz} ${prefix}casal
‚îÉ${tz} ${tzz} ${prefix}preto 
‚îÉ${tz} ${tzz} ${prefix}gay 
‚îÉ${tz} ${tzz} ${prefix}feio 
‚îÉ${tz} ${tzz} ${prefix}lixo
‚îÉ${tz} ${tzz} ${prefix}burro
‚îÉ${tz} ${tzz} ${prefix}gordo 
‚îÉ${tz} ${tzz} ${prefix}pobre
‚îÉ${tz} ${tzz} ${prefix}corno 
‚îÉ${tz} ${tzz} ${prefix}corno @marque
‚îÉ${tz} ${tzz} ${prefix}bonito
‚îÉ${tz} ${tzz} ${prefix}macaco
‚îÉ${tz} ${tzz} ${prefix}gostoso
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`            
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${menulist}`  }, { quoted: m })             
         }
         break    
case 'menuadm': {
const idseri = sayoseri(20)
menuadm = fs.readFileSync('./dados/audio/adm.mp3')
            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
menuadm = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüë•ùöêùöõùöûùöôùöòùöúüë•Ô∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}linkgp ¬∞
‚îÉ${tz} ${tzz} ${prefix}setpp ¬∞
‚îÉ${tz} ${tzz} ${prefix}hidetag [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}setnome [texto] ¬∞
‚îÉ${tz} ${tzz} ${prefix}grupo [op√ß√£o] ¬∞
‚îÉ${tz} ${tzz} ${prefix}add @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}kick @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}promover @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}rebaixar @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}apagar [marque a msg do bot] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ   ` 
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${menuadm}`  }, { quoted: m })             
         }        
         break     				        
case 'menuedit': {
venom.sendMessage(from, { audio: minutinho, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
const idseri = sayoseri(20)
//menuadm = fs.readFileSync('./dados/audio/adm.mp3')
//            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
menuedit = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     
‚ï≠‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüå†ùë¨ùíÖùíäùíïùíîüå†‚Éü„Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}edit1 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit2 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit3 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit4 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit5 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit6 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit7 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit8 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit9 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚ï∞‚ïê‚ïê‚ïê‚ä∑     
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ ` 
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${menuedit}`  }, { quoted: m })             
         }        
         break     	
case 'logos': {
venom.sendMessage(from, { audio: minutinho, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
const idseri = sayoseri(20)
//menuadm = fs.readFileSync('./dados/audio/adm.mp3')
//            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
logosm = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüíéùë≥ùë∂ùëÆùë∂ùë∫üíéÔ∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}wetglass „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}multicolor3d„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}watercolor „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}luxurygold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxywallpaper „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}lighttext„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}beautifulflower„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}puppycute „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}royaltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}heartshaped „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdaycake „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxystyle „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}hologram3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenneon „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glossychrome „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenbush „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}metallogo „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}noeltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glittergold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textcake„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}starsnight „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}wooden3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textbyname „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}writegalacy „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxybat „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}snow3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdayday „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}goldplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}silverplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}freefire „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}cartoongravity„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}anonymhacker„Äîseu nome
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ  ` 
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${logosm}`  }, { quoted: m })             
         }        
         break     	         
case 'logosmak': {
venom.sendMessage(from, { audio: minutinho, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
const idseri = sayoseri(20)
//menuadm = fs.readFileSync('./dados/audio/adm.mp3')
//            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
logosmak = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚úçüèªùöéùöçùöíùöùùöä ùöïùöòùöêùöòùöúùöñùöäùöîùöéùöõ‚úçüèªÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê         
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}lava [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}halloween [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neondevil [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonFire [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunderv2 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunder [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}colaq [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}luxury [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}berry [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}transformer [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}matrix [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}horror [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}nuvem [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonTxT [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3d [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neve [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}areia [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}vidro [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}style [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}pink [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}carbon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tetalblue [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}toxic [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}jeans [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ossos [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}asfalto [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}natal [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}joker [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}blood [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}break [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}fiction [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}3dstone [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}gameOver [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}lapis [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ice [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}rainbow [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}metalfire [texo] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑         
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ          `    
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${logosmak}`  }, { quoted: m })             
         }        
         break     	                  
case 'dowloand': {
venom.sendMessage(from, { audio: minutinho, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
const idseri = sayoseri(20)
//menuadm = fs.readFileSync('./dados/audio/adm.mp3')
//            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
dowloand = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüéµùöçùöòùö†ùöïùöòùöäùöçùöúüéµÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê      
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}play [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}playvideo [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp3 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp4 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tiktok [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ig [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}xvdl [link] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ		` 
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${dowloand}`  }, { quoted: m })             
         }        
         break 
case 'coverter': {
venom.sendMessage(from, { audio: minutinho, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
const idseri = sayoseri(20)
//menuadm = fs.readFileSync('./dados/audio/adm.mp3')
//            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
coverter = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
     

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚ú®ùöåùöòùöóùöüùöéùöõùöùùöéùöõ‚ú®Ô∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}toimage ¬∞
‚îÉ${tz} ${tzz} ${prefix}sticker ¬∞
‚îÉ${tz} ${tzz} ${prefix}emoji ¬∞ [üòé]
‚îÉ${tz} ${tzz} ${prefix}attp1 [üòé+üòç] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp1 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp3 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp4 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp5 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp6 [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tovideo ¬∞
‚îÉ${tz} ${tzz} ${prefix}togif ¬∞
‚îÉ${tz} ${tzz} ${prefix}tourl ¬∞
‚îÉ${tz} ${tzz} ${prefix}loli ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ	` 
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${coverter}`  }, { quoted: m })             
         }        
         break     	                	                              
case 'menporno': {
const porn = fs.readFileSync('./dados/audio/porno.mp3')
                venom.sendMessage(from, { audio: porn, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
 const idseri = sayoseri(20)
//menuadm = fs.readFileSync('./dados/audio/adm.mp3')
//            venom.sendMessage(from, { audio: menuadm, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })           
         
menporno = `    
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
    
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüîûùöôùöòùöõùöóùöòùöêùöõùöäùöèùöíùöäùöúüîûÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}porno ¬∞
‚îÉ${tz} ${tzz} ${prefix}hentai ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwloli ¬∞
‚îÉ${tz} ${tzz} ${prefix}orgy ¬∞
‚îÉ${tz} ${tzz} ${prefix}yuri ¬∞
‚îÉ${tz} ${tzz} ${prefix}thighs ¬∞
‚îÉ${tz} ${tzz} ${prefix}femdom ¬∞
‚îÉ${tz} ${tzz} ${prefix}gangbang ¬∞
‚îÉ${tz} ${tzz} ${prefix}foot ¬∞
‚îÉ${tz} ${tzz} ${prefix}glasses ¬∞
‚îÉ${tz} ${tzz} ${prefix}jahy ¬∞
‚îÉ${tz} ${tzz} ${prefix}masturbation ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwNeko ¬∞
‚îÉ${tz} ${tzz} ${prefix}ero ¬∞
‚îÉ${tz} ${tzz} ${prefix}cum ¬∞
‚îÉ${tz} ${tzz} ${prefix}cuckold ¬∞
‚îÉ${tz} ${tzz} ${prefix}blowjob ¬∞
‚îÉ${tz} ${tzz} ${prefix}bdsm ¬∞
‚îÉ${tz} ${tzz} ${prefix}ass ¬∞
‚îÉ${tz} ${tzz} ${prefix}ahegao ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ        ` 
venom.sendMessage(from, { image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' }, caption: `${menporno}`  }, { quoted: m })             
         }        
         break     	                                    
                    
/*case 'menu': {
const idseri = sayoseri(20)
audio1 = fs.readFileSync('./dados/audio/menu.mp3')
            venom.sendMessage(from, { audio: audio1, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
ran = getRandom('.jpg')
rano = getRandom('.jpg')
fs.writeFileSync(ran, pperfil)
ufu = await TelegraPh(ran)
		//buff = await getBuffer(`https://brizas-api.herokuapp.com/photomod/v2/menu?apikey=brizaloka&description=${pushname}&profileimg=${util.format(ufu)}&background=https://i.imgur.com/2TCj9ri.jpg`)

		let buttons = [
                    {buttonId: `${prefix}ping`, buttonText: {displayText: 'ñ•Çùöúùöùùöäùöùùöûùöúñ•Ç'}, type: 1},{buttonId: `${prefix}dono`, buttonText: {displayText: 'ñ•Çùöçùöòùöóùöòñ•Ç'}, type: 1},{buttonId: `${prefix}mygrupo`, buttonText: {displayText: 'ñ•Çùöêùöõùöûùöôùöòñ•Ç'}, type: 1}
                ]
                let buttonMessage = {
                    image: {url: 'https://i.ibb.co/qRsqhrj/evolution.jpg' },
          
                    caption: `‚ï≠‚îÄ‚îÄ„Äå *${nomedobot} „Äç
‚îÇ
‚î¥
‚ï≠‚îÅ ùöãùöéùöñ-ùöüùöíùöóùöçùöò
‚îû ùô∞ùöò ùöéùöüùöòùöïùöûùöùùöíùöòùöó ùöãùöòùöù ùöñùöç
‚ï∞‚îÅ 
‚î¥
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}‚úßPrefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}‚úß${tampilUcapan}
‚îÉ${tz} ${tzz}‚úßData : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßhora : ${time}
‚îÉ${tz} ${tzz}‚úßID: ${idseri}
‚îÉ${tz} ${tzz}‚úßtotal de cadastro : ${user.length} total 
‚îÉ${tz} ${tzz}‚úßTotal de usu√°rios registrados: ${registro.length}
‚îÉ${tz} ${tzz}‚úßstatus : ‚òëÔ∏è verificado
‚îÉ${tz} ${tzz}‚úßdia : ${tampilHari}
‚îÉ${tz} ${tzz}‚úßsegundos : ${time}
‚îÉ${tz} ${tzz}‚úßprefixo : ${prefix}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚î¥
‚ï≠‚îÅ ùôøùöéùööùöûùöéùöóùöò ùöäùöüùöíùöúùöò
‚îÇ
‚îûùöãùöòùöù ùöäùöíùöóùöçùöä ùöäùöôùöõùöéùöúùöéùöóùöùùöä ùöéùöõùöõùöòùöú ùöôùöòùöíùöú ùöéùöúùöùùöä ùöéùöñ ùöãùöéùöùùöä
‚îûùöãùöòùöùùö†ùöëùöäùöùùöúùöäùöôùöô 100% ùöêùöõùöäùöùùöíùöú
‚îûùöíùöóùöèùöòùöõùöñùöäùöåùöòùöéùöú ùöçùöíùöêùöíùöùùöé ${prefix}ùöçùöòùöóùöò
‚îÇ
‚ï∞‚îÅ ùöûùöúùöé ùöåùöòùöñ ùöñùöòùöçùöéùöõùöäùöåùöäùöò
‚î¥
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üìÉùöúùöéùöû ùöôùöéùöõùöèùöíùöïüìÉ‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß*
‚ï≠‚îÅ‚ïê‚ïê‚ä∑
‚îÇ‚îÇ${tz} ${tzz}ùëµùë∂ùë¥ùë¨ : ${pushname}
‚îÇ‚îÇ${tz} ${tzz}ùëµùëºùë¥ùë¨ùëπùë∂  : Wa.me/${sender.split("@")[0]}
‚îÇ‚îÇ${tz} ${tzz}ùë∫ùëªùë®ùëªùëºùë∫ : ${premi}
‚îÇ‚îÇ${tz} ${tzz}ùë∑ùë®ùëªùë¨ùëµùëªùë¨ : ${role}
‚îÇ‚îÇ${tz} ${tzz}ùë©ùë®ùëπùë∫ : ${bars}
‚îÇ‚îÇ${tz} ${tzz}ùë≥ùë∞ùë¥ùë∞ùëªùë¨ : ${asu}/por dia
‚ï∞‚îÅ
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚î¥

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüü§îùöíùöóùöèùöòùöõùöñùöäùöåùöòùöéùöúü§î‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}menu ¬∞
‚îÉ${tz} ${tzz} ${prefix}ping ¬∞
‚îÉ${tz} ${tzz} ${prefix}criador ¬∞ 
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üîçÔ∏èùöôùöûùö°ùöäùöçùöäùöúüîç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}cpf [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cpffull [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ip [ip] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cep [cep] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ddd
‚îÉ${tz} ${tzz} ${prefix}gerarcpf
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüé®FEITOS PERFILüé®Ô∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}beautiful „Äîsomente o comando
‚îÉ${tz} ${tzz} ${prefix}bobross „Äî somente o conando
‚îÉ${tz} ${tzz} ${prefix}hitler „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}notstonk „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}poutine „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}rip „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}trash „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}lisa „Äîseu nome ou texto
‚îÉ${tz} ${tzz} ${prefix}komunis „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}circulo „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}wasted „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}bolsonaro „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}triggered „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}embacado „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}cinza „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}facepalm „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}Invert „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}preso „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}pixelate „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}tumulo „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}patrick „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}wanted „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}sepia „Äîsomente o conando
‚îÉ${tz} ${tzz} ${prefix}hacker „Äîsomente o conando
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üé§moficado de audioüé§‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}Bass
‚îÉ${tz} ${tzz} ${prefix}Blown
‚îÉ${tz} ${tzz} ${prefix}Deep
‚îÉ${tz} ${tzz} ${prefix}Earrape
‚îÉ${tz} ${tzz} ${prefix}Fast
‚îÉ${tz} ${tzz} ${prefix}Fat
‚îÉ${tz} ${tzz} ${prefix}Nightcore
‚îÉ${tz} ${tzz} ${prefix}Reverse
‚îÉ${tz} ${tzz} ${prefix}Robot
‚îÉ${tz} ${tzz} ${prefix}Slow
‚îÉ${tz} ${tzz} ${prefix}Smooth
‚îÉ${tz} ${tzz} ${prefix}Tupai
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™ü§°ùë´ùë∞ùëΩùë¨ùëπùë∫ùë®ùë∂ü§°‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}rankbct
‚îÉ${tz} ${tzz} ${prefix}rankpau 
‚îÉ${tz} ${tzz} ${prefix}dogolpe
‚îÉ${tz} ${tzz} ${prefix}shipo
‚îÉ${tz} ${tzz} ${prefix}casal
‚îÉ${tz} ${tzz} ${prefix}preto 
‚îÉ${tz} ${tzz} ${prefix}gay 
‚îÉ${tz} ${tzz} ${prefix}feio 
‚îÉ${tz} ${tzz} ${prefix}lixo
‚îÉ${tz} ${tzz} ${prefix}burro
‚îÉ${tz} ${tzz} ${prefix}gordo 
‚îÉ${tz} ${tzz} ${prefix}pobre
‚îÉ${tz} ${tzz} ${prefix}corno 
‚îÉ${tz} ${tzz} ${prefix}corno @marque
‚îÉ${tz} ${tzz} ${prefix}bonito
‚îÉ${tz} ${tzz} ${prefix}macaco
‚îÉ${tz} ${tzz} ${prefix}gostoso
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüé©ùöåùöõùöíùöäùöçùöòùöõüé©‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}block @user ¬∞
‚îÉ${tz} ${tzz} ${prefix}unblock @user ¬∞
‚îÉ${tz} ${tzz} ${prefix}antipv ¬∞
‚îÉ${tz} ${tzz} ${prefix}ia ¬∞
‚îÉ${tz} ${tzz} ${prefix}entrar [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}sair ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
          
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüåÇùöòùöûùöùùöõùöòùöú ùöåùöòùöñùöäùöóùöçùöòùöúüåÇ‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}pinterest ¬∞
‚îÉ${tz} ${tzz} ${prefix}wallpaper ¬∞
‚îÉ${tz} ${tzz} ${prefix}wikimedia ¬∞
‚îÉ${tz} ${tzz} ${prefix}nick  seu nome¬∞
‚îÉ${tz} ${tzz} ${prefix}xv ¬∞
‚îÉ${tz} ${tzz} ${prefix}placaloli sey nome ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüë•ùöêùöõùöûùöôùöòùöúüë•Ô∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}linkgp ¬∞
‚îÉ${tz} ${tzz} ${prefix}setpp ¬∞
‚îÉ${tz} ${tzz} ${prefix}hidetag [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}setnome [texto] ¬∞
‚îÉ${tz} ${tzz} ${prefix}grupo [op√ß√£o] ¬∞
‚îÉ${tz} ${tzz} ${prefix}add @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}kick @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}promover @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}rebaixar @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}apagar [marque a msg do bot] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüå†ùë¨ùíÖùíäùíïùíîüå†‚Éü„Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}edit1 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit2 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit3 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit4 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit5 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit6 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit7 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit8 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚îÉ${tz} ${tzz} ${prefix}edit9 (ùë∫ùíÜùíñ ùëªùíÜùíôùíïùíê)
‚ï∞‚ïê‚ïê‚ïê‚ä∑     
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüíéùë≥ùë∂ùëÆùë∂ùë∫üíéÔ∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}wetglass „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}multicolor3d„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}watercolor „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}luxurygold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxywallpaper „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}lighttext„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}beautifulflower„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}puppycute „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}royaltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}heartshaped „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdaycake „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxystyle „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}hologram3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenneon „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glossychrome „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenbush „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}metallogo „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}noeltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glittergold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textcake„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}starsnight „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}wooden3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textbyname „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}writegalacy „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxybat „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}snow3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdayday „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}goldplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}silverplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}freefire „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}cartoongravity„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}anonymhacker„Äîseu nome
‚ï∞‚ïê‚ïê‚ïê‚ä∑       
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚úçüèªùöéùöçùöíùöùùöä ùöïùöòùöêùöòùöúùöñùöäùöîùöéùöõ‚úçüèªÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê         
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}lava [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}halloween [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neondevil [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonFire [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunderv2 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunder [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}colaq [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}luxury [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}berry [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}transformer [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}matrix [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}horror [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}nuvem [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonTxT [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3d [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neve [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}areia [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}vidro [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}style [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}pink [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}carbon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tetalblue [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}toxic [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}jeans [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ossos [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}asfalto [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}natal [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}joker [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}blood [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}break [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}fiction [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}3dstone [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}gameOver [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}lapis [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ice [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}rainbow [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}metalfire [texo] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑         
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüéµùöçùöòùö†ùöïùöòùöäùöçùöúüéµÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê      
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}play [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}playvideo [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp3 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp4 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tiktok [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ig [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}xvdl [link] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚ú®ùöåùöòùöóùöüùöéùöõùöùùöéùöõ‚ú®Ô∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}toimage ¬∞
‚îÉ${tz} ${tzz} ${prefix}sticker ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tovideo ¬∞
‚îÉ${tz} ${tzz} ${prefix}togif ¬∞
‚îÉ${tz} ${tzz} ${prefix}tourl ¬∞
‚îÉ${tz} ${tzz} ${prefix}loli ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüîûùöôùöòùöõùöóùöòùöêùöõùöäùöèùöíùöäùöúüîûÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}porno ¬∞
‚îÉ${tz} ${tzz} ${prefix}hentai ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwloli ¬∞
‚îÉ${tz} ${tzz} ${prefix}orgy ¬∞
‚îÉ${tz} ${tzz} ${prefix}yuri ¬∞
‚îÉ${tz} ${tzz} ${prefix}thighs ¬∞
‚îÉ${tz} ${tzz} ${prefix}femdom ¬∞
‚îÉ${tz} ${tzz} ${prefix}gangbang ¬∞
‚îÉ${tz} ${tzz} ${prefix}foot ¬∞
‚îÉ${tz} ${tzz} ${prefix}glasses ¬∞
‚îÉ${tz} ${tzz} ${prefix}jahy ¬∞
‚îÉ${tz} ${tzz} ${prefix}masturbation ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwNeko ¬∞
‚îÉ${tz} ${tzz} ${prefix}ero ¬∞
‚îÉ${tz} ${tzz} ${prefix}cum ¬∞
‚îÉ${tz} ${tzz} ${prefix}cuckold ¬∞
‚îÉ${tz} ${tzz} ${prefix}blowjob ¬∞
‚îÉ${tz} ${tzz} ${prefix}bdsm ¬∞
‚îÉ${tz} ${tzz} ${prefix}ass ¬∞
‚îÉ${tz} ${tzz} ${prefix}ahegao ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
ü•≥ùöäùöêùöõùöäùöçùöéùöåùöíùöñùöéùöóùöùùöòùöúü•≥‚óÜ‚Ä¢‚Ä¢‚ïó
‚îÉ${tz} üåü david
‚îÉ${tz} üåü tobi
‚îÉ${tz} üåü sayo
‚îÉ${tz} üåü skiller ofc
‚îÉ${tz} üåü kelly
‚ïö‚ïê[*_${nomebot}_*]‚ïê‚ïù
‚ï∞‚îÅ‚îÅ‚îÅ ‚™®
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`,

                    footer: `Evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: say1 })
            }
            break					            
            case 'help': {
            audio1 = fs.readFileSync('./dados/audio/menu.mp3')
            venom.sendMessage(from, { audio: audio1, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: say1 })
           // venom.sendMessage(m.chat, { audio: audio1 , mimetype: "audio/mp4", duration: 359996400, ptt: "true" , quoted: m})
        //    venom.sendMessage(m.chat, { audio: audio1, ptt: "true", mimetype: "audio/mp4",  quoted: m })

txtk = `

‚ï≠‚îÄ‚îÄ„Äå *${nomedobot} „Äç
‚îÇ
‚î¥
‚ï≠‚îÅ ùöãùöéùöñ-ùöüùöíùöóùöçùöò
‚îû ùô∞ùöò ùöéùöüùöòùöïùöûùöùùöíùöòùöó ùöãùöòùöù ùöñùöç
‚ï∞‚îÅ 
‚î¥
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üí°ùöíùöóùöèùöò ùöçùöò ùöãùöòùöùüí°‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß
‚ï≠‚îÅ 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz}Prefixo:„Äé${prefix}„Äè
‚îÉ${tz} ${tzz}Data: ...
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚î¥
‚ï≠‚îÅ ùôøùöéùööùöûùöéùöóùöò ùöäùöüùöíùöúùöò
‚îÇ
‚îûùöãùöòùöù ùöäùöíùöóùöçùöä ùöäùöôùöõùöéùöúùöéùöóùöùùöä ùöéùöõùöõùöòùöú ùöôùöòùöíùöú ùöéùöúùöùùöä ùöéùöñ ùöãùöéùöùùöä
‚îûùöãùöòùöùùö†ùöëùöäùöùùöúùöäùöôùöô 100% ùöêùöõùöäùöùùöíùöú
‚îûùöíùöóùöèùöòùöõùöñùöäùöåùöòùöéùöú ùöçùöíùöêùöíùöùùöé ${prefix}ùöçùöòùöóùöò
‚îÇ
‚ï∞‚îÅ ùöûùöúùöé ùöåùöòùöñ ùöñùöòùöçùöéùöõùöäùöåùöäùöò
‚î¥
‚úß ‚Éü ‚Éü ‚Éü‚îÅ‚ä∞üìÉùöúùöéùöû ùöôùöéùöõùöèùöíùöïüìÉ‚ä±‚îÅ ‚Éü ‚Éü ‚Éü ‚úß*
‚ï≠‚îÅ‚ïê‚ïê‚ä∑
‚îÉ${tz} ‚ùñ Nome: ${pushname}
‚îÉ${tz} ‚ùñ N√∫mero: ${m.sender.split("@")[0]}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚î¥

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüü§îùöíùöóùöèùöòùöõùöñùöäùöåùöòùöéùöúü§î‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}menu ¬∞
‚îÉ${tz} ${tzz} ${prefix}ping ¬∞
‚îÉ${tz} ${tzz} ${prefix}criador ¬∞ 
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üîçÔ∏èùöôùöûùö°ùöäùöçùöäùöúüîç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}cpf [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cpffull [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ip [ip] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cep [cep] ¬∞
‚îÉ${tz} ${tzz}
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüé©ùöåùöõùöíùöäùöçùöòùöõüé©‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}block @user ¬∞
‚îÉ${tz} ${tzz} ${prefix}unblock @user ¬∞
‚îÉ${tz} ${tzz} ${prefix}antipv ¬∞
‚îÉ${tz} ${tzz} ${prefix}ia ¬∞
‚îÉ${tz} ${tzz} ${prefix}entrar [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}sair ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ
          
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüåÇùöòùöûùöùùöõùöòùöú ùöåùöòùöñùöäùöóùöçùöòùöúüåÇ‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}pinterest ¬∞
‚îÉ${tz} ${tzz} ${prefix}wallpaper ¬∞
‚îÉ${tz} ${tzz} ${prefix}wikimedia ¬∞
‚îÉ${tz} ${tzz} ${prefix}nick ¬∞
‚îÉ${tz} ${tzz} ${prefix}xv ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüë•ùöêùöõùöûùöôùöòùöúüë•Ô∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}linkgp ¬∞
‚îÉ${tz} ${tzz} ${prefix}setpp ¬∞
‚îÉ${tz} ${tzz} ${prefix}hidetag [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}setnome [texto] ¬∞
‚îÉ${tz} ${tzz} ${prefix}grupo [op√ß√£o] ¬∞
‚îÉ${tz} ${tzz} ${prefix}add @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}kick @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}promover @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}rebaixar @usu√°rio ¬∞
‚îÉ${tz} ${tzz} ${prefix}apagar [marque a msg do bot] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüíéùë≥ùë∂ùëÆùë∂ùë∫üíéÔ∏è‚Éü „Åç‚Ä¢‚Ä¢‚ïê‚ïê 
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}wetglass „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}multicolor3d„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}watercolor „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}luxurygold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxywallpaper „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}lighttext„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}beautifulflower„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}puppycute „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}royaltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}heartshaped „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdaycake „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxystyle „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}hologram3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenneon „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glossychrome „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}greenbush „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}metallogo „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}noeltext „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}glittergold „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textcake„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}starsnight „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}wooden3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}textbyname „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}writegalacy „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}galaxybat „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}snow3d „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}birthdayday „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}goldplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}silverplaybutton „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}freefire „Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}cartoongravity„Äîseu nome
‚îÉ${tz} ${tzz} ${prefix}anonymhacker„Äîseu nome
‚ï∞‚ïê‚ïê‚ïê‚ä∑       

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚úçüèªùöéùöçùöíùöùùöä ùöïùöòùöêùöòùöúùöñùöäùöîùöéùöõ‚úçüèªÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê         
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}lava [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}halloween [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neondevil [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonFire [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}demonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunderv2 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}thunder [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}colaq [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}luxury [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}berry [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}transformer [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}matrix [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}horror [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}nuvem [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonTxT [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3d [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neonGreen [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neon3 [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}neve [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}areia [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}vidro [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}style [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}pink [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}carbon [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tetalblue [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}toxic [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}jeans [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ossos [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}asfalto [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}natal [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}joker [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}blood [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}break [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}fiction [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}3dstone [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}gameOver [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}lapis [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ice [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}rainbow [texo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}metalfire [texo] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑         

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éüüéµùöçùöòùö†ùöïùöòùöäùöçùöúüéµÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê      
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}play [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}playvideo [nome] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp3 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ytmp4 [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tiktok [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ig [link] ¬∞
‚îÉ${tz} ${tzz} ${prefix}xvdl [link] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚Éü‚ú®ùöåùöòùöóùöüùöéùöõùöùùöéùöõ‚ú®Ô∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}toimage ¬∞
‚îÉ${tz} ${tzz} ${prefix}sticker ¬∞
‚îÉ${tz} ${tzz} ${prefix}attp [txt] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tovideo ¬∞
‚îÉ${tz} ${tzz} ${prefix}togif ¬∞
‚îÉ${tz} ${tzz} ${prefix}tourl ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™„Åç‚ÉüüîûùöôùöòùöõùöóùöòùöêùöõùöäùöèùöíùöäùöúüîûÔ∏èÔ∏è‚Éü „Åç‚óÜ‚Ä¢‚Ä¢‚ïê‚ïê     
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}porno ¬∞
‚îÉ${tz} ${tzz} ${prefix}hentai ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwloli ¬∞
‚îÉ${tz} ${tzz} ${prefix}orgy ¬∞
‚îÉ${tz} ${tzz} ${prefix}yuri ¬∞
‚îÉ${tz} ${tzz} ${prefix}thighs ¬∞
‚îÉ${tz} ${tzz} ${prefix}femdom ¬∞
‚îÉ${tz} ${tzz} ${prefix}gangbang ¬∞
‚îÉ${tz} ${tzz} ${prefix}foot ¬∞
‚îÉ${tz} ${tzz} ${prefix}glasses ¬∞
‚îÉ${tz} ${tzz} ${prefix}jahy ¬∞
‚îÉ${tz} ${tzz} ${prefix}masturbation ¬∞
‚îÉ${tz} ${tzz} ${prefix}nsfwNeko ¬∞
‚îÉ${tz} ${tzz} ${prefix}ero ¬∞
‚îÉ${tz} ${tzz} ${prefix}cum ¬∞
‚îÉ${tz} ${tzz} ${prefix}cuckold ¬∞
‚îÉ${tz} ${tzz} ${prefix}blowjob ¬∞
‚îÉ${tz} ${tzz} ${prefix}bdsm ¬∞
‚îÉ${tz} ${tzz} ${prefix}ass ¬∞
‚îÉ${tz} ${tzz} ${prefix}ahegao ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑

‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
ü•≥ùöäùöêùöõùöäùöçùöéùöåùöíùöñùöéùöóùöùùöòùöúü•≥‚óÜ‚Ä¢‚Ä¢‚ïó
‚îÉ${tz} üåü lorran
‚îÉ${tz} üåü tobi
‚îÉ${tz} üåü sayo
‚îÉ${tz} üåü skiller ofc
‚îÉ${tz} üåü ${nomedono}
‚ïö‚ïê[*_${nomebot}_*]‚ïê‚ïù
‚ï∞‚îÅ‚îÅ‚îÅ ‚™®`
ran = getRandom('.jpg')
rano = getRandom('.jpg')
fs.writeFileSync(ran, pperfil)
anuh = await TelegraPh(ran)
//${util.format(anu)}

buff = await getBuffer(`https:// akame-apii.herokuapp.com/api/card/menu?nome=${m.sender.split('@')[0]}&perfil=${util.format(anuh)}&fundo=https://telegra.ph/file/14c9a6ce9c4e3e43a8ee1.jpg&cor1=ff0000&cor2=ff0000&numero=123&titulo=MENU&apikey=AUBJHbxf`)
//buff = await getBuffer(`https://brizas-api.herokuapp.com/photomod/v2/menu?apikey=brizaloka&description=${pushname}&profileimg=${util.format(anu)}&background=https://i.imgur.com/2TCj9ri.jpg`)
//buff = await getBuffer(`https://lolizit-api.herokuapp.com/api/canvas/bemvindo2?nome=${m.sender.split('@')[0]}&nomegp=BEM VINDO AO EVOLUTION-MD&titulo=MENU&NICK=$pushname}&cor=ff0000&tcor=ff0000&lcor=ff0000&perfil=${util.format(anu)}&fundo=https://telegra.ph/file/d6e49dde2c4f4332d857f.jpg&numero=9999&apikey=Venom`)
                let message = await prepareWAMessageMedia({ image: buff }, { upload: venom.waUploadToServer })
                const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({
                    templateMessage: {
                        hydratedTemplate: {
                            imageMessage: message.imageMessage,
                            hydratedContentText: txtk,
                            hydratedButtons: [{
                             urlButton: {
                                    displayText: '‚öôÔ∏è ùöäùöôùöíùöú',
                                    url: 'https://venom-api.herokuapp.com/api'
                                }
                            }, {
                                callButton: {
                                    displayText: 'ñ•Çùöêùöèùö£ùöíùöóñ•Ç',
                                    phoneNumber: '+55 97 98438-8524'
                                }
                            }, {
                             quickReplyButton: {
                                    displayText: 'ñ•Çùöúùöùùöäùöùùöûùöúñ•Ç',
                                    id: 'ping'
                                }
                            }, {
                                quickReplyButton: {
                                    displayText: 'ñ•Çùöçùöòùöóùöòñ•Ç',
                                    id: 'criador'
                                }  
                            }, {
                                quickReplyButton: {
                                    displayText: 'ñ•Çùöêùöõùöûùöôùöòñ•Ç',
                                    id: 'comprabot'
                                }
                            }]
                        }
                    }
                }), { userJid: m.chat, quoted: m })
                venom.relayMessage(m.chat, template.message, { messageId: template.key.id })
            }
*/            
            break
case 'jsuddy':
const button = {
buttonText: '|||||||||||||||',
 footerText: '*_¬© ùêÑùêØùê®ùê•ùêÆùê≠ùê¢ùê®ùêß ùêÅùê®ùê≠ Bot_*',
 description: `‚ú® *_bem vindo(a) ao menu ${pushname}_* ‚ú®`,
 sections: [
                     {
                      "title": `teste`,
 rows: [
                          {
                              "title": "‚öíÔ∏è MENU üõ†Ô∏è",
                              "rowId": "#tes"                          
                           },
                           {
                              "title": "PING üèì",
                              "rowId": "#velocidade"
                           }
                        ]
                     }],
 listType: 1
}
sendListMsg(button.title, button.description, button.buttonText, button.sections)  
break
            
case 'play2k':
var t = args.join(' ')
if (!t) return m.reply('Cad√™ o nome da m√∫sica?')
var apikeyakame = 'GkTh5DWW'
var oi = await fetchJson(`https://ayumi-apis.herokuapp.com/api/download/youtube?url=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
//var imgapi = await getBuffer(oi.resultado.thumb)
var infoapi = `üìïNome : ${oi.resultado.titulo}\nüëÅtamanho : ${oi.resultado.tamanho_audio}\n‚è∞tamanho video : ${oi.resultado.tamanho_video}\nüé•Canal : \n\n_*!--aguarde o envio do arquivo--!*_`
//var resultado_audio = await getBuffer(oi.resultado.link)
enviarArquivoDoLink(m.chat, oi.resultado.capa, infoapi, m)
//venom.sendMessage(m.chat, { image: { url: oi.resultado.capa } }, {caption: infoapi}, {quoted: m })
venom.sendMessage(m.chat, { audio: { url: oi.resultado.audio_dl }, mimetype: 'audio/mp4' }, { quoted: m })
break
case 'playaudi':
reply('aguarde enviando audio')
var t = args.join(' ')
if (!t) return m.reply('Cad√™ o nome da m√∫sica?')
var apikeyakame = 'GkTh5DWW'
var oi = await fetchJson(`http://rafinha043-api.herokuapp.com/api/ytplay?nome=${q}&apikey=GkTh5DWW`)
//var imgapi = await getBuffer(oi.resultado.thumb)
//var infoapi = `üìïNome : ${oi.resultado.t√≠tulo}\nüëÅvisualiza√ß√µes : ${oi.resultado.visualiza√ß√µes}\nüîçpublicado : ${oi.resultado.publicado}\nüé•Canal : ${oi.resultado.canal}\n\n_*!--aguarde o envio do arquivo--!*_`
//var resultado_audio = await getBuffer(oi.resultado.link)
//enviarArquivoDoLink(m.chat, oi.resultado.thumb, infoapi, m)
//venom.sendMessage(m.chat, { image: { url: oi.resultado.capa } }, {caption: infoapi}, {quoted: m })
venom.sendMessage(m.chat, { audio: { url: oi.resultado.link }, mimetype: 'audio/mp4' }, { quoted: m })
break
case 'playvid':
reply('aguarde enviando video')
var t = args.join(' ')
if (!t) return m.reply('Cad√™ o nome da m√∫sica?')
var apikeyakame = 'GkTh5DWW'
var oi = await fetchJson(`http://rafinha043-api.herokuapp.com/api/ytplaymp4?nome=${q}&apikey=GkTh5DWW`)
//var imgapi = await getBuffer(oi.resultado.thumb)
//var infoapi = `üìïNome : ${oi.resultado.t√≠tulo}\nüëÅvisualiza√ß√µes : ${oi.resultado.visualiza√ß√µes}\nüîçpublicado : ${oi.resultado.publicado}\nüé•Canal : ${oi.resultado.canal}\n\n_*!--aguarde o envio do arquivo--!*_`
//var resultado_audio = await getBuffer(oi.resultado.link)
//enviarArquivoDoLink(m.chat, oi.resultado.thumb, infoapi, m)
//venom.sendMessage(m.chat, { image: { url: oi.resultado.capa } }, {caption: infoapi}, {quoted: m })
venom.sendMessage(m.chat, { video: { url: oi.resultado.url }, mimetype: 'video/mp4' }, { quoted: m })
break
case 'video':
var t = args.join(' ')
if (!t) return m.reply('Cad√™ o nome da m√∫sica?')
var apikeyakame = 'GkTh5DWW'
var oi = await fetchJson(`https://ayumi-apis.herokuapp.com/api/download/youtube?url=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)
//var imgapi = await getBuffer(oi.resultado.thumb)
var infoapi = `üìïNome : ${oi.resultado.titulo}\nüëÅtamanho : ${oi.resultado.tamanho_audio}\n‚è∞tamanho video : ${oi.resultado.tamanho_video}\nüé•Canal : \n\n_*!--aguarde o envio do arquivo--!*_`
//var resultado_audio = await getBuffer(oi.resultado.link)
enviarArquivoDoLink(m.chat, oi.resultado.capa, infoapi, m)
//venom.sendMessage(m.chat, { image: { url: oi.resultado.capa } }, {caption: infoapi}, {quoted: m })
venom.sendMessage(m.chat, { video: { url: oi.resultado.audio_dl } }, {mimetype: 'video/mpeg'}, {quoted: m })
break

			case 'tiktok':
 if (!c) return m.reply(`Use assim ${command} link`)
			    if (!isUrl(c)) return m.reply('preciso de um link')
			    if (!c.includes('tiktok')) return m.reply('o link precisa ser do tiktok')			    
			    m.reply(mess.wait)
			    xfar.Tiktok(c).then( data => {
			      venom.sendMessage(m.chat, {
				   video: { url: data.medias[0].url },
				   caption: `${data.title}\n\nVoc√™ pode convert√™-lo em v√≠deo sem marca d,'√°gua ou √°udio, pressione o bot√£o abaixo para alter√°-lo!`,
				   buttons: [{buttonId: `${prefix}tiktoknowm ${c}`, buttonText: { displayText: "Sem marca d'√°gua" }, type: 1 },
					{buttonId: `${prefix}tiktokaudio ${c}`, buttonText: { displayText: "A√∫dio.mp3" }, type: 1 }],
				   footer: "Criado por Venom"
			      }, { quoted: m })				  
			    }).catch(() => m.reply('ocorreu um erro :/'))
			    break
			case 'tiktoknowm':
 if (!c) return m.reply(`Use assim ${command} link`)
			    if (!isUrl(c)) return m.reply('preciso de um link')
			    if (!c.includes('tiktok')) return m.reply('o link precisa ser do tiktok')			    
			    m.reply(mess.wait)
			    hxz.ttdownloader(c).then( data => {
			     venom.sendMessage(m.chat, { video: { url: data.nowm }}, { quoted: m })
				}).catch(() => m.reply('ocorreu um erro :/'))
			    break
			case 'tiktokaudio':
			    if (!c) return m.reply(`Use assim ${command} link`)
			    if (!isUrl(c)) return m.reply('preciso de um link')
			    if (!c.includes('tiktok')) return m.reply('o link precisa ser do tiktok')			    
			    m.reply(mess.wait)
			    hxz.ttdownloader(c).then( data => {
			    venom.sendMessage(m.chat, { audio: { url: data.nowm }, mimetype: 'audio/mp4' }, { quoted: m })			       
				}).catch(() => m.reply('ocorreu um erro :/'))
		        break
		        
case 'ig':
case 'igdl':
case 'instagram':
if (!c) return m.reply('Cad√™ o link??')
if (!isUrl(c)) return m.reply('preciso de um link')
if (!c.includes('instagram')) return m.reply('o link precisa ser do insta')			    
var { igDownloader } = require('./lib/igdown')
res = await igDownloader(`${c}`).catch(e => {
m.reply(e)
})
console.log(res)
enviarArquivoDoLink(m.chat,`${res.result.link}`,`${res.result.desc}`)
break
case 'xv':
if (!c) return m.reply('Cad√™ o nome??')
var normalize = c.split(' ').join('+').split('%20').join('');
var search = normalize.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
var normalize = c.split(' ').join('+').split('%20').join('');
var search = normalize.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
var url = `https://www.xvideos.com/?k=${search}`;
var data = [];
var xv = [];
request(url, (err, req, body) => {
if (err) return m.reply(err);
const regExp = /<\/div><div class=\".+?\"><p class=\".+?\"><a href=\".+?\" .+? <span class=\".+?\"><\/span>/g;
const datas = body.match(regExp);
data.push(...datas);
var regExp2 = /\"\/.+?\"/g;
var regExp3 = /title=\".+?\">/g;
// var regExp4 = /\"duration\">.+?/g;
for (let index of data) {
var reg = index.match(regExp2);
var reg2 = index.match(regExp3);
var reg3 = reg2[0].split('title=').join('').split('>').join('');
xvideokk = JSON.parse(reg[0])[Math.floor(Math.random() * JSON.parse(reg[0]).length)]
//enviarArquivoDoLink(m.chat, `https://www.xvideos.com${JSON.parse(reg[0])}`, 'pronto')
//m.reply(`https://www.xvideos.com${JSON.parse(reg[0])}`)
info = `
nome : ${JSON.parse(reg3)}

link : https://www.xvideos.com${JSON.parse(reg[0])}`
venom.sendMessage(m.chat, { 
text: info 
}, { quoted: say1 })
}});    
break
      case 'xvdl':
      if (!c) return m.reply('Cad√™ o link??')
if (!isUrl(c)) return m.reply('preciso de um link')
if (!c.includes('xvideos')) return m.reply('o link precisa ser do tiktok')			    
m.reply('baixando o v√≠deo aguarde...')
      var data = [];
      request(c, (err, req, body) => {
        if (err) return console.log(err);
        try {
          var regExp = /html5player\.setVideoTitle\(\'.+?\'\)/g;
          var _title = body.match(regExp)[0].split('html5player.setVideoTitle(\'').join('').split('\')').join('');
          var url_video = /html5player\.setVideoUrlHigh\(\'.+?\'\)/g;
          var _url_video_raw = body.match(url_video)[0].split('html5player.setVideoUrlHigh').join('').split('(').join('').split(')').join('').split('\'').join('');
          var duration1 = /class=\"duration\">.+?<\/span>/g;
          var duration = body.match(duration1)[0].split('class=\"duration\">').join('').split('<').join('').split('span>').join('').split('/').join('');
          var MinOurSec = duration.endsWith(' min') ? ' minutes': '' || duration.endsWith(' sec') ? ' seconds': '';
          var _duration = duration.split(' ')[0] + MinOurSec;
          var viewsV = /class=\"mobile-hide\">.+?<\/strong>/g;
          var _views = body.match(viewsV)[0].split('class=\"mobile-hide\">').join('').split('</strong>').join('');
          var _owner = /html5player\.setUploaderName\(\'.+?\'\)/g;
          var _ownerVideo = body.match(_owner)[0].split('html5player.setUploaderName(\'').join('').split('\')').join('');
          info = `nome : ${_title}\ndura√ß√£o : ${_duration}\nvisualiza√ß√µes : ${_views}`
          enviarArquivoDoLink(m.chat, _url_video_raw, info)
        } catch (a) {
          return m.reply('v√≠deo n√£o encontrado')          
          }});       
break
case 'storyigdl': {
if (!c) return m.reply('Cad√™ o nome??')
//if (!args[1].includes('...') && !args[1].includes('...')) return m.reply('erro na api')
m.reply('Procurando dados...')
api = await fetchJson(`https://akame-apii.herokuapp.com/api/igstorydl?nome=${c}&apikey=AUBJHbxf`)
resultadolista = api.resultado
akamekk = resultadolista[Math.floor(Math.random() * resultadolista.length)]
resultadoig = await getBuffer(akamekk.url)
//tipo = akamekk.fileType
enviarArquivoDoLink(m.chat, resultadoig, 'pronto')
}
break                    
case 'gerarcpf':
//   if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
  let cp1 = `${Math.floor(Math.random() * 300) + 600}`
let cp2 = `${Math.floor(Math.random() * 300) + 600}`
let cp3 = `${Math.floor(Math.random() * 300) + 600}`
let cp4 = `${Math.floor(Math.random() * 30) + 60}`
let cpf = `${cp1}.${cp2}.${cp3}-${cp4}`
await venom.sendMessage(m.chat, {text: `CPF gerado com sucesso : ${cpf}`}, {quoted: m})
break
case 'cpftest':
if (!isPremium) return reply(mess.premium)
if (args.length == 0) return m.reply(`Exemplo: ${prefix + command} 17578740890`)
if (c.includes('.') && args[0].includes('-')) return m.reply("Envie o CPF Sem pontua√ß√£o")
try {
api = await fetchJson(`http://51.255.55.134/receita.php?cpf=${c}`)
psq = `*----„Äå üé≤ CPF üé≤ „Äç----*\n\n`
psq += `*üìÑ Nome :* ${api.pessoa.nome}\n`
psq += `*üë©‚Äçüë¶ Nome da m√£e :* ${api.nomeMae}\n`
psq += `*üß¨ Sexo :* ${api.sexo}\n`
psq += `*üóìÔ∏è Data Nascimento:* ${api.dataNascimento.split("T0")[0]}\n`
psq += `*ü§µ‚Äç‚ôÄÔ∏è Situa√ß√£o Estrangeiro :* ${api.situacaoEstrangeiro}\n`
psq += `*üó≥Ô∏èÔ∏è Titulo eleitor :* ${api.numeroTituloEleitor}\n`
psq += `*üìüÔ∏è Cep :* ${api.pessoa.numeroCep}\n`
psq += `*‚öñÔ∏è Cpf :* ${api.id}\n\n`
psq += `*ü™Ä CONTATO ü™Ä*\n\n`
psq += `*üè≥Ô∏è Ddd :* ${api.pessoa.numeroDdd}\n`
psq += `*ü™Ä N√∫mero :* ${api.pessoa.numeroTelefone}\n`
psq += `*ü™Ä Wame do nmr :* wa.me/55${api.pessoa.numeroDdd}${api.pessoa.numeroTelefone}\n\n`
psq += `*üö© ENDERE√áO üö©*\n\n`
psq += `*üèôÔ∏è Rua :* ${api.pessoa.nomeLogradouro}\n`
psq += `*üåÜ Bairro :* ${api.pessoa.nomeBairro}\n`
psq += `*üåÉ Munic√≠pio :* ${api.pessoa.nomeMunicipio}`
psq += `*üåÜ Cidade :* ${api.pessoa.siglaUf}\n`
psq += `*üåÜ Munic√≠pio de nascimento :* ${api.nomeMunicipioNaturalidade}\n`
enviarbuton(m.chat, psq, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 9843-88524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
} catch (api) {
m.reply("CPF informado n√£o foi encontrado na base de dados da Receita Federal.")
}
/*if (api.match(`SUSPENSO`)) {
m.reply("CPF SUSPENSO")
}*/
break

case 'cpffull':
if (!isPremium) return reply(mess.premium)
if (args.length == 0) return m.reply(`Exemplo: ${prefix + command} 17578740890`)
if (c.includes('.') && args[0].includes('-')) return m.reply("Envie o CPF Sem pontua√ß√£o")
try{
cpf = await fetchJson(`https://akame-apii.herokuapp.com/api/consulta/cpfull?cpf=${c}&apikey=edbot`)
buffer = await getBuffer(`https://i.ibb.co/FBKnSc6/cpf-icone.png`)  
dadosok = `üîéCONSULTA CPFüîé\n
üîé CPF: ${cpf.resultado.cpf}\n
ü§µüèª Nome: ${cpf.resultado.nome}\n
ü§± Nome da M√£e: ${cpf.resultado.nome_m√£e}\n
üìÜ Data de Nasc: ${cpf.resultado.nascimento}\n
üîé Titulo de Eleitor: ${cpf.resultado.t√≠tulo_eleitor}\n
‚ößÔ∏èSexo : ${cpf.resultado.sexo}\n
üìçCidade Natal : ${cpf.resultado.cidade_natal}\n
„Ö§„Ö§„Ö§„Ö§üó∫Ô∏è *MORADIA* üó∫Ô∏è \n  
üìçEstado: ${cpf.resultado.sigla}\n
üìçMunic√≠pio : ${cpf.resultado.munic√≠pio}\n
üìçBairro : ${cpf.resultado.bairro}\n
üìçRua : ${cpf.resultado.rua}\n
üìçCEP : ${cpf.resultado.cep}\n\n
„Ö§‚òéÔ∏è *DADOS DE COMUNICA√á√ÉO* ‚òéÔ∏è\n   
üì±Telefone: 55${cpf.resultado.ddd}${cpf.resultado.n√∫mero}\n\n
By: ùêÑùêØùê®ùê•ùêÆùê≠ùê¢ùê®ùêß ùêÅùê®ùê≠`

await venom.sendMessage(from, buffer, image, {quoted: mek, thumbnail:null, caption: `${dadosok}`})
} catch {
m.reply('N√£o Foi Possivel Encontrar os Dados, Verifique se o cpf √© v√°lido')
}
break
case 'puxaip': 
if (!c) return m.reply('preciso do ip')
//if (isNaN(args[0])) return m.reply('Preciso de um ip em formato de n√∫mero')
if (c.length < 20) {
const texto1 = 'üîéCONSULTA IPüîé',
const texto2 = 'by Venomüî•',
const venomk = await fetchJson(`https://evolution-apis.herokuapp.com/api/puxaip?ip=${c}&apikey=Venom`)
//buffer = await getBuffer(`https://i.ibb.co/FBKnSc6/cpf-icone.png`)  
const dados = `${texto1}
  
 ip: ${venomk.resultado.ip}
 tipo: ${venomk.resultado.tipo}
 continente: ${venomk.resultado.continente}
 continente_sigla: ${venomk.resultado.continente_sigla}
 pa√≠s: ${venomk.resultado.pa√≠s}
 pa√≠s_sigla: ${venomk.resultado.pa√≠s_sigla}
 capital: ${venomk.resultado.capital}
 ddd: ${venomk.resultado.ddd}
 pa√≠ses_vizinhos: ${venomk.resultado.pa√≠ses_vizinhos}
 cidade: ${venomk.resultado.cidade}
 regi√£o: ${venomk.resultado.regi√£o}
 latitude: ${venomk.resultado.latitude}
 longitude: ${venomk.resultado.longitude}
 asn: ${venomk.resultado.asn}
 org√£o: ${venomk.resultado.org√£o}
 isp: ${venomk.resultado.isp}
 fuso_hor√°rio: ${venomk.resultado.fuso_hor√°rio}
 moeda: ${venomk.resultado.moeda}
 moeda_code: ${venomk.resultado.moeda_code}
 s√≠mbolo_da_moeda: ${venomk.resultado.s√≠mbolo_da_moeda}
 
`

enviarbuton(m.chat, `${dados}`, `${texto2}`,  [{ callButton: { displayText: 'üî•ùó∞ùóºùóªùòÅùóÆùòÅùóº ùóΩùóÆùóøùóÆ ùòÅùóºùó∏ùó≤ùòÄüî•', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üî•ùó∞ùóºùó∫ùóΩùóøùóÆ ùó∏ùó≤ùòÜüî•', id: 'pix'}}])
} else {
m.reply('o ip inserido e invalido ou o n√∫mero n√£o corresponde')
}
break
case 'ip':
if (!isPremium) return reply(mess.premium)
if (!c) return m.reply('preciso do ip')
//if (isNaN(args[0])) return m.reply('Preciso de um ip em formato de n√∫mero')
if (c.length < 20) {
//if (c.includes('.') && args[0].includes('-')) return reply("....")
api = await fetchJson(`http://ip-api.com/json/${c}?fields=status,message,continent,continentCode,country,countryCode,region,regionName,city,district,zip,lat,lon,timezone,offset,currency,isp,org,as,asname,reverse,mobile,proxy,hosting,query`)
psq = `*----„Äå üìü IP üìü „Äç----*\n\n`
psq += `*Status :* ${api.status}\n`
psq += `*Ip :* ${api.query}\n`
psq += `*Continente :* ${api.continent}\n`
psq += `*Continente Sigla :* ${api.continentCode}\n`
psq += `*Pa√≠s :* ${api.country}\n`
psq += `*Pa√≠s Sigla :* ${api.countryCode}\n`
psq += `*Regi√£o :* ${api.region}\n`
psq += `*Nome da Regi√£o :* ${api.regionName}\n`
psq += `*Cidade :* ${api.city}\n\n`
psq += `*Latitude :* ${api.lat}\n`
psq += `*Longitude :* ${api.lon}\n`
psq += `*Tempo real :* ${api.timezone}\n`
psq += `*Isp :* ${api.isp}\n`
psq += `*Org :* ${api.org}`
enviarbuton(m.chat, psq, `Compre a api :)`,  [{ callButton: { displayText: 'üî•ùó∞ùóºùóªùòÅùóÆùòÅùóº ùóΩùóÆùóøùóÆ ùòÅùóºùó∏ùó≤ùòÄüî•', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üî•ùó∞ùóºùó∫ùóΩùóøùóÆ ùó∏ùó≤ùòÜüî•', id: 'pix'}}])
} else {
m.reply('o ip inserido e invalido ou o n√∫mero n√£o corresponde')
}
break
case 'cript': {
            if (!m.quoted.text && !text) throw `Marque uma msg com ${prefix + command}`
            let { eBinary } = require('./lib/binary')
            let teks = text ? text : m.quoted && m.quoted.text ? m.quoted.text : m.text
            let eb = await eBinary(teks)
            m.reply(eb)
        }
        break
        case'gerador' : 
        pul =`‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üîçÔ∏èùôÇùôöùôßùôñùôôùô§ùôßùôöùô®üîç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}gerarcrlv [so gera] ¬∞
‚îÉ${tz} ${tzz} ${prefix}identidade [so gera] ¬∞
‚îÉ${tz} ${tzz} ${prefix}gerarcpf [so gera] ¬∞
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`
enviarbuton(m.chat, pul, `Para puxadas e preciso de uma key :)`,  [{ callButton: { displayText: 'üîçÔ∏ètel do venomüîçÔ∏è', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üîçÔ∏èpaga via pixüîçÔ∏è', id: 'pix'}},{ quickReplyButton: { displayText: 'üîçÔ∏èpagar keyüîçÔ∏è', id: 'dono'}}])
break

case'pix':
enviarbuton(m.chat, `üìçcompre bases de bot apikey üí∞comandos premium e de puxadas script com o venom.jsüìç `, `So aceito via pixüëçüòé`,  [{ urlButton: { displayText: `üí† compre sua apikey com o venom`, url : `https://wa.me/559784388524?text=Ol√°+venom+Mods+eu+gostaria+de+saber+os+valores+dos+premium+e+bot+e+em+qual+forma+de+pagamento+posso+efetuar+a+compra`} },{ quickReplyButton: { displayText: `‚úÖcanal do YouTube`, id: `${prefix}canalvenom` } }, { quickReplyButton: { displayText: `üéâSit ofc de bots`, id: `${prefix}gitvenom` } }])       
break
case'canalvenom':
enviarbuton(m.chat, `üìçcanal ofc do venomüìç `, `Passa la fam√≠lia solto sempre bot e imune que deus aben√ßoe vcs ajudem bater 2küëçüòé`,  [{ urlButton: { displayText: `üí† clique aki para ajuda o canal`, url : `https://youtube.com/channel/UCOoc5DOT_M6foZa1jSOI6JQ`} }])       
break
case'grupovenom':
enviarbuton(m.chat, `üìçgrupo ofc do venomüìç `, `Grupo focado em programa√ß√£o e bot e share de cod e decodeüëçüòé`,  [{ urlButton: { displayText: `üí†clique para ebtra ao grupo do venom`, url : `https://chat.whatsapp.com/KG7Eb2sLlaQ4a0WdaONe7s`} }])       
break
case'gitvenom':
enviarbuton(m.chat, `üìçsit ofc do venomüìç `, `Ensinamento de instala√ß√£o de bots e script edit√°velüëçüòé`,  [{ urlButton: { displayText: `üí† colque aki para entra no sit de bot do venom`, url : `https://github.com/Venom-ofc`} }])       
break
case 'tmgp': case 'bcgroup': {
                if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                if (!text) throw `Texto?\n\nExemplo: ${prefix + command} dark`
                let getGroups = await venom.groupFetchAllParticipating()
                let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
                let anu = groups.map(v => v.id)
                m.reply(`Ok, em ${anu.length * 1.5} segundos eu irei enviar "${text}" para ${anu.length} Conversas em grupo`)
                for (let i of anu) {
                    await sleep(1500)
                    let btn = [{
                        urlButton: {
                            displayText: 'üî•Canal do Meu Donoüî•',
                            url: 'https://youtube.com/channel/UCOoc5DOT_M6foZa1jSOI6JQ'
                        }
                    }, {
                        callButton: {
                            displayText: 'üî•Numero do Meu Donoüî•',
                            phoneNumber: '+55 97 9843-88524'
                        }
                    }, {
                        quickReplyButton: {
                            displayText: 'üî•Consultasüî•',
                            id: 'consul'
                        }
                    }, {
                        quickReplyButton: {
                            displayText: 'üî•Planosüî•',
                            id: 'pre√ßos'
                        }  
                    }, {
                        quickReplyButton: {
                            displayText: 'üî•Menuüî•',
                            id: 'menu'
                        }
                            }]
                      fatihgans = fs.readFileSync('./lib/venom.jpg')
                      let txt = `\n\n${text}`
                      venom.send5ButImg(i, txt, venom.user.name, fatihgans, btn)
                    }
                m.reply(`tm enviada com sucesso para ${anu.length}`)
            }
            break
            case'tete5' : {
//if (!isCreator) throw mess.owner
                if (!text) throw `Text mana?\n\nExemplo de Uso: ${prefix + command} fatih-san`
                let an = await store.chats.all().map(v => v.id)
                m.reply(`A transmiss√£o sera enviada em ${an.length * 1.5} segundos para ${an.length} Chats`)
		for (let yoi of an) {
		    await sleep(1500)
venom.sendText(yoi, `bot online\n\n`, m,) 
	}
		m.reply('Tm envolution bot feita com sucesso!')
            }
            	
            		                break	
case 'bk':
				//	if (!isOwner) return reply('Quem √© Voc√™? Voc√™ n√£o √© meu dono üòÇ')
					if (args.length < 1) return reply('Cad√™ o texto?')
					let anujk = await store.chats.all().map(v => v.id)
					if (isMedia && !m.message.videoMessage || isQuotedImage) {
					const encmedia = isQuotedImage ? JSON.parse(JSON.stringify(mek).replace('quotedM','m')).message.extendedTextMessage.contextInfo : m
					buff = await venom.downloadMediaMessage(encmedia)
					for (let yoi of anujk) {
		    await sleep(1500)
					venom.sendMessage(yoi, buff, image, {caption: `*[ üß∏TRANSMI√á√ÉO DE AVISOüß∏ ]*\n\n${body.slice(4)}`})
					}
					reply('Transmiss√£o enviada com sucesso')
					} else {
					for (let yoi of anujk) {
		    await sleep(1500)
					sendButMessage(
yoi,
`„Äå ‚Ñ¢Ô∏è *TRANSMISS√ÉO* ‚Ñ¢Ô∏è „Äç\n\n${body.slice(4)}`,
`Caso n√£o queira participar das Transmiss√µes, fale com o meu criador para que ele possa te tirar.`,
[
{
buttonId: `Criador ‚ùÑÔ∏è`,
buttonText: {
displayText: `${prefix}criador`,
},
type: 1,
},
{
buttonId: `Menu üõçÔ∏è'`,
buttonText: {
displayText: `${prefix}menu`,
},
type: 1,
},
]
);
}
reply('Transmiss√£o enviada com sucesso')
}
break            		                                
case 'bc': case 'broadcast': case 'tm': {
                if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
                if (!text) throw `Text mana?\n\nExemplo de Uso: ${prefix + command} fatih-san`
                let anu = await store.chats.all().map(v => v.id)
                m.reply(`A transmiss√£o sera enviada em ${anu.length * 1.5} segundos para ${anu.length} Chats`)
		for (let yoi of anu) {
		    await sleep(1500)
		    let btn = [{
                urlButton: {
                    displayText: 'üî•Canal do Venomüî•',
                    url: 'https://youtube.com/channel/UCOoc5DOT_M6foZa1jSOI6JQ'
                }
            }, {
                callButton: {
                    displayText: 'üî•Numero do Venomüî•',
                    phoneNumber: '+55 97 9843-88524'
                }
            }, {
                quickReplyButton: {
                    displayText: 'üî•Consultasüî•',
                    id: 'consul'
                }
            }, {
                quickReplyButton: {
                    displayText: 'üî•Compra botsüî•',
                    id: 'pre√ßos'
                }  
            }, {
                quickReplyButton: {
                    displayText: 'üî•Menuüî•',
                    id: 'menu'
                }
                    }]
                      fatihgans = fs.readFileSync('./lib/venom.jpg')
                      let txt = `\n\n${text}`
                      venom.send5ButImg(yoi, txt, venom.user.name, fatihgans, btn)
		}
		m.reply('Tm envolution bot feita com sucesso!')
            }
            break
            case'tm1': {
   if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                if (!text) throw `Text mana?\n\nExemplo de Uso: ${prefix + command} fatih-san`
                let anu = await store.chats.all().map(v => v.id)
                m.reply(`A transmiss√£o sera enviada em ${anu.length * 1.5} segundos para ${anu.length} Chats`)
		for (let yoi of anu) {
		    await sleep(1500)
		    let buttons = [
                        { buttonId: 'menu', buttonText: { displayText: 'ñ•Ç ùöåùöòùöñùöäùöóùöçùöòùöú ñ•Ç' }, type: 1 },
                        { buttonId: 'ping', buttonText: { displayText: 'ñ•Ç ùöüùöéùöïùöòùöåùöíùöçùöäùöçùöé ñ•Ç' }, type: 1 }
                    ]
	
                      await venom.sendButtonText(yoi, buttons, `${text}\n`, venom.user.name, m)

            }           
		m.reply('Tm envolution bot feita com sucesso!')
            }            
            
            break
case 'pv': {
                 let anu = await store.chats.all().filter(v => v.id.endsWith('.net')).map(v => v.id)
                 let teks = ` *LISTA DE CHATS*\n\nTotal Chat : ${anu.length} Chat\n\n`
                 for (let i of anu) {
                     let nama = store.messages[i].array[0].pushName
                     teks += `üî• *Nome :* ${nama}\nüî• *Usu√°rio :* @${i.split('@')[0]}\nüî•*Chat :* https://wa.me/${i.split('@')[0]}\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`
                 }
                 venom.sendTextWithMentions(m.chat, teks, m)
             }
             break           
case 'grupos': {
                 let anu = await store.chats.all().filter(v => v.id.endsWith('@g.us')).map(v => v.id)
                 let teks = `‚¨£üî•*Lista de Grupos q eu estou*\n\nTotal: ${anu.length} Group\n\n`
                 for (let i of anu) {
                     let metadata = await venom.groupMetadata(i)
                     teks += `üî• *Nome:* ${metadata.subject}\nüî• *Dono:* @${metadata.owner.split('@')[0]}\nüî• *ID:* ${metadata.id}\nüî• *Data:* ${moment(metadata.creation * 1000).tz('America/Sao_Paulo').format('DD/MM/YYYY HH:mm:ss')}\n‚¨° *Membros:* ${metadata.participants.length}\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`
                 }
                 venom.sendTextWithMentions(m.chat, teks, m)
             }
             break       

//cases de puxadas e gerador
case 'consult':
pul =`‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
‚ï∞‚îÅ‚û™üîçÔ∏èùòæùô§ùô£ùô®ùô™ùô°ùô©ùôñùô® üîç‚óÜ‚Ä¢‚Ä¢‚îÅ‚îÅ
‚ï≠‚ïê‚ïê‚ïê‚ä∑
‚îÉ${tz} ${tzz} ${prefix}cpf [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cpffull [cpf] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ip [ip] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cep [cep] ¬∞
‚îÉ${tz} ${tzz} ${prefix}ddd
‚îÉ${tz} ${tzz} ${prefix}nome [nome completo] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cnpj [cnpj] ¬∞
‚îÉ${tz} ${tzz} ${prefix}tel [numero] ¬∞
‚îÉ${tz} ${tzz} ${prefix}placa [placa] ¬∞
‚îÉ${tz} ${tzz} ${prefix}cnsr [cnsr] ¬∞
‚îÉ${tz} ${tzz} ${prefix}gerarcpf
‚ï∞‚ïê‚ïê‚ïê‚ä∑
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`
enviarbuton(m.chat, pul, `Para puxadas e preciso de uma key :)`,  [{ callButton: { displayText: 'üîçÔ∏ètel do venomüîçÔ∏è', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üîçÔ∏èpaga via pixüîçÔ∏è', id: 'pix'}},{ quickReplyButton: { displayText: 'üîçÔ∏ègeradoresüîçÔ∏è', id: 'gerador'}}])
break
case 'empresa': {
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
ddds = await fetchJson(`http://brizas-api.herokuapp.com/gerador/empresa?apikey=brizaloka`)
dddlist = `üîçùó≤ùó∫ùóΩùóøùó≤ùòÄùóÆ ùó¥ùó≤ùóøùóÆùó±ùóÆ ùó∞ùóºùó∫ ùòÄùòÇùó∞ùó≤ùòÄùòÄùóºüîç\n\n

nome: ${ddds.result.nome}
email: ${ddds.result.email}
inscricaoestadual: ${ddds.result.inscricaoestadual}    
cnpj: ${ddds.result.cnpj}

cep: ${ddds.result.endereco.cep}
logradouro: ${ddds.result.endereco.logradouro}
complemento: ${ddds.result.endereco.complemento}
numero: ${ddds.result.endereco.numero}
bairro: ${ddds.result.endereco.bairro}
cidade: ${ddds.result.endereco.cidade}
estado: ${ddds.result.endereco.estado}
estadoSigla: ${ddds.result.endereco.estadoSigla}
telefone: ${ddds.telefone}

    
`
//venom.sendMessage(from, dddlist, {quoted: m})	
hentaiporno = await getBuffer('https://i.ibb.co/6wVpzv2/Venom-Cusult.jpg')
            let message = await prepareWAMessageMedia({ image: hentaiporno }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: `${dddlist}`, hydratedButtons: [{ urlButton: { displayText: 'üë§·ëïO·ëéT·ó©TO', url: 'https://wa.me/559784388524?text=Venom?'}}, { quickReplyButton: { displayText: 'üí∞·ë≠·í™·ó©·ëéOS', id: `${prefix}gp fachar`}}, { quickReplyButton: { displayText: 'üë•G·ñá·ëå·ë≠O O·ñ¥·ëï', id: `${prefix}gp abrir`}}]}}}), { userJid: m.chat, quoted: m })
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })                          
                  
/*enviarbuton(m.chat, dddlist, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
*/
}
break
case 'cnpj':
if (!c) return m.reply('preciso do cnpj')
if (isNaN(args[0])) return m.reply('Preciso de um cnpj em formato de n√∫mero')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
if (c.length < 20) {
if (c.includes('.') && args[0].includes('-')) return m.reply("n√£o adicione pontos ou -")

cnpj = body.slice(5)
ddds = await axios.get(`https://brasilapi.com.br/api/cnpj/v1/${cnpj}`)
dddlist = `üîçùóñùó¢ùó°ùó¶ùó®ùóüùóßùóî ùóóùóò ùóñùó°ùó£ùóùüîç\n\n
cnpj: ${ddds.data.cnpj}
identificador_matriz_filial: ${ddds.data.identificador_matriz_filial}
descricao_matriz_filial: ${ddds.data.descricao_matriz_filial}
razao_social: ${ddds.data.razao_social}
nome_fantasia: ${ddds.data.nome_fantasia}
situacao_cadastral: ${ddds.data.situacao_cadastral}
descricao_situacao_cadastral: ${ddds.data.descricao_situacao_cadastral}
data_situacao_cadastral: ${ddds.data.data_situacao_cadastral}
motivo_situacao_cadastral: ${ddds.data.motivo_situacao_cadastral}
nome_cidade_exterior: ${ddds.data.nome_cidade_exterior}
codigo_natureza_juridica: ${ddds.data.codigo_natureza_juridica}
data_inicio_atividade: ${ddds.data.data_inicio_atividade}
cnae_fiscal: ${ddds.data.cnae_fiscal}
cnae_fiscal_descricao: ${ddds.data.cnae_fiscal_descricao}
descricao_tipo_logradouro: ${ddds.data.descricao_tipo_logradouro}
logradouro: ${ddds.data.logradouro}
numero: ${ddds.data.numero}
complemento: ${ddds.data.complemento}
bairro: ${ddds.data.bairro}
cep: ${ddds.data.cep}
codigo_municipio: ${ddds.data.codigo_municipio}
municipio: ${ddds.data.municipio}
ddd_telefone_1  : ${ddds.data.ddd_telefone_1}
ddd_telefone_2: ${ddds.data.ddd_telefone_2}
ddd_fax: ${ddds.data.ddd_fax}
qualificacao_do_responsavel: ${ddds.data.qualificacao_do_responsavel}
capital_social: ${ddds.data.capital_social}
porte: ${ddds.data.porte}
descricao_porte: ${ddds.data.descricao_porte}
opcao_pelo_simples  : ${ddds.data.opcao_pelo_simples}                      
data_opcao_pelo_simples: ${ddds.data.data_opcao_pelo_simples}
data_exclusao_do_simples: ${ddds.data.data_exclusao_do_simples}
opcao_pelo_mei: ${ddds.data.opcao_pelo_mei}
situacao_especial: ${ddds.data.situacao_especial}
data_situacao_especial: ${ddds.data.data_situacao_especial}
`
//venom.sendMessage(from, dddlist, {quoted: m})	
hentaiporno = await getBuffer('https://i.ibb.co/6wVpzv2/Venom-Cusult.jpg')
            let message = await prepareWAMessageMedia({ image: hentaiporno }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: `${dddlist}`, hydratedButtons: [{ urlButton: { displayText: 'üë§·ëïO·ëéT·ó©TO', url: 'https://wa.me/559784388524?text=Venom?'}}, { quickReplyButton: { displayText: 'üí∞·ë≠·í™·ó©·ëéOS', id: `${prefix}gp fachar`}}, { quickReplyButton: { displayText: 'üë•G·ñá·ëå·ë≠O O·ñ¥·ëï', id: `${prefix}gp abrir`}}]}}}), { userJid: m.chat, quoted: m })
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })                          
                  
/*enviarbuton(m.chat, dddlist, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
*/
} else {
m.reply('o cnpj inserido e invalido ou o n√∫mero n√£o corresponde')
}
break
case 'ddd': 
if (!isPix) return reply(mess.sempix)
//if (!isOwner && !isPremium) return  reply(` Voc√™ n√£o √© usu√°rio premium!`)
if (!c) return m.reply('preciso do cep')
if (isNaN(args[0])) return m.reply('Preciso de um ip em formato de n√∫mero')
venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
if (c.length < 20) {
if (c.includes('.') && args[0].includes('-')) return m.reply("n√£o adicione pontos ou -")

ddd = body.slice(5)
ddds = await axios.get(`https://brasilapi.com.br/api/ddd/v1/${ddd}`)
dddlist = `Lista de Cidades de ${ddds.data.state} com este DDD ${q}>\n\n`
for (let i = 0; i < ddds.data.cities.length; i++) { dddlist += `${i + 1} ‡ß£Õ°Õú‚û≥ *${ddds.data.cities[i]}*\n` }
//venom.sendMessage(from, dddlist, {quoted: m})	
hentaiporno = await getBuffer('https://i.ibb.co/6wVpzv2/Venom-Cusult.jpg')
            let message = await prepareWAMessageMedia({ image: hentaiporno }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: `${dddlist}`, hydratedButtons: [{ urlButton: { displayText: 'üë§·ëïO·ëéT·ó©TO', url: 'https://wa.me/559784388524?text=Venom?'}}, { quickReplyButton: { displayText: 'üí∞·ë≠·í™·ó©·ëéOS', id: ``}}, { quickReplyButton: { displayText: 'üë•G·ñá·ëå·ë≠O O·ñ¥·ëï', id: `${prefix}mygrupo`}}]}}}), { userJid: m.chat, quoted: m })
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })                          
                  
/*enviarbuton(m.chat, dddlist, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
*/
} else {
m.reply('o cep inserido e invalido ou o n√∫mero n√£o corresponde')
}
break
case 'delete3': {
let { chat, fromMe, id, } = m.type
              ///  if (!isBaileys) throw 'Voc√™ pode marcar somente as mensagems do bot!'
                venom.sendMessage(m.chat, { delete: { remoteJid: m.chat, fromMe: true, id: m.type.id, participant: m.type.sender } })
            }
            break 
case 'cpf3': 
reply(mess.consult)
if (!isPix) return reply(mess.sempix)
//  if (isLimit < 1) return reply("Seu limite acabou, por favor compre desta forma .compra limit quantos\n\nCaso queria limit infinito mande .infinito")
//  kurangLimit(m.sender, 1)
if (c.length < 20) {
if (!q) return reply ('Ex: /cpf3 07889044348')
///venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 99999, ptt: "true" } , {quoted: m }) 	   
 //	    https://ayumi-apis.herokuapp.com/api/consulta/cpfr3?cpf=07889044348&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ
var send = await fetchJson(`https://ayumi-apis.herokuapp.com/api/consulta/cpfr3?cpf=${q}&apikey=MQz9ZgKpgBP5NPh7jqGhTO3NQ`)

let cpf2 = `
  ${send.resultado.resultado}
 ` 
hentaiporno = await getBuffer('https://i.ibb.co/6wVpzv2/Venom-Cusult.jpg')
            let message = await prepareWAMessageMedia({ image: hentaiporno }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: `${cpf2}`, hydratedButtons: [{ urlButton: { displayText: 'üë§·ëïO·ëéT·ó©TO', url: 'https://wa.me/559784388524?text=Venom?'}}, { quickReplyButton: { displayText: 'üí∞·ë≠·í™·ó©·ëéOS', id: `${prefix}gp fachar`}}, { quickReplyButton: { displayText: 'üë•G·ñá·ëå·ë≠O O·ñ¥·ëï', id: `${prefix}gp abrir`}}]}}}), { userJid: m.chat, quoted: m })
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })                          
                  
                  /*enviarbuton(m.chat, dddlist, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
*/
} else {
m.reply('o cpf inserido e invalido ou o n√∫mero n√£o corresponde')
}
break
case 'cassino': {
var teste1 = sotoy[Math.floor(Math.random() * (sotoy.length))]	
ppg = Math.floor(Math.random() * 13) + 349
if ((teste1 == 'ü•ë : ü•ë : ??') ||(teste1 == 'üçâ : üçâ : üçâ') ||(teste1 == 'üçì : üçì : üçì') ||(teste1 == 'üçé : üçé : üçé') ||(teste1 == 'üçç : ?? : üçç') ||(teste1 == 'ü•ù : ü•ù : ü•ù') ||(teste1 == 'üçë : üçë : üçë') ||(teste1 == '?? : ü•• : ??') ||(teste1 == 'üçã : üçã : üçã') ||(teste1 == 'üçê : üçê : üçê') ||(teste1 == 'üçå : üçå : üçå') ||(teste1 == 'üçí : üçí : üçí') ||(teste1 == 'üîî : üîî : üîî') ||(teste1 == 'üçä : ?? : üçä') ||(teste1 == 'üçá : üçá : üçá')) {
var vitr = "Voc√™ ganhou!!!"
} else {
var vitr = "Voc√™ perdeu..."
}
pika = `Consiga 3 iguais para ganhar
‚ï≠‚ïæ‚ïæ‚ïæ‚ïæ ‚â™ ‚Ä¢‚ùà‚Ä¢ ‚â´ ‚ïæ‚ïæ‚ïæ‚ïæ‚ïó
‚ïë‚ïæ‚ïæ‚ïæ ‚â™CASSINO‚â´ ‚ïæ‚ïæ‚ïæ‚ïù         
‚ïë                                             
‚ïë                                             
‚ïë ‚îÅ‚îÅ‚îÅ‚îÅ ${teste1}  ‚óÑ‚îÅ‚îÅ‚îõ
‚ïë            
‚ïë                                           
‚ïë‚ïæ‚ïæ‚ïæ ‚â™ CASSINO‚â´ ‚ïæ‚ïæ‚ïæ‚ïó       
‚ïö‚ïæ‚ïæ‚ïæ‚ïæ ‚â™ ‚Ä¢‚ùà‚Ä¢ ‚â´ ‚ïæ‚ïæ‚ïæ‚ïæ‚ïù`
enviarbuton(from, pika, `${vitr} :)`,  [{ callButton: { displayText: 'Venom call', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'ü•ùjoga novamenteüçé', id: 'cassino'}}], {quoted: { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast" } : {}) }, message: { "imageMessage": { "url": "https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc", "mimetype": "image/jpeg", "caption": "", "fileSha256": "+Ia+Dwib70Y1CWRMAP9QLJKjIJt54fKycOfB2OEZbTU=", "fileLength": "28777", "height": 1080, "width": 1079, "mediaKey": "vXmRR7ZUeDWjXy5iQk17TrowBzuwRya0errAFnXxbGc=", "fileEncSha256": "sR9D2RS5JSifw49HeBADguI23fWDz1aZu4faWG/CyRY=", "directPath": "/v/t62.7118-24/21427642_840952686474581_572788076332761430_n.enc?oh=3f57c1ba2fcab95f2c0bb475d72720ba&oe=602F3D69", "mediaKeyTimestamp": "1610993486", "jpegThumbnail": fs.readFileSync('dados/botlogo.webp')}}}})
}
break
case'cassio': {
var teste1 = sotoy[Math.floor(Math.random() * (sotoy.length))]	
ppg = Math.floor(Math.random() * 13) + 349
if ((teste1 == 'ü•ë : ü•ë : ??') ||(teste1 == 'üçâ : üçâ : üçâ') ||(teste1 == 'üçì : üçì : üçì') ||(teste1 == 'üçé : üçé : üçé') ||(teste1 == 'üçç : ?? : üçç') ||(teste1 == 'ü•ù : ü•ù : ü•ù') ||(teste1 == 'üçë : üçë : üçë') ||(teste1 == '?? : ü•• : ??') ||(teste1 == 'üçã : üçã : üçã') ||(teste1 == 'üçê : üçê : üçê') ||(teste1 == 'üçå : üçå : üçå') ||(teste1 == 'üçí : üçí : üçí') ||(teste1 == 'üîî : üîî : üîî') ||(teste1 == 'üçä : ?? : üçä') ||(teste1 == 'üçá : üçá : üçá')) {
var vitr = "Voc√™ ganhou!!!"
} else {
var vitr = "Voc√™ perdeu..."
}
let buttons = [
                    {buttonId: `cassino`, buttonText: {displayText: '‚û≥joga novamente‚û≥'}, type: 1}
                ]
                let buttonMessage = {
                    image:  {url: 'https://telegra.ph/file/692385eb5225c1be33900.jpg' },
                    caption: ` Consiga 3 iguais para ganhar
‚ï≠‚ïæ‚ïæ‚ïæ‚ïæ ‚â™ ‚Ä¢‚ùà‚Ä¢ ‚â´ ‚ïæ‚ïæ‚ïæ‚ïæ‚ïó
‚ïë‚ïæ‚ïæ‚ïæ ‚â™CASSINO‚â´ ‚ïæ‚ïæ‚ïæ‚ïù         
‚ïë                                             
‚ïë                                             
‚ïë ‚îÅ‚îÅ‚îÅ‚îÅ ${teste1}  ‚óÑ‚îÅ‚îÅ‚îõ
‚ïë            
‚ïë                                           
‚ïë‚ïæ‚ïæ‚ïæ ‚â™ CASSINO‚â´ ‚ïæ‚ïæ‚ïæ‚ïó       
‚ïö‚ïæ‚ïæ‚ïæ‚ïæ ‚â™ ‚Ä¢‚ùà‚Ä¢ ‚â´ ‚ïæ‚ïæ‚ïæ‚ïæ‚ïù`,
                    footer: `${vitr}`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }
            break
case 'k': {
var teste1 = sotoy[Math.floor(Math.random() * (sotoy.length))]	
ppg = Math.floor(Math.random() * 13) + 349
if ((teste1 == 'ü•ë : ü•ë : ??') ||(teste1 == 'üçâ : üçâ : üçâ') ||(teste1 == 'üçì : üçì : üçì') ||(teste1 == 'üçé : üçé : üçé') ||(teste1 == 'üçç : ?? : üçç') ||(teste1 == 'ü•ù : ü•ù : ü•ù') ||(teste1 == 'üçë : üçë : üçë') ||(teste1 == '?? : ü•• : ??') ||(teste1 == 'üçã : üçã : üçã') ||(teste1 == 'üçê : üçê : üçê') ||(teste1 == 'üçå : üçå : üçå') ||(teste1 == 'üçí : üçí : üçí') ||(teste1 == 'üîî : üîî : üîî') ||(teste1 == 'üçä : ?? : üçä') ||(teste1 == 'üçá : üçá : üçá')) {
var vitr = "Voc√™ ganhou!!!"
} else {
var vitr = "Voc√™ perdeu..."
}
const teste =
`Consiga 3 iguais para ganhar
‚ï≠‚ïæ‚ïæ‚ïæ‚ïæ ‚â™ ‚Ä¢‚ùà‚Ä¢ ‚â´ ‚ïæ‚ïæ‚ïæ‚ïæ‚ïó
‚ïë‚ïæ‚ïæ‚ïæ ‚â™CASSINO‚â´ ‚ïæ‚ïæ‚ïæ‚ïù         
‚ïë                                             
‚ïë                                             
‚ïë ‚îÅ‚îÅ‚îÅ‚îÅ ${teste1}  ‚óÑ‚îÅ‚îÅ‚îõ
‚ïë            
‚ïë                                           
‚ïë‚ïæ‚ïæ‚ïæ ‚â™ CASSINO‚â´ ‚ïæ‚ïæ‚ïæ‚ïó       
‚ïö‚ïæ‚ïæ‚ïæ‚ïæ ‚â™ ‚Ä¢‚ùà‚Ä¢ ‚â´ ‚ïæ‚ïæ‚ïæ‚ïæ‚ïù

${vitr}`
venom.sendMessage(m.chat, { 
text: `${teste}`
}, { quoted: say1 })
}
break
case 'grcep':
send = await fetchJson(`http://brizas-api.herokuapp.com/gerador/cep?apikey=brizaloka`)
teks = `
        
CEP ${send.CEP} 

`
enviarbuton(from, teks, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}], {quoted: { key: { fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast" } : {}) }, message: { "imageMessage": { "url": "https://mmg.whatsapp.net/d/f/At0x7ZdIvuicfjlf9oWS6A3AR9XPh0P-hZIVPLsI70nM.enc", "mimetype": "image/jpeg", "caption": "", "fileSha256": "+Ia+Dwib70Y1CWRMAP9QLJKjIJt54fKycOfB2OEZbTU=", "fileLength": "28777", "height": 1080, "width": 1079, "mediaKey": "vXmRR7ZUeDWjXy5iQk17TrowBzuwRya0errAFnXxbGc=", "fileEncSha256": "sR9D2RS5JSifw49HeBADguI23fWDz1aZu4faWG/CyRY=", "directPath": "/v/t62.7118-24/21427642_840952686474581_572788076332761430_n.enc?oh=3f57c1ba2fcab95f2c0bb475d72720ba&oe=602F3D69", "mediaKeyTimestamp": "1610993486", "jpegThumbnail": fs.readFileSync('dados/botlogo.webp')}}}})
break        
case 'cep':
if (!c) return m.reply('preciso do cep')
if (isNaN(args[0])) return m.reply('Preciso de um ip em formato de n√∫mero')
if (c.length < 20) {
if (c.includes('.') && args[0].includes('-')) return m.reply("n√£o adicione pontos ou -")
api = await fetchJson(`https://viacep.com.br/ws/${c}/json/`)
psq = `*----„Äå üìü CEP üìü „Äç----*\n\n`
psq += `*Cep :* ${api.cep}\n`
psq += `*Rua :* ${api.logradouro}\n`
psq += `*Complemento :* ${api.complemento}\n`
psq += `*Bairro :* ${api.bairro}\n`
psq += `*Localidade :* ${api.localidade}\n`
psq += `*Uf :* ${api.uf}\n`
psq += `*Ibge :* ${api.ibge}\n`
psq += `*Gia :* ${api.gia}\n\n`
psq += `*Ddd :* ${api.ddd}\n`
psq += `*Siafi :* ${api.siafi}\n`
enviarbuton(m.chat, psq, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
} else {
m.reply('o cep inserido e invalido ou o n√∫mero n√£o corresponde')
}
break

case 'playb': {
var t = args.join(' ')
if (!t) return m.reply('Cad√™ o nome da m√∫sica?')
anuf = await fetchJson(`https://akame-apii.herokuapp.com/api/ytsrc?nome=${t}&apikey=edbot`)
const objs = []
for(i=0;i< anuf.resultado.length; +i) {
let data = {
rowId: `${prefix}ytmp3 `+ anuf.resultado[i].url,
title: `.`,
description: anuf.resultado[i].title
}
objs.push(data)
}

const button = {
title: "‚úÖ M√∫sicas encotradas ‚úÖ",
buttonText: "Mostra lista de m√∫sicas",
description: `Palavra chave: ${t}`,
listType: 1,
sections: [
{title: "M√∫sicas relacionadas",
rows: objs
}
]
}
sendListMsg(button.title, button.description, button.buttonText, button.sections)  
}
break

               case 'play3': case 'audio3':
               	    
		    		
                if (!c) throw mess.erro_c
                 m.reply(mess.wait)
                 pesquisa = await yts(c);
                 pesquisa2 = pesquisa.all 
                 resultado = pesquisa2[0].url                            
                ytPlay(q).then(async (data) => {
                    let txt = `*----„Äå YOUTUBE PLAY „Äç----*\n\n`
                    txt += `*üìÑ T√≠tulo :* ${data.t√≠tulo}\n`
                    txt += `*‚öñÔ∏è Tamanho :* ${data.tamanho}\n`
                    txt += `*üëÅÔ∏è visualiza√ß√µes :* ${data.visualiza√ß√µes}\n`
                    txt += `*üëçüèªLikes :* ${data.likes}\n`                    
                    txt += `*üëéüèªDeslikes :* ${data.deslikes}\n`                                        
                    txt += `*‚è±Ô∏è Publicado :* ${data.data_de_upload}\n`                    
                    txt += `*Aguarde estou processando o download...*`
                    enviarArquivoDoLink(m.chat, data.capa, txt, m)
//                    enviarArquivoDoLink(m.chat, data.resultado, '', m)
//                    venom.sendMessage(m.chat, { audio: { url: data.resultado } }, {mimetype: 'audio/mp4', duration: 359996400, ptt:false, quoted: m,thumbnail: thumb, contextInfo: { forwardingScore: 508, isForwarded: true, externalAdReply:{title:data.t√≠tulo,body:"",mediaType:"2",thumbnail:thumb,mediaUrl:resultado}}}).catch(() => reply(mess.erro))        
//                  venom.sendMessage(m.chat, { audio: { url: data.resultado } }, {mimetype: 'audio/mpeg'}, {quoted: m })
                })
                
            break
case 'emoji': 
reply(`transformando o emoji ${c} em figurinha`)
			if (!q) return reply('cade o emoji?')
			qes = args.join(' ')
			emoji.get(`${qes}`).then(emoji => {
			teks = `${emoji.images[4].url}`
    		sendStickerFromUrl(from,`${teks}`)	
    		console.log(teks)
   			})
   			break
            case 'gg':
            venom.sendMessage(m.chat,
{
text: 'lkskskkskskskskskksksksksk', 
quoted: m,
"externalAdReply": {
"title": `ùêÑùêØùê®ùê•ùêÆùê≠ùê¢ùê®ùêß ùêÅùê®ùê≠`,
"body": "",
"previewType": "PHOTO",
"thumbnailUrl": "",
"thumbnail": img,
"sourceUrl": `https://api.whatsapp.com/send?phone=559784388524&text=Eay%20gay`
}
})   
            case 'playvideo2': case 'video2':
            	    
		    		
                if (!c) throw mess.erro_c
                 m.reply(mess.wait)
                ytPlayMp4(q).then(async (data) => {
                    let txt = `*----„Äå YOUTUBE PLAY „Äç----*\n\n`
                    txt += `*üìÑ T√≠tulo :* ${data.t√≠tulo}\n`
                    txt += `*üéûÔ∏è Canal :* ${data.canal}\n`
                    txt += `*üëÅÔ∏è visualiza√ß√µes :* ${data.visualiza√ß√µes}\n`
                    txt += `*‚è±Ô∏è Publicado :* ${data.publicado}\n`                    
                    txt += `*Aguarde estou processando o download...*`
                    enviarArquivoDoLink(m.chat, data.thumb, txt, m)
                    enviarArquivoDoLink(m.chat, data.url, '', m)
                })
                
            break
case 'anime': {
//reply('teste')
                if (!text) throw 'Digite o qu vc esta atrais amigo'
		let { wallpaper } = require('./lib/scraper')
                hun = await wallpaper(text)
                result = hun[Math.floor(Math.random() * hun.length)]
		let buttons = [
                    {buttonId: `anime ${text}`, buttonText: {displayText: 'üå†Proxima Imagemüå†'}, type: 1}
                ]
                let buttonMessage = {
                    image: { url: result1.image[0] },
                    caption: `‚≠î titulo : ${result1.title}\n‚≠î categoria : ${result1.type}\n‚≠î detalhe : ${result1.source}\n‚≠î Url : ${result1.image[2] || result1.image[1] || result1.image[0]}`,
                    footer: `Evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }
            break
case 'pinterest':  {
          //      enviar(resposta.aguarde)
               		let { pinterest } = require('./lib/scraper')
                tesskkk = await pinterest(text)
                result = tesskkk[Math.floor(Math.random() * tesskkk.length)]
                venom.sendMessage(from, { image: { url: result }, caption: 'Url : '+result }, { quoted: m })             
         }
               break      

case 'plaay': case 'ytplay': {
const play = fs.readFileSync('./dados/audio/play.mp3')
                if (!text) return venom.sendMessage(from, { audio: play, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                let yts = require("yt-search")
                let search = await yts(text)
                let playvenom = search.videos[Math.floor(Math.random() * search.videos.length)]
                let buttons = [
                    {buttonId: `playaudi ${q}`, buttonText: {displayText: '‚ô´ Audio'}, type: 1},
                    {buttonId: `playvid ${q}`, buttonText: {displayText: '‚ñ∫ Video'}, type: 1}
                ]
                let buttonMessage = {
                    image: { url: playvenom.thumbnail },
                    caption: `
üî• Titulo: ${playvenom.title}


üî• Dura√ß√£o: ${playvenom.timestamp}

üî• Views: ${playvenom.views}

üî• Publicado h√°: ${playvenom.ago}

üî• Canal: ${playvenom.author.name}

üî• Link: ${playvenom.url}

‚≠î Descri√ß√£o: ${playvenom.description}`,
                    footer: `${nomedobot}`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }
            break
	    case 'ytmp43': case 'ytaudio': {
                if (!text) throw `Exemplo : ${prefix + command} https://youtube.com/watch?v=PtFMh6Tccag%27 128kbps`
		let { aiovideodl } = require('./lib/scraper')
                let result = await aiovideodl(isUrl(text)[0])
                let { url, title, thumbnail, duration, medias } = result
                let quality = args[1] ? args[1] : '128kbps'                
                let media = medias.filter(v => v.videoAvailable == false && v.audioAvailable == true && v.quality == quality).map(v => v)
                if (media[0].formattedSize.split('MB')[0] >= 100.00) return m.reply('Arquivo acima do limite'+util.format(media))
                venom.sendImage(m.chat, thumbnail, `üí¨ Titulo: ${title}\n\n‚≠î Tamanho do Arquivo: ${media[0].formattedSize}\n\nüîó Link: ${url}\n\nüì≤  Tipo: MP3\n\nüéû Resolu√ß√£o: ${args[1] || '128kbps'}\n\n*Enviando Audio, aguarde...*`, m)
                //venom.sendMessage(m.chat, { audio: { url: media[0].url }, mimetype: 'audio/mp4', fileName: `${title}.mp3` }, { quoted: m })
         //   }
            venom.sendMessage(m.chat, { audio: { url: media[0].url }, mimetype: 'audio/mp4', ptt:true, contextInfo:{externalAdReply:{
                title: `Ola ${pushname} video aqu√≠`,
                body: `¬© Venom 2022`,
                thumbnail: img,
mediaType:2,
mediaUrl: `https://youtu.be/${isUrl(text)}`,
sourceUrl: `https://youtu.be/${isUrl(text)}`
                 }}}, { quoted: m })
            }
            break
            case 'ytmp4': case 'ytvideo': {
                if (!text) throw `Exemplo de Uso: ${prefix + command} https://youtube.com/watch?v=PtFMh6Tccag%27 360p`
		let { aiovideodl } = require('./lib/scraper')
                let result = await aiovideodl(isUrl(text)[0])
                let { url, title, thumbnail, duration, medias } = result
                let quality = args[1] ? args[1] : '360p'                
                let media = medias.filter(v => v.videoAvailable == true && v.audioAvailable == false && v.quality == quality).map(v => v)
                if (media[0].formattedSize.split('MB')[0] >= 100.00) return m.reply('Arquivo acima do limite'+util.format(media))
                venom.sendMessage(m.chat, { video: { url: media[0].url }, fileName: `${title}.mp4`, mimetype: 'video/mp4', caption: `üí¨ Titulo: ${title}\n\n‚≠î Tamanho do Arquivo: ${media[0].formattedSize}\n\nüîó Link: ${url}\n\nüì≤  Tipo: MP3\n\nüéû Resolu√ß√£o: ${args[1] || '360p'}` }, { quoted: m })
            }
            break

case 'play1': {
if (!c) throw mess.erro_c
anu2 = await fetchJson(`http://rafinha043-api.herokuapp.com/api/ytplay?nome=${c}&apikey=GkTh5DWW`)
if (anu2.mensagem) return m.reply(anu2.mensagem) 
//m.reply(mess.wait)
//venom.sendMessage(from, { audio: aguarde, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m }) 	    	    
let txt = `*----„Äå YOUTUBE PLAY „Äç----*\n\n`
txt += `*üìÑ T√≠tulo :* ${anu2.resultado.t√≠tulo}\n`
txt += `*üéûÔ∏è Canal :* ${anu2.resultado.canal}\n`
txt += `*üëÅÔ∏è visualiza√ß√µes :* ${anu2.resultado.visualiza√ß√µes}\n`
txt += `*‚è±Ô∏è Publicado :* ${anu2.resultado.publicado}\n`                    
txt += `*Aguarde estou processando o download...*`
buffer = await getBuffer(anu2.resultado.thumb) 
audionkkk = await getBuffer(anu2.resultado.link)
let message = await prepareWAMessageMedia({ image: buffer }, { upload: venom.waUploadToServer })
const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: txt, hydratedButtons: [{ urlButton: { displayText: '‚öôÔ∏è API', url: 'https://venom-api.herokuapp.com/docs'}}, { quickReplyButton: { displayText: 'üé• BAIXAR V√çDEO üé•', id: `playvideo ${anu2.resultado.t√≠tulo}`}}, { quickReplyButton: { displayText: 'üíª BAIXAR GIF üíª', id: `playgif ${anu2.resultado.t√≠tulo}`}}, { quickReplyButton: { displayText: 'üìù DOCUMENTO üìù', id: `playdoc ${anu2.resultado.t√≠tulo}`}}]}}}), { userJid: m.chat, quoted: m })
venom.relayMessage(m.chat, template.message, { messageId: template.key.id })}
venom.sendMessage(m.chat,
{
audio: audionkkk,
mimetype: 'audio/mp4', 
filename: `${anu2.t√≠tulo}.mp3`, 
quoted: m,
thumbnail: null,
"ExternalAdReplyInfo": {
"title": `ùêÑùêØùê®ùê•ùêÆùê≠ùê¢ùê®ùêß ùêÅùê®ùê≠`,
"body": "",
"previewType": "PHOTO",
"thumbnailUrl": "",
"thumbnail": img,
"sourceUrl": `https://api.whatsapp.com/send?phone=559784388524&text=Eay%20gay`
}
})
break   
case 'playvideo': {


if (!c) throw mess.erro_c
anu = await fetchJson(`https:// akame-apii.herokuapp.com/api/ytplaymp4?nome=${c}&apikey=AUBJHbxf`)
if (anu.mensagem) return m.reply(anu.mensagem) 
m.reply(mess.wait)
let txt = `*----„Äå YOUTUBE PLAY V√çDEO „Äç----*\n\n`
txt += `*üìÑ T√≠tulo :* ${anu.resultado.t√≠tulo}\n`
txt += `*üéûÔ∏è Canal :* ${anu.resultado.canal}\n`
txt += `*üëÅÔ∏è visualiza√ß√µes :* ${anu.resultado.visualiza√ß√µes}\n`
txt += `*‚è±Ô∏è Publicado :* ${anu.resultado.publicado}\n`                    
txt += `*Aguarde estou processando o download...*`
//buffer = await getBuffer(undefined) 
videokk = await getBuffer(anu.resultado.url)
venom.sendMessage(m.chat,
{
video: videokk,
caption: txt,
quoted: m,
thumbnail: null
})
}
break   
case 'playgif': {


if (!c) throw mess.erro_c
anu = await fetchJson(`https:// akame-apii.herokuapp.com/api/ytplaymp4?nome=${c}&apikey=AUBJHbxf`)
if (anu.mensagem) return m.reply(anu.mensagem) 
m.reply(mess.wait)
let txt = `*----„Äå YOUTUBE PLAY GIF „Äç----*\n\n`
txt += `*üìÑ T√≠tulo :* ${anu.resultado.t√≠tulo}\n`
txt += `*üéûÔ∏è Canal :* ${anu.resultado.canal}\n`
txt += `*üëÅÔ∏è visualiza√ß√µes :* ${anu.resultado.visualiza√ß√µes}\n`
txt += `*‚è±Ô∏è Publicado :* ${anu.resultado.publicado}\n`                    
txt += `*Aguarde estou processando o download...*`
//buffer = await getBuffer(undefined) 
videokk = await getBuffer(anu.resultado.url)
venom.sendMessage(m.chat,
{
video: videokk,
caption: txt,
quoted: m,
thumbnail: null,
gifPlayback: true
})
}
break   
case 'playdoc': {


if (!c) throw mess.erro_c
anu2 = await fetchJson(`https://akame-apii.herokuapp.com/api/ytplaymp4?nome=${c}&apikey=AUBJHbxf`)
if (anu2.mensagem) return m.reply(anu2.mensagem) 
m.reply(mess.wait)
let txt = `*----„Äå YOUTUBE PLAY GIF „Äç----*\n\n`
txt += `*üìÑ T√≠tulo :* ${anu2.resultado.t√≠tulo}\n`
txt += `*üéûÔ∏è Canal :* ${anu2.resultado.canal}\n`
txt += `*üëÅÔ∏è visualiza√ß√µes :* ${anu2.resultado.visualiza√ß√µes}\n`
txt += `*‚è±Ô∏è Publicado :* ${anu2.resultado.publicado}\n`                    
txt += `*Aguarde estou processando o download...*`
//buffer = await getBuffer(undefined) 
audiodockk = await getBuffer(anu2.resultado.url)
venom.sendMessage(m.chat,
{
document: audiodockk,
mimetype: 'audio/mp3',
filename: `${anu2.resultado.t√≠tulo}.mp3`, 
caption: txt,
quoted: m,
thumbnail: null
//gifPlayback: true
})
}
break   
               case 'ytmp3': case 'youtbmp3': {
               	    
		    		
                if (!c) throw mess.erro_c
                if (!isUrl(args[0]) && !args[0].includes('youtu.be')) throw 'Preciso de um link que seja do youtube!'
                slamsc = `${c.split("https://youtu.be/")[0]}`
                teste = 'https://youtu.be/' + slamsc
                 m.reply(mess.wait)
                   data = await fetchJson(`https:// akame-apii.herokuapp.com/api/ytmp3?link=${teste}&apikey=edbot`)
                    let txt = `*----„Äå YTMP3 „Äç----*\n\n`
                    txt += `*üìÑ T√≠tulo :* ${data.t√≠tulo}\n`
                    txt += `*üéûÔ∏è Canal :* ${data.canal}\n`
                    txt += `*üëÅÔ∏è visualiza√ß√µes :* ${data.visualiza√ß√µes}\n`
                    txt += `*‚è±Ô∏è Publicado :* ${data.publicado}\n`                    
                    txt += `*Aguarde estou processando o download...*`
                    buffer = await getBuffer(data.thumb) 
                    audiokkkk = await getBuffer(data.link)
                    let message = await prepareWAMessageMedia({ image: buffer }, { upload: venom.waUploadToServer })
                    const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
                    templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: txt, hydratedButtons: [{ urlButton: { displayText: '‚öôÔ∏è API', url: 'https:// venom-apii.herokuapp.com/docs'}}, { quickReplyButton: { displayText: 'üé• BAIXAR V√çDEO üé•', id: `playvideo ${anu.resultado.t√≠tulo}`}}, { quickReplyButton: { displayText: 'üíª BAIXAR GIF üíª', id: `playgif ${anu.resultado.t√≠tulo}`}}, { quickReplyButton: { displayText: 'üìù DOCUMENTO üìù', id: `playdoc ${anu.resultado.t√≠tulo}`}}]}}}), { userJid: m.chat, quoted: m })
                    venom.relayMessage(m.chat, template.message, { messageId: template.key.id })}
                    venom.sendMessage(m.chat,
                    {
                    audio: audiokkkk,
                    mimetype: 'audio/mp4', 
                    filename: `${data.t√≠tulo}.mp3`, 
                    quoted: m,
                    thumbnail: null
                    })
                    
                   break
             case 'ytmp4': case 'youtbmp4':
             	    
		    		
                if (!c) throw mess.erro_c
                if (!isUrl(args[0]) && !args[0].includes('youtu.be')) throw 'Preciso de um link que seja do youtube!'
                 m.reply(mess.wait)
                ytDonlodMp4(q).then(async (data) => {
                    let txt = `*----„Äå YTMP4 „Äç----*\n\n`
                    txt += `*üìÑ T√≠tulo :* ${data.t√≠tulo}\n`
                    txt += `*üéûÔ∏è Canal :* ${data.canal}\n`
                    txt += `*üëÅÔ∏è visualiza√ß√µes :* ${data.visualiza√ß√µes}\n`
                    txt += `*‚è±Ô∏è Publicado :* ${data.publicado}\n`                    
                    txt += `*Aguarde estou processando o download...*`
                    enviarArquivoDoLink(m.chat, data.thumb, txt, m)
                    enviarArquivoDoLink(m.chat, data.link, '', m)
                })
                
            break
case 'beautiful':
if (!isPremium) return reply(mess.premium)
	//if (!quoted) throw mess.marqueimgsticker
		//m.reply(mess.wait)
		
                
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito beautiful no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/beautiful?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito beautiful adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'bobross':
if (!isPremium) return reply(mess.premium)
	//if (!quoted) throw mess.marqueimgsticker
		//m.reply(mess.wait)
		
                
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito bobross no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/bobross?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito bobross adicionado no seu perfilüî•', m)
}, 7000)
break   
case 'clear': {

await venom.sendMessage(jid, { text: 'oie' })
}
case 'hitler':
if (!isPremium) return reply(mess.premium)
	//if (!quoted) throw mess.marqueimgsticker
		//m.reply(mess.wait)
		
                
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito hitler no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/hitler?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito hitler adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'notstonk':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito notstonk no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/notstonk?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito notstonk adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'poutine':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito poutine no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/poutine?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito poutine adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'delp':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://brizas-api.herokuapp.com/montage/delete?apikey=brizaloka&img=${util.format(teste)}`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito adicionado no seu perfilüî•', fmenu)
}, 7000)
break      
case 'rip':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito rip no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/rip?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito rip adicionado no seu perfilüî•', fmenu)
}, 7000)
break      
case 'trash':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito trash no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/trash?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito trash adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'lisa':
if (!isPremium) return reply(mess.premium)
//('[‚ùó] √îpa esse comando e apenas para quem comprou o Premium!\nCusta R$5,00\n\n caso tenha interesse fale com o iago!\n\nwa.me/+15874108061')
if (!c) return m.reply(`preciso do texto tbm amigo(a)`)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõaguarde ai @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/lisa?texto=${c}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•feitinhoüî•', m)
}, 7000)
break      
case 'komunis':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito komunis no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/komunis?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito komunis adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'wasted':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito wasted no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/wasted?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito wasted adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'circulo':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito circulo no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/circulo?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito circulo adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'bolsonaro':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito bolsonaro no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/bolsonaro?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito bolsonaro adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'triggered':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito triggered no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/triggered?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito triggered adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'embacado':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito embacado no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/embacado?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito embacado adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'cinza':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito cinza no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/cinza?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito cinza adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'facepalm':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito facepalm no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/facepalm?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito facepalm adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'Invert':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito Invert no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/Invert?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito Invert adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'preso':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito preso no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/preso?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito preso adicionado no seu perfilüî•', m)
}, 7000)
break      
case 'pixelate':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito pixelate no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/pixelate?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito pixelate adicionado no seu perfilüî•', m)
}, 7000)
break   
case 'tumulo':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito tumulo no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/tumulo?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito tumulo adicionado no seu perfilüî•', m)
}, 7000)
break   
case 'patrick':
if (!isPremium) return reply(mess.premium)
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito patrick no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/patrick?img=${util.format(teste)}&apikey=Venom`
enviarArquivoDoLink(m.chat, oi, 'üî•efeito patrick adicionado no seu perfilüî•', m)
}, 7000)
break   

case 'wanted':
if (!isPremium) return reply(mess.premium)
	//if (!quoted) throw mess.marqueimgsticker
		//m.reply(mess.wait)
		
                
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito wanted no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/wanted?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito wanted adicionado no seu perfilüî•', m)
}, 7000)
break            
            case 'sepia':
            if (!isPremium) return reply(mess.premium)
	//if (!quoted) throw mess.marqueimgsticker
		//m.reply(mess.wait)
		
                
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}		    
m.reply(`‚åõAdicionando afeito sepia no seu perfil @${m.sender.split("@")[0]}_*`)
setTimeout(async() => {		    
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/sepia?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito sepia adicionado no seu perfilüî•', m)
}, 7000)
break
case 'adicpix': 
if (!isVenom) return m.reply('Somente o Venom pode adicionar usu√°rios pix!')
//if (!isGroup) return reply('Esse comando so fuciona em grupo üëçüòé')
premm = body.slice(9)
pixNumber.push(`${premm}@s.whatsapp.net`)
fs.writeFileSync('./dados/premium/pix.json', JSON.stringify(pixNumber))
venom.sendText(m.chat, `Tornou-se usu√°rio pix wa.me/${premm}\n\n`, tobLoc,)      
break
case 'deletapix':
if (!isVenom) return m.reply('Somente o Venom pode adicionar usu√°rios pix!')
		
				premm = body.slice(9)
				pixNumber.splice(`${premm}@s.whatsapp.net`)
				fs.writeFileSync('./dados/premium/pix.json', JSON.stringify(pixNumber))
				//venom.sendMessage(from, ``,MessageType.text, { quoted: mek, contextInfo: { forwardingScore: 508, isForwarded: true}})
				venom.sendText(m.chat, `Voce n e mais usu√°rio de pix wa.me/${premm}`, tobLoc,)      
				break

case 'addprem': 
if (!isVenom) return m.reply('Somente o Venom pode adicionar usu√°rios premium!')
if (!isGroup) return reply('Esse comando so fuciona em grupo üëçüòé')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return 
var mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
var pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}`
}
premium.push(`${mentioned}`)
fs.writeFileSync('./dados/premium/premium.json', JSON.stringify(premium))
var susp = `@${mentioned[0].split('@')[0]} foi adicionado √† lista de usu√°rios premium com sucesso `
mentions(`${susp}`, mentioned, true)   
break

case 'dellprem': 
if (!isVemom) return m.reply('Somente o Venom pode deleta usu√°rios premium!')
if (!isGroup) return reply('Esse comando so fuciona em grupo üëçüòé')
if (m.message.extendedTextMessage === undefined || m.message.extendedTextMessage === null) return 
var mentioned = m.message.extendedTextMessage.contextInfo.mentionedJid
var pru = '.\n'
for (let _ of mentioned) {
pru += `@${_.split('@')[0]}\n`
}
let dellprem = command.slice(12)
let positio = premium.indexOf(dellprem)
premium.splice(positio, 1)
fs.writeFileSync('./dafos/premium/premium.json', JSON.stringify(premium))
var susp = `@${mentioned[0].split('@')[0]} foi removido da lista de usu√°rios premium `
mentions(`${susp}`, mentioned, true)   
break
            case 'hacker':
if (!isPremium) return reply(mess.premium)            
try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
//rate = body.slice(5)
m.reply(`‚åõ Adicionando hacker sepia no seu perfil  @${m.sender.split("@")[0]}_* üò≥`)
setTimeout(async() => {
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
teste = await TelegraPh(ran)
oi = `https://lolizit-api.herokuapp.com/api/canvas/hacker?img=${util.format(teste)}&apikey=Venom`        
enviarArquivoDoLink(m.chat, oi, 'üî•efeito hacker adicionado no seu perfilüî•', m)
}, 7000)

break            

case 'gay':	
case 'lgbtq':  
	    
		    		
 try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
//rate = body.slice(5)
m.reply(`‚åõ *_Puxando a ficha de gay do @${m.sender.split("@")[0]}_* üò≥`)
setTimeout(async() => {
random = `${Math.floor(Math.random() * 110)}`
feio = random
boiola = random
if (boiola < 20 ) {bo = 'hmm... voc√™ √© heteroüòî'} else if (boiola == 21 ) {bo = '+/- boiola'} else if (boiola == 23 ) {bo = '+/- boiola'} else if (boiola == 24 ) {bo = '+/- boiola'} else if (boiola == 25 ) {bo = '+/- boiola'} else if (boiola == 26 ) {bo = '+/- boiola'} else if (boiola == 27 ) {bo = '+/- boiola'} else if (boiola == 2 ) {bo = '+/- boiola'} else if (boiola == 29 ) {bo = '+/- boiola'} else if (boiola == 30 ) {bo = '+/- boiola'} else if (boiola == 31 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 32 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 33 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 34 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 35 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 36 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 37 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 3 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 39 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 40 ) {bo = 'tenho minha desconfian√ßa...üòë'} else if (boiola == 41 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 42 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 43 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 44 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 45 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 46 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 47 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 4 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 49 ) {bo = 'voc√™ √© n√©?üòè'} else if (boiola == 50 ) {bo = 'voc√™ √© ou n√£o?üßê'} else if (boiola > 51) {bo = 'voc√™ √© gayüôà'
}
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
//reply(mess.wait)
anu = await TelegraPh(ran)
oi = `https:// akame-apii.herokuapp.com/api/canvas/gay?img=${util.format(anu)}&apikey=AUBJHbxf`
//reply(util.format(anu))
enviarArquivoDoLink(m.chat, oi, 'O quanto voc√™ √© gay? \n\nVoc√™ √©: ‚ù∞ '+random+'% ‚ù± gay üè≥Ô∏è‚Äçüåà\n\n *_'+bo+'_* ', m)
}, 7000)

break            
/*ppuser = await tobi.getProfilePicture(sender)
//oi2 = `https:// akame-apii.herokuapp.com/api/upload?img=${ppuser}&apikey=AUBJHbxf`
tobiapikk = `https://lolizit-api.herokuapp.com/api/short/tiny?url=${ppuser}&apikey=Tobi`
oi = `https:// akame-apii.herokuapp.com/api/canvas/gay?img=${tobiapikk.rasultado.link}&apikey=AUBJHbxf`
tobi.sendMessage(m.from, oi, image)

ppuser = await venom.profilePictureUrl(m.sender, 'image')
//oi2 = `https:// akame-apii.herokuapp.com/api/upload?img=${ppuser}&apikey=AUBJHbxf`
tobiapikk = `https://lolizit-api.herokuapp.com/api/short/tiny?url=${ppuser}&apikey=Tobi`
oi = `https:// akame-apii.herokuapp.com/api/canvas/gay?img=${tobiapikk.rasultado.link}&apikey=AUBJHbxf`
enviarArquivoDoLink(m.chat, oi, '', m)*/
case 'tapa':	
case 'bater': 
	    
		    		
 try {
ppuser = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppuser = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
cc = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
 try {
ppcoitado = await venom.profilePictureUrl(cc, 'image')
} catch {
ppcoitado = 'https://i0.wp.com/www.gambarunik.id/wp-content/uploads/2019/06/Top-Gambar-Foto-Profil-Kosong-Lucu-Tergokil-.jpg'
}
//m.reply(mess.wait)
ran = getRandom('.jpg')
rano = getRandom('.jpg')
buff = await getBuffer(ppuser)
fs.writeFileSync(ran, buff)
ran2 = getRandom('.jpg')
rano2 = getRandom('.jpg')
buff2 = await getBuffer(ppcoitado)
fs.writeFileSync(ran2, buff2)
//reply(mess.wait)
anu2 = await TelegraPh(ran2)
//anu2 = await TelegraPh(ran2)
oi = `https://akame-apii.herokuapp.com/api/canvas/batslap?img=${util.format(anu2)}&img2=${util.format(anu2)}&apikey=edbot`
//m.reply(util.format(anu))
enviarArquivoDoLink(m.chat, oi, `${pushname} üò¢`, m)

break            
case 'demon':	
case 'demongreen':  


if(!c) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-green-horror-style-text-effect-online-1036.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break
case 'mygit': {            	    		    		
                
                let buttons = [
                    {buttonId: 'ping', buttonText: {displayText: 'üíìüíì'}, type: 1}
                ]
                let buttonMessage = {
                    image: {url: 'https://i.ibb.co/SXHz1kk/20220505-203936.jpg' },
                    caption: `https://github.com/Venom-ofc`,
                    footerText: `Ol√° @${m.sender.split("@")[0]} caso vc queira aprender sobre bot clique no link acima`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
            }            
            break
case 'bass': case 'blown': case 'deep': case 'earrape': case 'fast': case 'fat': case 'nightcore': case 'reverse': case 'robot': case 'slow': case 'smooth': case 'tupai':
                try {
                let set
                if (/bass/.test(command)) set = '-af equalizer=f=54:width_type=o:width=2:g=20'
                if (/blown/.test(command)) set = '-af acrusher=.1:1:64:0:log'
                if (/deep/.test(command)) set = '-af atempo=4/4,asetrate=44500*2/3'
                if (/earrape/.test(command)) set = '-af volume=12'
                if (/fast/.test(command)) set = '-filter:a "atempo=1.63,asetrate=44100"'
                if (/fat/.test(command)) set = '-filter:a "atempo=1.6,asetrate=22100"'
                if (/nightcore/.test(command)) set = '-filter:a atempo=1.06,asetrate=44100*1.25'
                if (/reverse/.test(command)) set = '-filter_complex "areverse"'
                if (/robot/.test(command)) set = '-filter_complex "afftfilt=real=\'hypot(re,im)*sin(0)\':imag=\'hypot(re,im)*cos(0)\':win_size=512:overlap=0.75"'
                if (/slow/.test(command)) set = '-filter:a "atempo=0.7,asetrate=44100"'
                if (/smooth/.test(command)) set = '-filter:v "minterpolate=\'mi_mode=mci:mc_mode=aobmc:vsbmc=1:fps=120\'"'
                if (/tupai/.test(command)) set = '-filter:a "atempo=0.5,asetrate=65100"'
                if (/audio/.test(mime)) {
                m.reply(`adicionando afeito ${command}`)
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                let ran = getRandom('.mp3')
                exec(`ffmpeg -i ${media} ${set} ${ran}`, (err, stderr, stdout) => {
                fs.unlinkSync(media)
                if (err) return console.log(err)
                let buff = fs.readFileSync(ran)
                venom.sendMessage(m.chat, { audio: buff, mimetype: 'audio/mpeg', 'ptt': true }, { quoted : m })
                fs.unlinkSync(ran)
                })
                } else m.reply(`Marque um audio com *${prefix + command}*`)
                } catch (e) {
                m.reply(e)
                }
                break	
case 'screenshotweb':{
              //   if (isBan) return replyBan('Lo sentimos, ha sido prohibido, chatee con el propietario a continuaci√≥n para abrirlo')
                 if (!text) throw `Exemplo: *${prefix + command} https://github.com/Venom-ofc*`
                 reply(`fazendo captura do sit ${c}`)
                 venom.sendMessage(m.chat, {image: {url: "https://api.akuari.my.id/other/ssweb?link="+text}})
            }
            break              
case 'setppgroup': case 'setppgrup': case 'setppgc': {
                //if (!m.isGroup) throw mess.group
               // if (!isAdmins) throw mess.admin
                if (!quoted) throw `Enviar/Responder imagen COM o t√≠tulo ${prefix + command}`
                if (!/image/.test(mime)) throw `Envie/Responder imagem com  t√≠tulo ${prefix + command}`
                if (/webp/.test(mime)) throw `Envie/Responder imagem com t√≠tulo ${prefix + command}`
                let media = await venom.downloadAndSaveMediaMessage(quoted)
                await venom.updateProfilePicture(m.chat, { url: media }).catch((err) => fs.unlinkSync(media))
                reply('prontinho')
                }
                break                          
case 'toxic':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-green-horror-style-text-effect-online-1036.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'metalfire':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait) 
logos.textpro("https://textpro.me/hot-metal-text-effect-843.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'thunder':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait) 
logos.textpro("https://textpro.me/create-thunder-text-effect-online-881.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'neongreen':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/green-neon-text-effect-874.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'neontxt':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/free-advanced-glow-text-effect-873.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'rainbow':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/3d-rainbow-color-calligraphy-text-effect-1049.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'ice':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/ice-cold-text-effect-862.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'lapis':  

	
case 'l√°pis':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-sketch-text-effect-online-1044.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'gameov':  

 
case 'gameover':  
 
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/video-game-classic-8-bit-text-effect-1037.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case '3dstone':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/3d-stone-cracked-cool-text-effect-1029.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'fiction':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-science-fiction-text-effect-online-free-1038.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'wall':  


case 'break':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/break-wall-text-effect-871.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'blood':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/blood-text-on-the-frosted-glass-941.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'joker':  

	
case 'jokerlogo':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-logo-joker-online-934.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'demon':  

	
case 'demongreen':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-green-horror-style-text-effect-online-1036.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'natal':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-christmas-holiday-snow-text-effect-1007.html", c).then(async (data) => { 
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'asfalto':  

	
if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/road-warning-text-effect-878.html", c).then(async (data) => { 
try { 
let di = await getBuffer(data)
await venom.sendMessage(m.chat, { image: di, quoted: m})
console.log(data)
 } catch(err) { 
console.log(err)
} 
});
break

case 'neon3d':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-3d-neon-light-text-effect-online-1028.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'neon':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/neon-light-text-effect-with-galaxy-style-981.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'ossos':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/skeleton-text-effect-online-929.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'jeans':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/denim-text-effect-online-919.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'metalblue':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/glossy-blue-metal-text-effect-967.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'carbon':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/glossy-carbon-text-effect-965.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'pink':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/holographic-3d-text-effect-975.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'style':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/1917-style-text-effect-online-980.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'vidro':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/dropwater-text-effect-872.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'areia':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/write-in-sand-summer-beach-free-online-991.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'neve':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/xmas-cards-3d-online-942.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'neon3':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-futuristic-technology-neon-light-text-effect-1006.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'nuvem':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-cloud-text-effect-on-the-sky-online-1004.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'horror':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/horror-blood-text-effect-online-883.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break
case 'consultrrrras':
            const sections = [
                {
                title: "Consultar Telefone (3 M√≥dulos)",
                rows: [
                    {title: "Tel", rowId: "/tel", description: "3 tipos de Consultas."},
                    {title: "Puxar", rowId: "/puxar", description: "Digite /puxar e marque uma pessoa."},
                    {title: "Localizar", rowId: "/localizar", description: "Digite /localizar e marque uma pessoa. | Irei localizar o n√∫mero marcado"}
                ]
                },
               {
                title: "Consultar CPF (3 M√≥dulos)",
                rows: [
                    {title: "Cpf", rowId: "/cpf", description: "Puxada Completa."},
                    {title: "Cpf2", rowId: "/cpf2", description: "Puxada Completa."},
                    {title: "Cpf3", rowId: "/cpf3", description: "Puxada Completa."}
                ]
                },
                {
                    title: "Consultar Nome (2 M√≥dulos)",
                    rows: [
                        {title: "Nome", rowId: "/nome", description: "Puxada Simples."},
                        {title: "Nome2", rowId: "/nome2", description: "Puxada Completa."},
                        
                    ]
                    
                    },
                    {
                        title: "Consultar Placa:",
                        rows: [
                            {title: "Placa", rowId: "/placa", description: "Puxada Completa."},
                            
                        ]
                        
                        },
                        {
                            title: "Consultar Cep:",
                            rows: [
                                {title: "Cep", rowId: "/cep", description: "Puxada Completa."},
                                
                            ]
                            
                            },
                        {
                            title: "Consultar Bin:",
                            rows: [
                                {title: "Bin", rowId: "/bin", description: "Puxada Completa."},
                                
                            ]
                            
                            }
            ]
            
             txtf = `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üîò Contrate agora o mais completo bot de consultas;
 
üîò Consultas online 24h por dia, pague atrav√©s do Mercado Pago, boleto ou Pix.

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`
            const listMessage = {
               
              text: txtf,
              footer: "Clique em Consultas abaixo para ver as consultas dispon√≠veis",
              title: "*‚òëÔ∏è ùó†ùóòùó°ùó® ùóóùóò ùóñùó¢ùó°ùó¶ùó®ùóüùóßùóîùó¶*",
              buttonText: "Consultas",
              sections
            }
            
            venom.sendMessage(m.chat, listMessage)
              
break    
case 'matrix':  


if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/matrix-style-text-effect-online-884.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'transformer':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-transformer-text-effect-online-1035.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'berry':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-berry-text-effect-online-free-1033.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'luxury':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/3d-luxury-gold-text-effect-online-1003.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'colaq':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-3d-glue-text-effect-with-realistic-style-986.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'thunderv2':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/online-thunder-text-effect-generator-1031.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'demonfire':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-magma-hot-text-effect-online-1030.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'glitch2':  

 
tp = args.join(" ")
if(!tp.includes("/")) return m.reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} oi/oi`)
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-glitch-text-effect-online-free-1026.html",args.join(' ').split('/')[0], args.join(' ').split('/')[1]).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break 

case 'grafity':  

 
tp = args.join(" ")
if(!tp.includes("/")) return m.reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} oi/oi`)
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-cool-graffiti-text-on-the-wall-1010.html",args.join(' ').split('/')[0], args.join(' ').split('/')[1]).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break 
break
case 'steel':  

 
td = args.join(" ")
if(!td.includes("/")) return m.reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} oi/oi`)
m.reply(mess.wait)
logos.textpro("https://textpro.me/3d-steel-text-effect-877.html",args.join(' ').split('/')[0], args.join(' ').split('/')[1]).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break 

case 'stone':  

 
tp = args.join(" ")
if(!tp.includes("/")) return m.reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} oi/oi`)
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-a-stone-text-effect-online-982.html",args.join(' ').split('/')[0], args.join(' ').split('/')[1]).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'space':  


tp = args.join(" ")
if(!tp.includes("/")) return m.reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} oi/oi
tem que ter a / sen√£o n√£o vai.`)
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-space-3d-text-effect-online-985.html",args.join(' ').split('/')[0], args.join(' ').split('/')[1]).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'neondevil':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-neon-devil-wings-text-effect-online-free-1014.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break
case 'play': case 'ytplay': {
	        //    if (isBan) return replyBan('Lo sentimos, ha sido prohibido, chatee con el propietario a continuaci√≥n para abrirlo')
	    	 //   if (!isPremium && global.db.data.users[m.sender].limit < 1) return reply(mess.endLimit) //ae
		     //   db.data.users[m.sender].limit -= 1 // -1 limit
                if (!text) throw `Exemplo : ${prefix + command} despacito`
                let yts = require("yt-search")
                let search = await yts(text)
                let anu = search.videos[Math.floor(Math.random() * search.videos.length)]
                    ngen = `
‚û£ Titulo : ${anu.title}
‚û£ ID : ${anu.videoId}
‚û£ Dura√ß√£o : ${anu.timestamp}
‚û£ Visualiza√ß√£o : ${anu.views}
‚û£ Fecha : ${anu.ago}
‚û£ Autor : ${anu.author.name}
‚û£ Canal : ${anu.author.url}
‚û£ Descri√ß√£o: ${anu.description}
`
 let message = await prepareWAMessageMedia({ image: { url: anu.thumbnail } }, { upload: venom.waUploadToServer })
            const template = generateWAMessageFromContent(m.chat, proto.Message.fromObject({ 
            templateMessage: { hydratedTemplate: { imageMessage: message.imageMessage, hydratedContentText: `${ngen}`, hydratedButtons: [{ urlButton: { displayText: 'Url da m√∫sica', url: `${anu.url}`}}, { quickReplyButton: { displayText: 'üéµ 128kbps', id: `/ytmp43 ${anu.url} 128kbps`}}, { quickReplyButton: { displayText: 'üìπ 360p', id: `/ytmp4 ${anu.url} 360p`}},{quickReplyButton: {displayText: 'Mas resultados',id: `play2 ${anu.url}`}}]}}}), { userJid: m.chat, quoted: m })  
            venom.relayMessage(m.chat, template.message, { messageId: template.key.id })                          
   }               
/*enviarbuton(m.chat, dddlist, `Compre a api :)`,  [{ callButton: { displayText: 'COMPRAR API', phoneNumber: '+55 97 98438-8524'}},{ quickReplyButton: { displayText: 'üÖíüÖûüÖúüÖüüÖ°üÖêüÖ° üÖëüÖûüÖ£', id: 'comprabot'}}])
*/            
            break  
case 'ytmp3': case 'ytmusic': {
//if (isBan) return replyBan('Lo sentimos, ha sido prohibido, chatee con el propietario a continuaci√≥n para abrirlo')
let { yta } = require('./lib/y2mate')
if (!text) throw `Exemplo : ${prefix + command} link`
let quality = args[1] ? args[1] : '128kbps'
let media = await yta(text, quality)
if (media.filesize >= 100000) return reply('Arquivo muito pesado '+util.format(media))
venom.sendImage(m.chat, media.img, `‚úá Titulo : ${media.title}\n‚úá Tamanho : ${media.filesizeF}\n‚úá Url : ${isUrl(text)}\n‚úá Ext : MP3\n‚úá Resoluci√≥n : ${args[1] || '128kbps'}`, m)
venom.sendMessage(m.chat, { audio: { url: media.dl_link }, mimetype: 'audio/mp4', ptt:true, contextInfo:{externalAdReply:{
                title: `Ola ${pushname} video aqu√≠`,
                body: `¬© Venom 2022`,
                thumbnail: img,
mediaType:2,
mediaUrl: `https://youtu.be/${isUrl(text)}`,
sourceUrl: `https://youtu.be/${isUrl(text)}`
                 }}}, { quoted: m })
            }
break    
case 'play2': case 'ytplay2': {
//if (isBan) return replyBan('Lo sentimos, ha sido prohibido, chatee con el propietario a continuaci√≥n para abrirlo')
if (!args.join(" ")) return m.reply(`preciso do nome da m√∫sica exemplo : ${prefix + command} Teto m4`)
let yts = require("yt-search")
let search = await yts(args.join(" "))
listSerch = []
teskd = `\nResultados de *${args.join(" ")}* \n\n`
for (let i of search.all) {
listSerch.push({
title: i.title, rowId: `/ytmp3 ${i.url}`, descri√ß√£o: `Autor : ${i.author.name} / ${i.timestamp}`})
}
const sections = [
{
title: "Total de buscas: " + search.all.length,
rows: listSerch
}
]
const listMessage = {
text: teskd,
footer: "¬© evolution md - X - Venom Mods",
title: "     „Äå Youtube Download „Äç",
buttonText: "Click aqu√≠",
sections
}
venom.sendMessage(from, listMessage, {quoted:m})
}
break                     
case 'cattxt':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/write-text-on-foggy-window-online-free-1015.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'marvel':  

 
tp = args.join(" ")  
if(!tp.includes("/")) return m.reply(`Digite o texto que vai aparecer na imagem | Exemplo: ${prefix + command} oi/oi`)
m.reply(mess.wait)
logos.textpro("https://textpro.me/create-3d-avengers-logo-online-974.html",`${args.join(' ').split('/')[0], args.join(' ').split('/')[1]}`).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'halloween':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/halloween-fire-text-effect-940.html", c).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break

case 'lava':  

if(!q) throw mess.erro_c
m.reply(mess.wait)
logos.textpro("https://textpro.me/lava-text-effect-online-914.html",`${q}`,
["Venom"], ["Sayo"]).then(async (data) => {
enviarArquivoDoLink(m.chat, data, c, m)})

break
            default:

if(budy.includes("https") || budy.includes("https://") || budy.includes("wa.me") || budy.includes("https://wa.me")) {
//bla = fs.readFileSync("./dados/audio/oi.mp3")
if (m.key.fromMe) return
try {
ppimg = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppimg = 'https://telegra.ph/file/265c672094dfa87caea19.jpg'
}            
            
let contentt = await getBuffer(ppimg)
let buttons = [
                    {buttonId: `dono`, buttonText: {displayText: 'üî•quero minha edi√ß√£o üî•'}, type: 1},{buttonId: `mycanal`, buttonText: {displayText: 'üî•canal do venomüî•'}, type: 1}
                ]
                let buttonMessage = {
                    image:  contentt,
                    caption:
/**let buttons = [
                    {buttonId: `rg`, buttonText: {displayText: 'üîÆfazer loginüîÆ'}, type: 1},
{buttonId:`${prefix}allmenu`,buttonText:{displayText:'‚ò∞ pula login‚ò∞'},type:1},
{buttonId:`${prefix}mycanal`,buttonText:{displayText:'üòàCanal Venom Modsüòà'},type:1},

                ]
                let buttonMessage = {
                    image: contentt,
                    caption:*/ ` Ol√° @${sender.split('@')[0]}...\n\nOl√° üòéüî•,seja bem vindo ao servi√ßos Venom Mods
Veja as sugest√µes abaixo

Sou editor fa√ßo como vc quizerüî•ü§ô

So aceito pagamento via pix üëçüí∏üí∞


üéâedi√ß√£o animesüéâ:


üí∞valor das thumb de animesüí∞ 
~~>
Thumb personalizada : $7
Com afeitos e bordas : $8
Letras 3D : 10
Com fontes grafit 11
Com fundos profissional $12
Com renders $13


üéâedi√ß√£o lolisüéâ :


üí∞valor das thumb de lolisüí∞ 
~~>
Thumb personalizada loli : $8
Com afeitos e bordas loli : $9
Letras 3D loli : 10
Com fontes grafit loli $9
Com fundos profissional loli $12
Com renders loli $14

Todos os  pre√ßo e melhor forma pegando via pix so chame se tiver entendesse
So chame se estiver interesse 

Que sua edi√ß√£o r√°pida chame logo atraves deste  link

https://wa.me/559784388524?text=Ol√°+Venom+estou+interessado+em+uma+edi√ß√£o+sua+üî•+`,
                    footer: `Evolution-md divulga√ß√µes`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
console.log('\x1b[1;31m~\x1b[1;37m>', '[', color('divando seu trabalho venom', "red"), ']', color('link detectado', "yellow"), color(`${budy}`, "yellow"), color('de usu√°rio', "yellow"), color('de', "yellow"), color(pushname, "yellow"))
                
return 
}
                    
if (isCmd ) {
semcmd = fs.readFileSync('./dados/audio/atencao.mp3')
                    venom.sendMessage(from, { audio: semcmd, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('comando nao encotrado enviando audio', 'blue'))

/*let contentt = fs.readFileSync(`./src/registro.jpg`)
const media = await venom.prepareMessage(from, contentt, MessageType.image, { thumbnail: null})
*/
try {
ppimg = await venom.profilePictureUrl(m.sender, 'image')
} catch {
ppimg = 'https://telegra.ph/file/265c672094dfa87caea19.jpg'
}            
            
let contentt = await getBuffer(ppimg)
let buttons = [
                    {buttonId: `menu`, buttonText: {displayText: 'üîçmenuüîç'}, type: 1}
                ]
                let buttonMessage = {
                    image:  contentt,
                    caption:
/**let buttons = [
                    {buttonId: `rg`, buttonText: {displayText: 'üîÆfazer loginüîÆ'}, type: 1},
{buttonId:`${prefix}allmenu`,buttonText:{displayText:'‚ò∞ pula login‚ò∞'},type:1},
{buttonId:`${prefix}mycanal`,buttonText:{displayText:'üòàCanal Venom Modsüòà'},type:1},

                ]
                let buttonMessage = {
                    image: contentt,
                    caption:*/ ` Ol√° @${sender.split('@')[0]}...\n\nComando: *${command}* N√£o encontrado no evolution bot.`,
                    footer: `Evolution-md`,
                    buttons: buttons,
                    headerType: 4
                }
                venom.sendMessage(m.chat, buttonMessage, { quoted: m })
console.log('\x1b[1;31m~\x1b[1;37m>', '[', color('COMANDO', "red"), ']', color('Comando', "yellow"), color(`${prefix}${command}`, "yellow"), color('n√£o registrado', "yellow"), color('de', "yellow"), color(pushname, "yellow"))
                
return 
}

            
if (m.mtype == 'imageMessage') {
   if (m.key.fromMe) return
    reply(`imagem detectada do ${pushname} fazendo figurinha automatico`)
    var stream = await downloadContentFromMessage(m.message.imageMessage || m.message.extendedTextMessage?.contextInfo.quotedMessage.imageMessage, 'image')
    var buffer = Buffer.from([])
    for await(const chunk of stream) {
     buffer = Buffer.concat([buffer, chunk])
    }
    let ran = '666.webp'
    fs.writeFileSync(`./${ran}`, buffer)
     ffmpeg(`./${ran}`)
     .on("error", console.error)
     .on("end", () => {
      exec(`webpmux -set exif ./dados/sticker/${ran} -o ./${ran}`, async (error) => {
      console.log(color('enviando figurinha', 'blue'))
       venom.sendMessage(
          from, 
          { 
         sticker: fs.readFileSync(`./${ran}`) 
        }, {quoted: say22 })
				
        fs.unlinkSync(`./${ran}`)
			       
       })
      })
	 .addOutputOptions([
       "-vcodec", 
 	   "libwebp", 
 	   "-vf", 
	   "scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse"
	  ])
	 .toFormat('webp')
	 .save(`${ran}`)
    
         }
         
if (m.mtype == 'videoMessage') {
   if (m.key.fromMe) return
    reply(`video detectado do ${pushname} fazendo figurinha automatico`)
    var stream = await downloadContentFromMessage(m.message.videoMessage || m.message.extendedTextMessage?.contextInfo.quotedMessage.videoMessage, 'video')
    var buffer = Buffer.from([])
    for await(const chunk of stream) {
     buffer = Buffer.concat([buffer, chunk])
    }
    let ran = '666.webp'
    fs.writeFileSync(`./${ran}`, buffer)
     ffmpeg(`./${ran}`)
     .on("error", console.error)
     .on("end", () => {
      exec(`webpmux -set exif ./dados/sticker/${ran} -o ./${ran}`, async (error) => {
      console.log(color('enviando figurinha', 'blue'))
       venom.sendMessage(
          from,
          { 
         sticker: fs.readFileSync(`./${ran}`) 
        }, {  quoted: m, })
				
        fs.unlinkSync(`./${ran}`)
			       
       })
      })
	 .addOutputOptions([
       "-vcodec", 
 	   "libwebp", 
 	   "-vf", 
	   "scale='min(320,iw)':min'(320,ih)':force_original_aspect_ratio=decrease,fps=15, pad=320:320:-1:-1:color=white@0.0, split [a][b]; [a] palettegen=reserve_transparent=on:transparency_color=ffffff [p]; [b][p] paletteuse"
	  ])
	 .toFormat('webp')
	 .save(`${ran}`)
    
         }         

//anti liga√ß√£o//
 const sleep = async (ms) => {
return new Promise(resolve => setTimeout(resolve, ms));
}

venom.ws.on('CB:call', async (json) => { 
const callerId = json.content[0].attrs['call-creator']
if (json.content[0].tag == 'offer') {
await venom.updateBlockStatus(callerId, "block")
await venom.sendMessage(callerId, {text: `‚ùó${pushname} este bot tem um sistema de auto bloqueio por liga√ß√µes  contate o desenvolvedor venom para ser desbloqueado‚ùó`})
await sleep(8000)
console.log('\x1b[1;31m~\x1b[1;37m>', '[', color('‚ùó Anti liga√ß√£o ‚ùó', "red"), ']', color('do n√∫mero', "yellow"), color(`${sender.split('@')[0]}`, "yellow"), color('', "yellow"), color('nick', "yellow"), color(pushname, "yellow"))
    
}
})
	             
if(budy.includes("boa noite") || budy.includes("Boa noite") || budy.includes("Boa Noite") || budy.includes("BOA NOITE")) {
bla = fs.readFileSync("./dados/audio/oi.mp3")
venom.sendMessage(from, {audio: bla, mimetype: "audio/mp4", ptt:true}, {quoted: m})
}
    
if (budy.includes('oie','oi','Oie','OIE','O')) {   	    
oiek = fs.readFileSync('./dados/audio/oi.mp3')
                    venom.sendMessage(from, { audio: oiek, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }
if(budy.includes("Tchau grupo") || budy.includes("tchau") || budy.includes("Xauu") || budy.includes("xau")) {
oiek = fs.readFileSync('./dados/audio/tchau.mp3')
                    venom.sendMessage(from, { audio: oiek, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }                
if(budy.includes("Bot ruim") || budy.includes("Bot muito ruim") || budy.includes("bot ruim") || budy.includes("bot lixo")) {
oiek = fs.readFileSync('./dados/audio/evolutionruim.mp3')
                    venom.sendMessage(from, { audio: oiek, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
                }                      
if(budy.includes("Suave?") || budy.includes("Tranquilo") || budy.includes("que bom") || budy.includes("humm")) {
oiek = fs.readFileSync('./dados/audio/tranquilo.mp3')
                    venom.sendMessage(from, { audio: oiek, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
                }                                      
if(budy.includes("Bot") || budy.includes("bot") || budy.includes("oie bot") || budy.includes("cade o bot")) {
oiekk = fs.readFileSync('./dados/audio/lindobot.mp3')
                    venom.sendMessage(from, { audio: oiekk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }                  
if (budy.startsWith('bot lindo')) {   	   
oiekk = fs.readFileSync('./dados/audio/lindobot.mp3')
                    venom.sendMessage(from, { audio: oiekk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }     
if (budy.startsWith('te amo bot')) {   	   
oiekk = fs.readFileSync('./dados/audio/lindobot.mp3')
                    venom.sendMessage(from, { audio: oiekk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }     

if(budy.includes("muito gay") || budy.includes("Gay") || budy.includes("Seu gay") || budy.includes("Gay de mais")) {
gayk = fs.readFileSync('./dados/audio/gay.mp3')
                    venom.sendMessage(from, { audio: gayk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }  
if(budy.includes("viado") || budy.includes("seu viado") || budy.includes("Viado de mais") || budy.includes("muito viado")) {
gayk = fs.readFileSync('./dados/audio/gay.mp3')
                    venom.sendMessage(from, { audio: gayk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }  
if(budy.includes("Gado") || budy.includes("muito gado") || budy.includes("seu gado") || budy.includes("gado do grupo")) {
gayk = fs.readFileSync('./dados/audio/gado.mp3')
                    venom.sendMessage(from, { audio: gayk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }  

if (budy.startsWith('oie bb')) {   	   
bbk = fs.readFileSync('./dados/audio/bb.mp3')
                    venom.sendMessage(from, { audio: bbk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }  
if (budy.startsWith('bb')) {   	   
bbk = fs.readFileSync('./dados/audio/bb.mp3')
                    venom.sendMessage(from, { audio: bbk, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }  
if (budy.startsWith('fdp')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: fmenu })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }  
if (budy.startsWith('bot fdp')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: fvid })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }                  
if (budy.startsWith('corno')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }   
if (budy.startsWith('fraco')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }   
if (budy.startsWith('seu lixo')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }    
if (budy.startsWith('bot lixo')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }     
if (budy.startsWith('lixo')) {   	   
babac = fs.readFileSync('./dados/audio/babaca.mp3')
                    venom.sendMessage(from, { audio: babac, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })
                     console.log(color('respondendo com √°udio', 'blue'))

              
           
                }                                                                                                                                                                                                                                           
                if (budy.startsWith('=>')) {
                    if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                    function Return(sul) {
                        sat = JSON.stringify(sul, null, 2)
                        bang = util.format(sat)
                            if (sat == undefined) {
                                bang = util.format(sul)
                            }
                            return m.reply(bang)
                    }
                    try {
                        m.reply(util.format(eval(`(async () => { return ${budy.slice(3)} })()`)))
                    } catch (e) {
                        m.reply(String(e))
                    }
                }

                if (budy.startsWith('>')) {
                    if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                    try {
                        let evaled = await eval(budy.slice(2))
                        if (typeof evaled !== 'string') evaled = require( 'modulos_customizados/util').inspect(evaled)
                        await m.reply(evaled)
                    } catch (err) {
                        m = String(err)
                        await m.reply(m)
                    }
                }

                if (budy.startsWith('$')) {
                    if (!isCreator) return venom.sendMessage(from, { audio: apenas, mimetype: "audio/mp4", duration: 359996400, ptt: "true" } , {quoted: m })                
             
                    exec(budy.slice(2), (err, stdout) => {
                        if(err) return m.reply(err)
                        if (stdout) return m.reply(stdout)
                    })
                }
        }
        

    } catch (err) {
      m.reply(util.format(err))
    }
}


let file = require.resolve(__filename)
fs.watchFile(file, () => {
	fs.unwatchFile(file)
	console.log(chalk.redBright(`Update ${__filename}`))
	delete require.cache[file]
	require(file)
})
